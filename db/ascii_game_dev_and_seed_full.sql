/*
SQLyog Community Edition- MySQL GUI v6.16
MySQL - 5.0.27-community : Database - ascii_game_development
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

create database if not exists `ascii_game_development`;

USE `ascii_game_development`;

/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

/*Table structure for table `attack_spells` */

DROP TABLE IF EXISTS `attack_spells`;

CREATE TABLE `attack_spells` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the attack spell',
  `name` varchar(32) NOT NULL COMMENT 'Name of the spell',
  `description` varchar(256) default NULL COMMENT 'Description of the spell',
  `min_level` int(5) NOT NULL COMMENT 'minimum level required to be able to cast the spell',
  `min_dam` int(10) NOT NULL COMMENT 'minimum damage caused by chance from the spell',
  `max_dam` int(10) NOT NULL COMMENT 'maximum damage caused by chance from the spell',
  `dam_from_mag` int(10) NOT NULL COMMENT 'Additional damage caused by number of mag points',
  `dam_from_int` int(10) NOT NULL COMMENT 'Additional damage caused by number of int points',
  `mp_cost` int(10) NOT NULL COMMENT 'mp cost of the spell',
  `hp_cost` int(10) NOT NULL COMMENT 'hp cost of the spell',
  `splash` tinyint(1) NOT NULL COMMENT 'If this spell can naturally target multiple enemies without attenuating. If false, more than one can be targeted, but at a heavy penalty, and damage will only be dealt to one entity in each group (pc, npc creature)',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`),
  KEY `min_level` (`min_level`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `attack_spells` */

LOCK TABLES `attack_spells` WRITE;

insert  into `attack_spells`(`id`,`name`,`description`,`min_level`,`min_dam`,`max_dam`,`dam_from_mag`,`dam_from_int`,`mp_cost`,`hp_cost`,`splash`) values (2,'Burning Pants','Set the enemy\'s pants on fire',10,100,200,1,1,30,0,0),(3,'Magic Missile','To fight the darkness',1,1,15,1,1,3,0,0),(5,'Blood Razor','Razor made from blood.',5,10,20,3,0,5,10,0),(6,'Shockwave','Sonic ripples from the fingertips',7,2,20,2,1,15,0,1),(7,'Blood Storm','torrents of blood strike the enemies',20,20,30,2,1,40,30,1),(8,'Burning Atmosphere','All air ignites',40,40,124,3,3,100,0,1),(9,'Lightning','zap zap zap',15,10,30,4,2,35,0,0),(10,'Death Beam','a beam of deaths',60,500,1000,1,5,350,50,0);

UNLOCK TABLES;

/*Table structure for table `base_items` */

DROP TABLE IF EXISTS `base_items`;

CREATE TABLE `base_items` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the base item',
  `name` varchar(32) NOT NULL COMMENT 'Name of the base item',
  `description` varchar(256) default NULL COMMENT 'description of the item',
  `equip_loc` int(3) NOT NULL COMMENT 'where this item can be equipped. Revisit with how equipable locations are represented',
  `dfn_mod` int(10) NOT NULL COMMENT 'base defense modification',
  `dam_mod` int(10) NOT NULL COMMENT 'base damage modification',
  `price` int(20) NOT NULL COMMENT 'price of the base item.',
  `race_body_type` int(3) default NULL COMMENT 'If null, this can be used by any race. Otherwise, it is restricted to races with this body type.',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`),
  KEY `price` (`price`),
  KEY `race_body_type` (`race_body_type`),
  KEY `price_race_body_type` (`price`,`race_body_type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `base_items` */

LOCK TABLES `base_items` WRITE;

insert  into `base_items`(`id`,`name`,`description`,`equip_loc`,`dfn_mod`,`dam_mod`,`price`,`race_body_type`) values (1,'knife','regular knife',8,0,3,10,NULL),(2,'boots','boots that cover the feet',2,3,0,10,1),(3,'helmet','goes on your head',4,5,0,20,1),(4,'axe','single headed, cuts stuf',1,0,5,15,NULL),(5,'Greaves','Armor for the shins',9,3,0,10,1),(8,'Sword','Along, sharp piece of meta',1,0,10,60,1),(9,'Short Sword','Sword shorter than normal',1,0,6,40,1),(10,'buckler','small hand shield',1,2,1,7,NULL),(11,'shield','Protection',1,8,2,20,NULL),(12,'cape','keeps you warm',7,2,0,9,NULL),(13,'bracers','lower arm protection',8,3,0,5,NULL),(14,'gorget','neck armor',6,2,0,10,1),(15,'t-sheath','tentacle covering',20,5,5,15,3),(16,'flipper','armor for fins',21,3,3,10,3),(17,'metal jaw','a mandible weapon',30,0,10,50,2),(18,'scaled armor','composed of hard scales',31,10,0,35,2),(19,'plate mail','armor for people',3,15,0,75,1),(20,'chitin armor','made from especially thick protien walls',32,20,0,100,2),(21,'nails','hardened points added to the tips of claws',90,0,5,15,2),(22,'rock','a stone can be used as a weapon',1,0,1,2,NULL),(23,'razor kelp','offensive weapon for sea creatures',20,0,9,40,3);

UNLOCK TABLES;

/*Table structure for table `blacksmith_skills` */

DROP TABLE IF EXISTS `blacksmith_skills`;

CREATE TABLE `blacksmith_skills` (
  `id` int(11) NOT NULL auto_increment,
  `base_item_id` int(11) NOT NULL COMMENT 'base item NPC can make at this level with this min sales',
  `min_sales` int(20) NOT NULL COMMENT 'minimum sales for this level and base item',
  `min_mod` int(10) NOT NULL COMMENT 'minimum modification for any statt',
  `max_mod` int(10) NOT NULL COMMENT 'maximum stat modification possible fo a stat.',
  PRIMARY KEY  (`id`),
  KEY `base_item_id` (`base_item_id`),
  KEY `min_sales` (`min_sales`),
  CONSTRAINT `FK_base_items_blacksmith_skills` FOREIGN KEY (`base_item_id`) REFERENCES `base_items` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `blacksmith_skills` */

LOCK TABLES `blacksmith_skills` WRITE;

insert  into `blacksmith_skills`(`id`,`base_item_id`,`min_sales`,`min_mod`,`max_mod`) values (6,1,0,1,3),(7,2,0,1,3),(8,10,30,1,7),(9,3,30,1,4),(10,4,50,1,7),(11,5,10,1,4),(12,8,100,1,5),(13,9,50,1,6),(14,11,100,1,7),(15,12,150,1,5),(16,13,150,1,8),(17,14,200,3,7),(18,15,100,1,6),(19,16,125,1,6),(20,17,125,2,6),(21,18,75,1,6),(22,19,75,1,3),(23,20,75,1,5),(24,21,150,2,7),(25,23,200,3,8),(26,1,1000,5,15),(27,2,1000,5,15),(28,3,1000,5,15),(29,4,1000,5,15),(30,5,1000,5,15),(31,8,1000,5,15),(32,9,1000,5,15),(33,10,1000,5,15),(34,11,1000,5,15),(35,12,1000,5,15),(36,13,1000,5,15),(37,14,1000,5,15),(38,15,1000,5,15),(39,16,1000,5,15),(40,17,1000,5,15),(41,18,1000,5,15),(42,19,1000,5,15),(43,20,1000,5,15),(44,21,1000,5,15),(45,22,1000,5,15),(46,23,1000,5,15),(47,1,5000,20,35),(48,2,5000,20,35),(49,3,5000,20,35),(50,4,5000,20,35),(51,5,5000,20,35),(52,8,5000,20,35),(53,9,5000,20,35),(54,10,5000,20,35),(55,11,5000,20,35),(56,12,5000,20,35),(57,13,5000,20,35),(58,14,5000,20,35),(59,15,5000,20,35),(60,16,5000,20,35),(61,17,5000,20,35),(62,18,5000,20,35),(63,19,5000,20,35),(64,20,5000,20,35),(65,21,5000,20,35),(66,22,5000,20,35),(67,23,5000,20,35),(68,1,100000,30,40),(69,2,100000,30,40),(70,3,100000,30,40),(71,4,100000,30,40),(72,5,100000,30,40),(73,8,100000,30,40),(74,9,100000,30,40),(75,10,100000,30,40),(76,11,100000,30,40),(77,12,100000,30,40),(78,13,100000,30,40),(79,14,100000,30,40),(80,15,100000,30,40),(81,16,100000,30,40),(82,17,100000,30,40),(83,18,100000,30,40),(84,19,100000,30,40),(85,20,100000,30,40),(86,21,100000,30,40),(87,22,100000,30,40),(88,23,100000,30,40),(89,1,500000,50,60),(90,2,500000,50,60),(91,3,500000,50,60),(92,4,500000,50,60),(93,5,500000,50,60),(94,8,500000,50,60),(95,9,500000,50,60),(96,10,500000,50,60),(97,11,500000,50,60),(98,12,500000,50,60),(99,13,500000,50,60),(100,14,500000,50,60),(101,15,500000,50,60),(102,16,500000,50,60),(103,17,500000,50,60),(104,18,500000,50,60),(105,19,500000,50,60),(106,20,500000,50,60),(107,21,500000,50,60),(108,22,500000,50,60),(109,23,500000,50,60),(110,1,2500000,75,100),(111,2,2500000,75,100),(112,3,2500000,75,100),(113,4,2500000,75,100),(114,5,2500000,75,100),(115,8,2500000,75,100),(116,9,2500000,75,100),(117,10,2500000,75,100),(118,11,2500000,75,100),(119,12,2500000,75,100),(120,13,2500000,75,100),(121,14,2500000,75,100),(122,15,2500000,75,100),(123,16,2500000,75,100),(124,17,2500000,75,100),(125,18,2500000,75,100),(126,19,2500000,75,100),(127,20,2500000,75,100),(128,21,2500000,75,100),(129,22,2500000,75,100),(130,23,2500000,75,100),(131,1,12500000,50,150),(132,2,12500000,50,150),(133,3,12500000,50,150),(134,4,12500000,50,150),(135,5,12500000,50,150),(136,8,12500000,50,150),(137,9,12500000,50,150),(138,10,12500000,50,150),(139,11,12500000,50,150),(140,12,12500000,50,150),(141,13,12500000,50,150),(142,14,12500000,50,150),(143,15,12500000,50,150),(144,16,12500000,50,150),(145,17,12500000,50,150),(146,18,12500000,50,150),(147,19,12500000,50,150),(148,20,12500000,50,150),(149,21,12500000,50,150),(150,22,12500000,50,150),(151,23,12500000,50,150),(152,1,62500000,25,300),(153,2,62500000,25,300),(154,3,62500000,25,300),(155,4,62500000,25,300),(156,5,62500000,25,300),(157,8,62500000,25,300),(158,9,62500000,25,300),(159,10,62500000,25,300),(160,11,62500000,25,300),(161,12,62500000,25,300),(162,13,62500000,25,300),(163,14,62500000,25,300),(164,15,62500000,25,300),(165,16,62500000,25,300),(166,17,62500000,25,300),(167,18,62500000,25,300),(168,19,62500000,25,300),(169,20,62500000,25,300),(170,21,62500000,25,300),(171,22,62500000,25,300),(172,23,62500000,25,300),(173,1,200000000,45,600),(174,2,200000000,45,600),(175,3,200000000,45,600),(176,4,200000000,45,600),(177,5,200000000,45,600),(178,8,200000000,45,600),(179,9,200000000,45,600),(180,10,200000000,45,600),(181,11,200000000,45,600),(182,12,200000000,45,600),(183,13,200000000,45,600),(184,14,200000000,45,600),(185,15,200000000,45,600),(186,16,200000000,45,600),(187,17,200000000,45,600),(188,18,200000000,45,600),(189,19,200000000,45,600),(190,20,200000000,45,600),(191,21,200000000,45,600),(192,22,200000000,45,600),(193,23,200000000,45,600);

UNLOCK TABLES;

/*Table structure for table `c_class_levels` */

DROP TABLE IF EXISTS `c_class_levels`;

CREATE TABLE `c_class_levels` (
  `id` int(11) NOT NULL auto_increment,
  `c_class_id` int(11) NOT NULL COMMENT 'c_class ID',
  `level` int(5) NOT NULL,
  `min_xp` int(10) NOT NULL,
  `dam` float(10,1) NOT NULL default '0.0' COMMENT 'damage bonus',
  `dfn` float(10,1) NOT NULL default '0.0' COMMENT 'defense bonus',
  `str` float(10,1) NOT NULL default '0.0' COMMENT 'strength bonus',
  `dex` float(10,1) NOT NULL default '0.0' COMMENT 'dexterity bonus',
  `mag` float(10,1) NOT NULL default '0.0' COMMENT 'magic bonus',
  `int` float(10,1) NOT NULL default '0.0' COMMENT 'intelligence bonus',
  `con` float(10,1) NOT NULL default '0.0' COMMENT 'constitution bonus',
  `freepts` float(2,1) NOT NULL default '0.0' COMMENT 'Bonus stat points player may redistribute freely.',
  PRIMARY KEY  (`id`,`c_class_id`,`level`),
  KEY `c_class_id` (`c_class_id`),
  KEY `level` (`level`),
  KEY `c_class_min_xp` (`c_class_id`,`min_xp`),
  CONSTRAINT `FK_c_classes_c_class_levels` FOREIGN KEY (`c_class_id`) REFERENCES `c_classes` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `c_class_levels` */

LOCK TABLES `c_class_levels` WRITE;

insert  into `c_class_levels`(`id`,`c_class_id`,`level`,`min_xp`,`dam`,`dfn`,`str`,`dex`,`mag`,`int`,`con`,`freepts`) values (5431,1,0,0,10.0,10.0,15.0,5.0,5.0,5.0,15.0,0.0),(5432,1,1,900,11.0,11.0,16.5,5.5,5.5,5.5,16.5,0.0),(5433,1,2,1864,12.0,12.0,18.0,6.0,6.0,6.0,18.0,0.0),(5434,1,3,2972,13.0,13.0,19.5,6.5,6.5,6.5,19.5,0.0),(5435,1,4,4144,14.0,14.0,21.0,7.0,7.0,7.0,21.0,0.0),(5436,1,5,5460,15.0,15.0,22.5,7.5,7.5,7.5,22.5,0.0),(5437,1,6,6840,16.0,16.0,24.0,8.0,8.0,8.0,24.0,0.0),(5438,1,7,8364,17.0,17.0,25.5,8.5,8.5,8.5,25.5,0.0),(5439,1,8,9952,18.0,18.0,27.0,9.0,9.0,9.0,27.0,0.0),(5440,1,9,11748,19.0,19.0,28.5,9.5,9.5,9.5,28.5,0.0),(5441,1,10,13736,20.0,20.0,30.0,10.0,10.0,10.0,30.0,0.0),(5442,1,11,16316,21.0,21.0,31.5,10.5,10.5,10.5,31.5,0.0),(5443,1,12,19280,22.0,22.0,33.0,11.0,11.0,11.0,33.0,0.0),(5444,1,13,23220,23.0,23.0,34.5,11.5,11.5,11.5,34.5,0.0),(5445,1,14,27736,24.0,24.0,36.0,12.0,12.0,12.0,36.0,0.0),(5446,1,15,33612,25.0,25.0,37.5,12.5,12.5,12.5,37.5,0.0),(5447,1,16,40256,26.0,26.0,39.0,13.0,13.0,13.0,39.0,0.0),(5448,1,17,48644,27.0,27.0,40.5,13.5,13.5,13.5,40.5,0.0),(5449,1,18,58056,28.0,28.0,42.0,14.0,14.0,14.0,42.0,0.0),(5450,1,19,69724,29.0,29.0,43.5,14.5,14.5,14.5,43.5,0.0),(5451,1,20,82736,31.0,31.0,46.0,16.0,16.0,16.0,46.0,0.0),(5452,1,21,100228,33.0,33.0,48.5,17.5,17.5,17.5,48.5,0.0),(5453,1,22,121480,35.0,35.0,51.0,19.0,19.0,19.0,51.0,0.0),(5454,1,23,148684,37.0,37.0,53.5,20.5,20.5,20.5,53.5,0.0),(5455,1,24,180800,39.0,39.0,56.0,22.0,22.0,22.0,56.0,0.0),(5456,1,25,220340,41.0,41.0,58.5,23.5,23.5,23.5,58.5,0.0),(5457,1,26,265944,43.0,43.0,61.0,25.0,25.0,25.0,61.0,0.0),(5458,1,27,320444,45.0,45.0,63.5,26.5,26.5,26.5,63.5,0.0),(5459,1,28,382160,47.0,47.0,66.0,28.0,28.0,28.0,66.0,0.0),(5460,1,29,454532,49.0,49.0,68.5,29.5,29.5,29.5,68.5,0.0),(5461,1,30,535560,51.0,51.0,71.0,31.0,31.0,31.0,71.0,0.0),(5462,1,31,629292,53.0,53.0,73.5,32.5,32.5,32.5,73.5,0.0),(5463,1,32,733120,55.0,55.0,76.0,34.0,34.0,34.0,76.0,0.0),(5464,1,33,851700,57.0,57.0,78.5,35.5,35.5,35.5,78.5,0.0),(5465,1,34,981816,59.0,59.0,81.0,37.0,37.0,37.0,81.0,0.0),(5466,1,35,1128732,61.0,61.0,83.5,38.5,38.5,38.5,83.5,0.0),(5467,1,36,1288624,63.0,63.0,86.0,40.0,40.0,40.0,86.0,0.0),(5468,1,37,1467364,65.0,65.0,88.5,41.5,41.5,41.5,88.5,0.0),(5469,1,38,1660520,67.0,67.0,91.0,43.0,43.0,43.0,91.0,0.0),(5470,1,39,1874572,69.0,69.0,93.5,44.5,44.5,44.5,93.5,0.0),(5471,1,40,2104480,72.0,72.0,97.0,47.0,47.0,47.0,97.0,0.0),(5472,1,41,2366948,75.0,75.0,100.5,49.5,49.5,49.5,100.5,0.0),(5473,1,42,2657256,78.0,78.0,104.0,52.0,52.0,52.0,104.0,0.0),(5474,1,43,2984508,81.0,81.0,107.5,54.5,54.5,54.5,107.5,0.0),(5475,1,44,3343056,84.0,84.0,111.0,57.0,57.0,57.0,111.0,0.0),(5476,1,45,3742932,87.0,87.0,114.5,59.5,59.5,59.5,114.5,0.0),(5477,1,46,4177560,90.0,90.0,118.0,62.0,62.0,62.0,118.0,0.0),(5478,1,47,4657900,93.0,93.0,121.5,64.5,64.5,64.5,121.5,0.0),(5479,1,48,5176448,96.0,96.0,125.0,67.0,67.0,67.0,125.0,0.0),(5480,1,49,5745092,99.0,99.0,128.5,69.5,69.5,69.5,128.5,0.0),(5481,1,50,6355400,102.0,102.0,132.0,72.0,72.0,72.0,132.0,0.0),(5482,1,51,7020188,105.0,105.0,135.5,74.5,74.5,74.5,135.5,0.0),(5483,1,52,7730096,108.0,108.0,139.0,77.0,77.0,77.0,139.0,0.0),(5484,1,53,8498868,111.0,111.0,142.5,79.5,79.5,79.5,142.5,0.0),(5485,1,54,9316216,114.0,114.0,146.0,82.0,82.0,82.0,146.0,0.0),(5486,1,55,10196812,117.0,117.0,149.5,84.5,84.5,84.5,149.5,0.0),(5487,1,56,11129440,120.0,120.0,153.0,87.0,87.0,87.0,153.0,0.0),(5488,1,57,12129700,123.0,123.0,156.5,89.5,89.5,89.5,156.5,0.0),(5489,1,58,13185448,126.0,126.0,160.0,92.0,92.0,92.0,160.0,0.0),(5490,1,59,14313212,129.0,129.0,163.5,94.5,94.5,94.5,163.5,0.0),(5491,1,60,15499920,133.0,133.0,168.0,98.0,98.0,98.0,168.0,0.0),(5492,1,61,16785988,137.0,137.0,172.5,101.5,101.5,101.5,172.5,0.0),(5493,1,62,18158792,141.0,141.0,177.0,105.0,105.0,105.0,177.0,0.0),(5494,1,63,19638572,145.0,145.0,181.5,108.5,108.5,108.5,181.5,0.0),(5495,1,64,21211456,149.0,149.0,186.0,112.0,112.0,112.0,186.0,0.0),(5496,1,65,22898932,153.0,153.0,190.5,115.5,115.5,115.5,190.5,0.0),(5497,1,66,24685880,157.0,157.0,195.0,119.0,119.0,119.0,195.0,0.0),(5498,1,67,26595036,161.0,161.0,199.5,122.5,122.5,122.5,199.5,0.0),(5499,1,68,28610032,165.0,165.0,204.0,126.0,126.0,126.0,204.0,0.0),(5500,1,69,30754852,169.0,169.0,208.5,129.5,129.5,129.5,208.5,0.0),(5501,1,70,33011880,173.0,173.0,213.0,133.0,133.0,133.0,213.0,0.0),(5502,1,71,35406348,177.0,177.0,217.5,136.5,136.5,136.5,217.5,0.0),(5503,1,72,37919392,181.0,181.0,222.0,140.0,140.0,140.0,222.0,0.0),(5504,1,73,40577492,185.0,185.0,226.5,143.5,143.5,143.5,226.5,0.0),(5505,1,74,43360536,189.0,189.0,231.0,147.0,147.0,147.0,231.0,0.0),(5506,2,0,0,20.0,5.0,5.0,5.0,0.0,0.0,10.0,5.0),(5507,2,1,680,22.0,5.5,5.5,5.5,0.0,0.0,11.0,5.0),(5508,2,2,1408,24.0,6.0,6.0,6.0,0.0,0.0,12.0,5.0),(5509,2,3,2232,26.0,6.5,6.5,6.5,0.0,0.0,13.0,5.0),(5510,2,4,3104,28.0,7.0,7.0,7.0,0.0,0.0,14.0,5.0),(5511,2,5,4168,30.0,7.5,7.5,7.5,0.0,0.0,15.0,5.0),(5512,2,6,5504,32.0,8.0,8.0,8.0,0.0,0.0,16.0,5.0),(5513,2,7,7288,34.0,8.5,8.5,8.5,0.0,0.0,17.0,5.0),(5514,2,8,9600,36.0,9.0,9.0,9.0,0.0,0.0,18.0,5.0),(5515,2,9,12616,38.0,9.5,9.5,9.5,0.0,0.0,19.0,5.0),(5516,2,10,16416,40.0,10.0,10.0,10.0,0.0,0.0,20.0,9.9),(5517,2,11,21256,42.0,10.5,10.5,10.5,0.0,0.0,21.0,9.9),(5518,2,12,27136,44.0,11.0,11.0,11.0,0.0,0.0,22.0,9.9),(5519,2,13,34232,46.0,11.5,11.5,11.5,0.0,0.0,23.0,9.9),(5520,2,14,42624,48.0,12.0,12.0,12.0,0.0,0.0,24.0,9.9),(5521,2,15,52488,50.0,12.5,12.5,12.5,0.0,0.0,25.0,9.9),(5522,2,16,63904,52.0,13.0,13.0,13.0,0.0,0.0,26.0,9.9),(5523,2,17,77048,54.0,13.5,13.5,13.5,0.0,0.0,27.0,9.9),(5524,2,18,92032,56.0,14.0,14.0,14.0,0.0,0.0,28.0,9.9),(5525,2,19,109064,58.0,14.5,14.5,14.5,0.0,0.0,29.0,9.9),(5526,2,20,128256,61.0,16.0,16.0,16.0,1.0,1.0,31.0,9.9),(5527,2,21,151192,64.0,17.5,17.5,17.5,2.0,2.0,33.0,9.9),(5528,2,22,178240,67.0,19.0,19.0,19.0,3.0,3.0,35.0,9.9),(5529,2,23,209872,70.0,20.5,20.5,20.5,4.0,4.0,37.0,9.9),(5530,2,24,246464,73.0,22.0,22.0,22.0,5.0,5.0,39.0,9.9),(5531,2,25,288480,76.0,23.5,23.5,23.5,6.0,6.0,41.0,9.9),(5532,2,26,336288,79.0,25.0,25.0,25.0,7.0,7.0,43.0,9.9),(5533,2,27,390352,82.0,26.5,26.5,26.5,8.0,8.0,45.0,9.9),(5534,2,28,451040,85.0,28.0,28.0,28.0,9.0,9.0,47.0,9.9),(5535,2,29,519104,88.0,29.5,29.5,29.5,10.0,10.0,49.0,9.9),(5536,2,30,594912,91.0,31.0,31.0,31.0,11.0,11.0,51.0,9.9),(5537,2,31,679504,94.0,32.5,32.5,32.5,12.0,12.0,53.0,9.9),(5538,2,32,772960,97.0,34.0,34.0,34.0,13.0,13.0,55.0,9.9),(5539,2,33,876608,100.0,35.5,35.5,35.5,14.0,14.0,57.0,9.9),(5540,2,34,990240,103.0,37.0,37.0,37.0,15.0,15.0,59.0,9.9),(5541,2,35,1115472,106.0,38.5,38.5,38.5,16.0,16.0,61.0,9.9),(5542,2,36,1251808,109.0,40.0,40.0,40.0,17.0,17.0,63.0,9.9),(5543,2,37,1401152,112.0,41.5,41.5,41.5,18.0,18.0,65.0,9.9),(5544,2,38,1562720,115.0,43.0,43.0,43.0,19.0,19.0,67.0,9.9),(5545,2,39,1738704,118.0,44.5,44.5,44.5,20.0,20.0,69.0,9.9),(5546,2,40,1928032,122.0,47.0,47.0,47.0,22.0,22.0,72.0,9.9),(5547,2,41,2139856,126.0,49.5,49.5,49.5,24.0,24.0,75.0,9.9),(5548,2,42,2373488,130.0,52.0,52.0,52.0,26.0,26.0,78.0,9.9),(5549,2,43,2632656,134.0,54.5,54.5,54.5,28.0,28.0,81.0,9.9),(5550,2,44,2916384,138.0,57.0,57.0,57.0,30.0,30.0,84.0,9.9),(5551,2,45,3229136,142.0,59.5,59.5,59.5,32.0,32.0,87.0,9.9),(5552,2,46,3569520,146.0,62.0,62.0,62.0,34.0,34.0,90.0,9.9),(5553,2,47,3942480,150.0,64.5,64.5,64.5,36.0,36.0,93.0,9.9),(5554,2,48,4346144,154.0,67.0,67.0,67.0,38.0,38.0,96.0,9.9),(5555,2,49,4785936,158.0,69.5,69.5,69.5,40.0,40.0,99.0,9.9),(5556,2,50,5259504,162.0,72.0,72.0,72.0,42.0,42.0,102.0,9.9),(5557,2,51,5772752,166.0,74.5,74.5,74.5,44.0,44.0,105.0,9.9),(5558,2,52,6322848,170.0,77.0,77.0,77.0,46.0,46.0,108.0,9.9),(5559,2,53,6916176,174.0,79.5,79.5,79.5,48.0,48.0,111.0,9.9),(5560,2,54,7549424,178.0,82.0,82.0,82.0,50.0,50.0,114.0,9.9),(5561,2,55,8229456,182.0,84.5,84.5,84.5,52.0,52.0,117.0,9.9),(5562,2,56,8952480,186.0,87.0,87.0,87.0,54.0,54.0,120.0,9.9),(5563,2,57,9725840,190.0,89.5,89.5,89.5,56.0,56.0,123.0,9.9),(5564,2,58,10545264,194.0,92.0,92.0,92.0,58.0,58.0,126.0,9.9),(5565,2,59,11418576,198.0,94.5,94.5,94.5,60.0,60.0,129.0,9.9),(5566,2,60,12341024,203.0,98.0,98.0,98.0,63.0,63.0,133.0,9.9),(5567,2,61,13339392,208.0,101.5,101.5,101.5,66.0,66.0,137.0,9.9),(5568,2,62,14409760,213.0,105.0,105.0,105.0,69.0,69.0,141.0,9.9),(5569,2,63,15562512,218.0,108.5,108.5,108.5,72.0,72.0,145.0,9.9),(5570,2,64,16793056,223.0,112.0,112.0,112.0,75.0,75.0,149.0,9.9),(5571,2,65,18112448,228.0,115.5,115.5,115.5,78.0,78.0,153.0,9.9),(5572,2,66,19515424,233.0,119.0,119.0,119.0,81.0,81.0,157.0,9.9),(5573,2,67,21013712,238.0,122.5,122.5,122.5,84.0,84.0,161.0,9.9),(5574,2,68,22601376,243.0,126.0,126.0,126.0,87.0,87.0,165.0,9.9),(5575,2,69,24290816,248.0,129.5,129.5,129.5,90.0,90.0,169.0,9.9),(5576,2,70,26075424,253.0,133.0,133.0,133.0,93.0,93.0,173.0,9.9),(5577,2,71,27968272,258.0,136.5,136.5,136.5,96.0,96.0,177.0,9.9),(5578,2,72,29962080,263.0,140.0,140.0,140.0,99.0,99.0,181.0,9.9),(5579,2,73,32070592,268.0,143.5,143.5,143.5,102.0,102.0,185.0,9.9),(5580,2,74,34285856,273.0,147.0,147.0,147.0,105.0,105.0,189.0,9.9),(5581,3,0,0,5.0,10.0,5.0,10.0,10.0,10.0,15.0,5.0),(5582,3,1,960,5.5,11.0,5.5,11.0,11.0,11.0,16.5,5.0),(5583,3,2,2030,6.0,12.0,6.0,12.0,12.0,12.0,18.0,5.0),(5584,3,3,3318,6.5,13.0,6.5,13.0,13.0,13.0,19.5,5.0),(5585,3,4,4836,7.0,14.0,7.0,14.0,14.0,14.0,21.0,5.0),(5586,3,5,6692,7.5,15.0,7.5,15.0,15.0,15.0,22.5,5.0),(5587,3,6,8898,8.0,16.0,8.0,16.0,16.0,16.0,24.0,5.0),(5588,3,7,11562,8.5,17.0,8.5,17.0,17.0,17.0,25.5,5.0),(5589,3,8,14696,9.0,18.0,9.0,18.0,18.0,18.0,27.0,5.0),(5590,3,9,18440,9.5,19.0,9.5,19.0,19.0,19.0,28.5,5.0),(5591,3,10,22838,10.0,20.0,10.0,20.0,20.0,20.0,30.0,9.9),(5592,3,11,28238,10.5,21.0,10.5,21.0,21.0,21.0,31.5,9.9),(5593,3,12,34508,11.0,22.0,11.0,22.0,22.0,22.0,33.0,9.9),(5594,3,13,42012,11.5,23.0,11.5,23.0,23.0,23.0,34.5,9.9),(5595,3,14,50602,12.0,24.0,12.0,24.0,24.0,24.0,36.0,9.9),(5596,3,15,60738,12.5,25.0,12.5,25.0,25.0,25.0,37.5,9.9),(5597,3,16,72176,13.0,26.0,13.0,26.0,26.0,26.0,39.0,9.9),(5598,3,17,85472,13.5,27.0,13.5,27.0,27.0,27.0,40.5,9.9),(5599,3,18,100414,14.0,28.0,14.0,28.0,28.0,28.0,42.0,9.9),(5600,3,19,117782,14.5,29.0,14.5,29.0,29.0,29.0,43.5,9.9),(5601,3,20,137268,16.0,31.0,16.0,31.0,31.0,31.0,46.0,9.9),(5602,3,21,161140,17.5,33.0,17.5,33.0,33.0,33.0,48.5,9.9),(5603,3,22,189474,19.0,35.0,19.0,35.0,35.0,35.0,51.0,9.9),(5604,3,23,223818,20.5,37.0,20.5,37.0,37.0,37.0,53.5,9.9),(5605,3,24,264088,22.0,39.0,22.0,39.0,39.0,39.0,56.0,9.9),(5606,3,25,311992,23.5,41.0,23.5,41.0,41.0,41.0,58.5,9.9),(5607,3,26,367286,25.0,43.0,25.0,43.0,43.0,43.0,61.0,9.9),(5608,3,27,431838,26.5,45.0,26.5,45.0,45.0,45.0,63.5,9.9),(5609,3,28,505244,28.0,47.0,28.0,47.0,47.0,47.0,66.0,9.9),(5610,3,29,589724,29.5,49.0,29.5,49.0,49.0,49.0,68.5,9.9),(5611,3,30,684714,31.0,51.0,31.0,51.0,51.0,51.0,71.0,9.9),(5612,3,31,792786,32.5,53.0,32.5,53.0,53.0,53.0,73.5,9.9),(5613,3,32,913024,34.0,55.0,34.0,55.0,55.0,55.0,76.0,9.9),(5614,3,33,1048352,35.5,57.0,35.5,57.0,57.0,57.0,78.5,9.9),(5615,3,34,1197502,37.0,59.0,37.0,59.0,59.0,59.0,81.0,9.9),(5616,3,35,1363750,38.5,61.0,38.5,61.0,61.0,61.0,83.5,9.9),(5617,3,36,1545476,40.0,63.0,40.0,63.0,63.0,63.0,86.0,9.9),(5618,3,37,1746308,41.5,65.0,41.5,65.0,65.0,65.0,88.5,9.9),(5619,3,38,1964274,43.0,67.0,43.0,67.0,67.0,67.0,91.0,9.9),(5620,3,39,2203354,44.5,69.0,44.5,69.0,69.0,69.0,93.5,9.9),(5621,3,40,2461224,47.0,72.0,47.0,72.0,72.0,72.0,97.0,9.9),(5622,3,41,2751832,49.5,75.0,49.5,75.0,75.0,75.0,100.5,9.9),(5623,3,42,3073494,52.0,78.0,52.0,78.0,78.0,78.0,104.0,9.9),(5624,3,43,3432174,54.5,81.0,54.5,81.0,81.0,81.0,107.5,9.9),(5625,3,44,3825644,57.0,84.0,57.0,84.0,84.0,84.0,111.0,9.9),(5626,3,45,4260412,59.5,87.0,59.5,87.0,87.0,87.0,114.5,9.9),(5627,3,46,4733706,62.0,90.0,62.0,90.0,90.0,90.0,118.0,9.9),(5628,3,47,5252578,64.5,93.0,64.5,93.0,93.0,93.0,121.5,9.9),(5629,3,48,5813712,67.0,96.0,67.0,96.0,96.0,96.0,125.0,9.9),(5630,3,49,6424704,69.5,99.0,69.5,99.0,99.0,99.0,128.5,9.9),(5631,3,50,7081694,72.0,102.0,72.0,102.0,102.0,102.0,132.0,9.9),(5632,3,51,7792822,74.5,105.0,74.5,105.0,105.0,105.0,135.5,9.9),(5633,3,52,8553684,77.0,108.0,77.0,108.0,108.0,108.0,139.0,9.9),(5634,3,53,9372964,79.5,111.0,79.5,111.0,111.0,111.0,142.5,9.9),(5635,3,54,10245714,82.0,114.0,82.0,114.0,114.0,114.0,146.0,9.9),(5636,3,55,11181162,84.5,117.0,84.5,117.0,117.0,117.0,149.5,9.9),(5637,3,56,12173816,87.0,120.0,87.0,120.0,120.0,120.0,153.0,9.9),(5638,3,57,13233448,89.5,123.0,89.5,123.0,123.0,123.0,156.5,9.9),(5639,3,58,14354022,92.0,126.0,92.0,126.0,126.0,126.0,160.0,9.9),(5640,3,59,15545854,94.5,129.0,94.5,129.0,129.0,129.0,163.5,9.9),(5641,3,60,16802364,98.0,133.0,98.0,133.0,133.0,133.0,168.0,9.9),(5642,3,61,18157372,101.5,137.0,101.5,137.0,137.0,137.0,172.5,9.9),(5643,3,62,19605194,105.0,141.0,105.0,141.0,141.0,141.0,177.0,9.9),(5644,3,63,21158962,108.5,145.0,108.5,145.0,145.0,145.0,181.5,9.9),(5645,3,64,22812256,112.0,149.0,112.0,149.0,149.0,149.0,186.0,9.9),(5646,3,65,24578944,115.5,153.0,115.5,153.0,153.0,153.0,190.5,9.9),(5647,3,66,26451870,119.0,157.0,119.0,157.0,157.0,157.0,195.0,9.9),(5648,3,67,28445638,122.5,161.0,122.5,161.0,161.0,161.0,199.5,9.9),(5649,3,68,30552356,126.0,165.0,126.0,165.0,165.0,165.0,204.0,9.9),(5650,3,69,32787364,129.5,169.0,129.5,169.0,169.0,169.0,208.5,9.9),(5651,3,70,35142034,133.0,173.0,133.0,173.0,173.0,173.0,213.0,9.9),(5652,3,71,37632442,136.5,177.0,136.5,177.0,177.0,177.0,217.5,9.9),(5653,3,72,40249224,140.0,181.0,140.0,181.0,181.0,181.0,222.0,9.9),(5654,3,73,43009192,143.5,185.0,143.5,185.0,185.0,185.0,226.5,9.9),(5655,3,74,45902246,147.0,189.0,147.0,189.0,189.0,189.0,231.0,9.9),(5656,4,0,0,5.0,10.0,8.0,15.0,5.0,10.0,10.0,5.0),(5657,4,1,928,5.5,11.0,8.8,16.5,5.5,11.0,11.0,5.0),(5658,4,2,1935,6.0,12.0,9.6,18.0,6.0,12.0,12.0,5.0),(5659,4,3,3115,6.5,13.0,10.4,19.5,6.5,13.0,13.0,5.0),(5660,4,4,4450,7.0,14.0,11.2,21.0,7.0,14.0,14.0,5.0),(5661,4,5,6018,7.5,15.0,12.0,22.5,7.5,15.0,15.0,5.0),(5662,4,6,7801,8.0,16.0,12.8,24.0,8.0,16.0,16.0,5.0),(5663,4,7,9861,8.5,17.0,13.6,25.5,8.5,17.0,17.0,5.0),(5664,4,8,12196,9.0,18.0,14.4,27.0,9.0,18.0,18.0,5.0),(5665,4,9,14916,9.5,19.0,15.2,28.5,9.5,19.0,19.0,5.0),(5666,4,10,18035,10.0,20.0,16.0,30.0,10.0,20.0,20.0,9.9),(5667,4,11,21871,10.5,21.0,16.8,31.5,10.5,21.0,21.0,9.9),(5668,4,12,26246,11.0,22.0,17.6,33.0,11.0,22.0,22.0,9.9),(5669,4,13,31510,11.5,23.0,18.4,34.5,11.5,23.0,23.0,9.9),(5670,4,14,37485,12.0,24.0,19.2,36.0,12.0,24.0,24.0,9.9),(5671,4,15,44601,12.5,25.0,20.0,37.5,12.5,25.0,25.0,9.9),(5672,4,16,52584,13.0,26.0,20.8,39.0,13.0,26.0,26.0,9.9),(5673,4,17,61944,13.5,27.0,21.6,40.5,13.5,27.0,27.0,9.9),(5674,4,18,72423,14.0,28.0,22.4,42.0,14.0,28.0,28.0,9.9),(5675,4,19,84739,14.5,29.0,23.2,43.5,14.5,29.0,29.0,9.9),(5676,4,20,98522,16.0,31.0,25.0,46.0,16.0,31.0,31.0,9.9),(5677,4,21,115818,17.5,33.0,26.8,48.5,17.5,33.0,33.0,9.9),(5678,4,22,136529,19.0,35.0,28.6,51.0,19.0,35.0,35.0,9.9),(5679,4,23,162157,20.5,37.0,30.4,53.5,20.5,37.0,37.0,9.9),(5680,4,24,192588,22.0,39.0,32.2,56.0,22.0,39.0,39.0,9.9),(5681,4,25,229500,23.5,41.0,34.0,58.5,23.5,41.0,41.0,9.9),(5682,4,26,272619,25.0,43.0,35.8,61.0,25.0,43.0,43.0,9.9),(5683,4,27,323447,26.5,45.0,37.6,63.5,26.5,45.0,45.0,9.9),(5684,4,28,381822,28.0,47.0,39.4,66.0,28.0,47.0,47.0,9.9),(5685,4,29,449934,29.5,49.0,41.2,68.5,29.5,49.0,49.0,9.9),(5686,4,30,527189,31.0,51.0,43.0,71.0,31.0,51.0,51.0,9.9),(5687,4,31,616129,32.5,53.0,44.8,73.5,32.5,53.0,53.0,9.9),(5688,4,32,715184,34.0,55.0,46.6,76.0,34.0,55.0,55.0,9.9),(5689,4,33,827808,35.5,57.0,48.4,78.5,35.5,57.0,57.0,9.9),(5690,4,34,952703,37.0,59.0,50.2,81.0,37.0,59.0,59.0,9.9),(5691,4,35,1093115,38.5,61.0,52.0,83.5,38.5,61.0,61.0,9.9),(5692,4,36,1246546,40.0,63.0,53.8,86.0,40.0,63.0,63.0,9.9),(5693,4,37,1417378,41.5,65.0,55.6,88.5,41.5,65.0,65.0,9.9),(5694,4,38,1603609,43.0,67.0,57.4,91.0,43.0,67.0,67.0,9.9),(5695,4,39,1809189,44.5,69.0,59.2,93.5,44.5,69.0,69.0,9.9),(5696,4,40,2031764,47.0,72.0,62.0,97.0,47.0,72.0,72.0,9.9),(5697,4,41,2283764,49.5,75.0,64.8,100.5,49.5,75.0,75.0,9.9),(5698,4,42,2564547,52.0,78.0,67.6,104.0,52.0,78.0,78.0,9.9),(5699,4,43,2880047,54.5,81.0,70.4,107.5,54.5,81.0,81.0,9.9),(5700,4,44,3228006,57.0,84.0,73.2,111.0,57.0,84.0,84.0,9.9),(5701,4,45,3614902,59.5,87.0,76.0,114.5,59.5,87.0,87.0,9.9),(5702,4,46,4036317,62.0,90.0,78.8,118.0,62.0,90.0,90.0,9.9),(5703,4,47,4500793,64.5,93.0,81.6,121.5,64.5,93.0,93.0,9.9),(5704,4,48,5004984,67.0,96.0,84.4,125.0,67.0,96.0,96.0,9.9),(5705,4,49,5556456,69.5,99.0,87.2,128.5,69.5,99.0,99.0,9.9),(5706,4,50,6151319,72.0,102.0,90.0,132.0,72.0,102.0,102.0,9.9),(5707,4,51,6795619,74.5,105.0,92.8,135.5,74.5,105.0,105.0,9.9),(5708,4,52,7486890,77.0,108.0,95.6,139.0,77.0,108.0,108.0,9.9),(5709,4,53,8233786,79.5,111.0,98.4,142.5,79.5,111.0,111.0,9.9),(5710,4,54,9031329,82.0,114.0,101.2,146.0,82.0,114.0,114.0,9.9),(5711,4,55,9888717,84.5,117.0,104.0,149.5,84.5,117.0,117.0,9.9),(5712,4,56,10797916,87.0,120.0,106.8,153.0,87.0,120.0,120.0,9.9),(5713,4,57,11771084,89.5,123.0,109.6,156.5,89.5,123.0,123.0,9.9),(5714,4,58,12802155,92.0,126.0,112.4,160.0,92.0,126.0,126.0,9.9),(5715,4,59,13901415,94.5,129.0,115.2,163.5,94.5,129.0,129.0,9.9),(5716,4,60,15062254,98.0,133.0,119.0,168.0,98.0,133.0,133.0,9.9),(5717,4,61,16315022,101.5,137.0,122.8,172.5,101.5,137.0,137.0,9.9),(5718,4,62,17656869,105.0,141.0,126.6,177.0,105.0,141.0,141.0,9.9),(5719,4,63,19100897,108.5,145.0,130.4,181.5,108.5,145.0,145.0,9.9),(5720,4,64,20640656,112.0,149.0,134.2,186.0,112.0,149.0,149.0,9.9),(5721,4,65,22289984,115.5,153.0,138.0,190.5,115.5,153.0,153.0,9.9),(5722,4,66,24038095,119.0,157.0,141.8,195.0,119.0,157.0,157.0,9.9),(5723,4,67,25903035,122.5,161.0,145.6,199.5,122.5,161.0,161.0,9.9),(5724,4,68,27876882,126.0,165.0,149.4,204.0,126.0,165.0,165.0,9.9),(5725,4,69,29974946,129.5,169.0,153.2,208.5,129.5,169.0,169.0,9.9),(5726,4,70,32188569,133.0,173.0,157.0,213.0,133.0,173.0,173.0,9.9),(5727,4,71,34533797,136.5,177.0,160.8,217.5,136.5,177.0,177.0,9.9),(5728,4,72,36996900,140.0,181.0,164.6,222.0,140.0,181.0,181.0,9.9),(5729,4,73,39598868,143.5,185.0,168.4,226.5,143.5,185.0,185.0,9.9),(5730,4,74,42329571,147.0,189.0,172.2,231.0,147.0,189.0,189.0,9.9),(5806,25,0,0,15.0,15.0,20.0,10.0,0.0,5.0,15.0,0.0),(5807,25,1,1160,16.5,16.5,22.0,11.0,0.0,5.5,16.5,0.0),(5808,25,2,2416,18.0,18.0,24.0,12.0,0.0,6.0,18.0,0.0),(5809,25,3,3832,19.5,19.5,26.0,13.0,0.0,6.5,19.5,0.0),(5810,25,4,5344,21.0,21.0,28.0,14.0,0.0,7.0,21.0,0.0),(5811,25,5,7112,22.5,22.5,30.0,15.0,0.0,7.5,22.5,0.0),(5812,25,6,9200,24.0,24.0,32.0,16.0,0.0,8.0,24.0,0.0),(5813,25,7,11800,25.5,25.5,34.0,17.0,0.0,8.5,25.5,0.0),(5814,25,8,14976,27.0,27.0,36.0,18.0,0.0,9.0,27.0,0.0),(5815,25,9,19016,28.5,28.5,38.0,19.0,0.0,9.5,28.5,0.0),(5816,25,10,24080,30.0,30.0,40.0,20.0,0.0,10.0,30.0,0.0),(5817,25,11,30840,31.5,31.5,42.0,21.0,0.0,10.5,31.5,0.0),(5818,25,12,39168,33.0,33.0,44.0,22.0,0.0,11.0,33.0,0.0),(5819,25,13,50024,34.5,34.5,46.0,23.0,0.0,11.5,34.5,0.0),(5820,25,14,62992,36.0,36.0,48.0,24.0,0.0,12.0,36.0,0.0),(5821,25,15,79320,37.5,37.5,50.0,25.0,0.0,12.5,37.5,0.0),(5822,25,16,98304,39.0,39.0,52.0,26.0,0.0,13.0,39.0,0.0),(5823,25,17,121480,40.5,40.5,54.0,27.0,0.0,13.5,40.5,0.0),(5824,25,18,147888,42.0,42.0,56.0,28.0,0.0,14.0,42.0,0.0),(5825,25,19,179384,43.5,43.5,58.0,29.0,0.0,14.5,43.5,0.0),(5826,25,20,214720,46.0,46.0,61.0,31.0,1.0,16.0,46.0,0.0),(5827,25,21,259344,48.5,48.5,64.0,33.0,2.0,17.5,48.5,0.0),(5828,25,22,312264,51.0,51.0,67.0,35.0,3.0,19.0,51.0,0.0),(5829,25,23,376748,53.5,53.5,70.0,37.0,4.0,20.5,53.5,0.0),(5830,25,24,451328,56.0,56.0,73.0,39.0,5.0,22.0,56.0,0.0),(5831,25,25,539748,58.5,58.5,76.0,41.0,6.0,23.5,58.5,0.0),(5832,25,26,640056,61.0,61.0,79.0,43.0,7.0,25.0,61.0,0.0),(5833,25,27,756476,63.5,63.5,82.0,45.0,8.0,26.5,63.5,0.0),(5834,25,28,886576,66.0,66.0,85.0,47.0,9.0,28.0,66.0,0.0),(5835,25,29,1035156,68.5,68.5,88.0,49.0,10.0,29.5,68.5,0.0),(5836,25,30,1199304,71.0,71.0,91.0,51.0,11.0,31.0,71.0,0.0),(5837,25,31,1384396,73.5,73.5,94.0,53.0,12.0,32.5,73.5,0.0),(5838,25,32,1586944,76.0,76.0,97.0,55.0,13.0,34.0,76.0,0.0),(5839,25,33,1812900,78.5,78.5,100.0,57.0,14.0,35.5,78.5,0.0),(5840,25,34,2058200,81.0,81.0,103.0,59.0,15.0,37.0,81.0,0.0),(5841,25,35,2329372,83.5,83.5,106.0,61.0,16.0,38.5,83.5,0.0),(5842,25,36,2621776,86.0,86.0,109.0,63.0,17.0,40.0,86.0,0.0),(5843,25,37,2942516,88.5,88.5,112.0,65.0,18.0,41.5,88.5,0.0),(5844,25,38,3286376,91.0,91.0,115.0,67.0,19.0,43.0,91.0,0.0),(5845,25,39,3661036,93.5,93.5,118.0,69.0,20.0,44.5,93.5,0.0),(5846,25,40,4060704,97.0,97.0,122.0,72.0,22.0,47.0,97.0,0.0),(5847,25,41,4505780,100.5,100.5,126.0,75.0,24.0,49.5,100.5,0.0),(5848,25,42,4990856,104.0,104.0,130.0,78.0,26.0,52.0,104.0,0.0),(5849,25,43,5526108,107.5,107.5,134.0,81.0,28.0,54.5,107.5,0.0),(5850,25,44,6105392,111.0,111.0,138.0,84.0,30.0,57.0,111.0,0.0),(5851,25,45,6739844,114.5,114.5,142.0,87.0,32.0,59.5,114.5,0.0),(5852,25,46,7422520,118.0,118.0,146.0,90.0,34.0,62.0,118.0,0.0),(5853,25,47,8165388,121.5,121.5,150.0,93.0,36.0,64.5,121.5,0.0),(5854,25,48,8960672,125.0,125.0,154.0,96.0,38.0,67.0,125.0,0.0),(5855,25,49,9821172,128.5,128.5,158.0,99.0,40.0,69.5,128.5,0.0),(5856,25,50,10738280,132.0,132.0,162.0,102.0,42.0,72.0,132.0,0.0),(5857,25,51,11725628,135.5,135.5,166.0,105.0,44.0,74.5,135.5,0.0),(5858,25,52,12773776,139.0,139.0,170.0,108.0,46.0,77.0,139.0,0.0),(5859,25,53,13897188,142.5,142.5,174.0,111.0,48.0,79.5,142.5,0.0),(5860,25,54,15085592,146.0,146.0,178.0,114.0,50.0,82.0,146.0,0.0),(5861,25,55,16354284,149.5,149.5,182.0,117.0,52.0,84.5,149.5,0.0),(5862,25,56,17692160,153.0,153.0,186.0,120.0,54.0,87.0,153.0,0.0),(5863,25,57,19115348,156.5,156.5,190.0,123.0,56.0,89.5,156.5,0.0),(5864,25,58,20611912,160.0,160.0,194.0,126.0,58.0,92.0,160.0,0.0),(5865,25,59,22198812,163.5,163.5,198.0,129.0,60.0,94.5,163.5,0.0),(5866,25,60,23863280,168.0,168.0,203.0,133.0,63.0,98.0,168.0,0.0),(5867,25,61,25649428,172.5,172.5,208.0,137.0,66.0,101.5,172.5,0.0),(5868,25,62,27545160,177.0,177.0,213.0,141.0,69.0,105.0,177.0,0.0),(5869,25,63,29570988,181.5,181.5,218.0,145.0,72.0,108.5,181.5,0.0),(5870,25,64,31713728,186.0,186.0,223.0,149.0,75.0,112.0,186.0,0.0),(5871,25,65,33994980,190.5,190.5,228.0,153.0,78.0,115.5,190.5,0.0),(5872,25,66,36400472,195.0,195.0,233.0,157.0,81.0,119.0,195.0,0.0),(5873,25,67,38952892,199.5,199.5,238.0,161.0,84.0,122.5,199.5,0.0),(5874,25,68,41636880,204.0,204.0,243.0,165.0,87.0,126.0,204.0,0.0),(5875,25,69,44476212,208.5,208.5,248.0,169.0,90.0,129.5,208.5,0.0),(5876,25,70,47454440,213.0,213.0,253.0,173.0,93.0,133.0,213.0,0.0),(5877,25,71,50596428,217.5,217.5,258.0,177.0,96.0,136.5,217.5,0.0),(5878,25,72,53884640,222.0,222.0,263.0,181.0,99.0,140.0,222.0,0.0),(5879,25,73,57345028,226.5,226.5,268.0,185.0,102.0,143.5,226.5,0.0),(5880,25,74,60958968,231.0,231.0,273.0,189.0,105.0,147.0,231.0,0.0),(5956,14,0,0,5.0,10.0,5.0,10.0,5.0,3.0,1.0,1.0),(5957,14,1,504,5.5,11.0,5.5,11.0,5.5,3.3,1.1,1.0),(5958,14,2,1055,6.0,12.0,6.0,12.0,6.0,3.6,1.2,1.0),(5959,14,3,1731,6.5,13.0,6.5,13.0,6.5,3.9,1.3,1.0),(5960,14,4,2514,7.0,14.0,7.0,14.0,7.0,4.2,1.4,1.0),(5961,14,5,3498,7.5,15.0,7.5,15.0,7.5,4.5,1.5,1.0),(5962,14,6,4649,8.0,16.0,8.0,16.0,8.0,4.8,1.6,1.0),(5963,14,7,6045,8.5,17.0,8.5,17.0,8.5,5.1,1.7,1.0),(5964,14,8,7684,9.0,18.0,9.0,18.0,9.0,5.4,1.8,1.0),(5965,14,9,9628,9.5,19.0,9.5,19.0,9.5,5.7,1.9,1.0),(5966,14,10,11859,10.0,20.0,10.0,20.0,10.0,6.0,2.0,2.0),(5967,14,11,14471,10.5,21.0,10.5,21.0,10.5,6.3,2.1,2.0),(5968,14,12,17446,11.0,22.0,11.0,22.0,11.0,6.6,2.2,2.0),(5969,14,13,20846,11.5,23.0,11.5,23.0,11.5,6.9,2.3,2.0),(5970,14,14,24653,12.0,24.0,12.0,24.0,12.0,7.2,2.4,2.0),(5971,14,15,28961,12.5,25.0,12.5,25.0,12.5,7.5,2.5,2.0),(5972,14,16,33736,13.0,26.0,13.0,26.0,13.0,7.8,2.6,2.0),(5973,14,17,39056,13.5,27.0,13.5,27.0,13.5,8.1,2.7,2.0),(5974,14,18,44983,14.0,28.0,14.0,28.0,14.0,8.4,2.8,2.0),(5975,14,19,51643,14.5,29.0,14.5,29.0,14.5,8.7,2.9,2.0),(5976,14,20,59082,16.0,31.0,16.0,31.0,16.0,10.0,4.0,2.0),(5977,14,21,67902,17.5,33.0,17.5,33.0,17.5,11.3,5.1,2.0),(5978,14,22,78313,19.0,35.0,19.0,35.0,19.0,12.6,6.2,2.0),(5979,14,23,90649,20.5,37.0,20.5,37.0,20.5,13.9,7.3,2.0),(5980,14,24,105148,22.0,39.0,22.0,39.0,22.0,15.2,8.4,2.0),(5981,14,25,122160,23.5,41.0,23.5,41.0,23.5,16.5,9.5,2.0),(5982,14,26,141907,25.0,43.0,25.0,43.0,25.0,17.8,10.6,2.0),(5983,14,27,164723,26.5,45.0,26.5,45.0,26.5,19.1,11.7,2.0),(5984,14,28,190862,28.0,47.0,28.0,47.0,28.0,20.4,12.8,2.0),(5985,14,29,220930,29.5,49.0,29.5,49.0,29.5,21.7,13.9,2.0),(5986,14,30,255165,31.0,51.0,31.0,51.0,31.0,23.0,15.0,2.0),(5987,14,31,294493,32.5,53.0,32.5,53.0,32.5,24.3,16.1,2.0),(5988,14,32,338864,34.0,55.0,34.0,55.0,34.0,25.6,17.2,2.0),(5989,14,33,389460,35.5,57.0,35.5,57.0,35.5,26.9,18.3,2.0),(5990,14,34,445943,37.0,59.0,37.0,59.0,37.0,28.2,19.4,2.0),(5991,14,35,509911,38.5,61.0,38.5,61.0,38.5,29.5,20.5,2.0),(5992,14,36,580722,40.0,63.0,40.0,63.0,40.0,30.8,21.6,2.0),(5993,14,37,660182,41.5,65.0,41.5,65.0,41.5,32.1,22.7,2.0),(5994,14,38,747617,43.0,67.0,43.0,67.0,43.0,33.4,23.8,2.0),(5995,14,39,844945,44.5,69.0,44.5,69.0,44.5,34.7,24.9,2.0),(5996,14,40,950996,47.0,72.0,47.0,72.0,47.0,37.0,27.0,2.0),(5997,14,41,1073960,49.5,75.0,49.5,75.0,49.5,39.3,29.1,2.0),(5998,14,42,1212891,52.0,78.0,52.0,78.0,52.0,41.6,31.2,2.0),(5999,14,43,1371579,54.5,81.0,54.5,81.0,54.5,43.9,33.3,2.0),(6000,14,44,1548918,57.0,84.0,57.0,84.0,57.0,46.2,35.4,2.0),(6001,14,45,1749834,59.5,87.0,59.5,87.0,59.5,48.5,37.5,2.0),(6002,14,46,1972149,62.0,90.0,62.0,90.0,62.0,50.8,39.6,2.0),(6003,14,47,2220613,64.5,93.0,64.5,93.0,64.5,53.1,41.7,2.0),(6004,14,48,2494040,67.0,96.0,67.0,96.0,67.0,55.4,43.8,2.0),(6005,14,49,2796844,69.5,99.0,69.5,99.0,69.5,57.7,45.9,2.0),(6006,14,50,3126479,72.0,102.0,72.0,102.0,72.0,60.0,48.0,2.0),(6007,14,51,3489375,74.5,105.0,74.5,105.0,74.5,62.3,50.1,2.0),(6008,14,52,3883018,77.0,108.0,77.0,108.0,77.0,64.6,52.2,2.0),(6009,14,53,4312494,79.5,111.0,79.5,111.0,79.5,66.9,54.3,2.0),(6010,14,54,4774297,82.0,114.0,82.0,114.0,82.0,69.2,56.4,2.0),(6011,14,55,5276489,84.5,117.0,84.5,117.0,84.5,71.5,58.5,2.0),(6012,14,56,5813756,87.0,120.0,87.0,120.0,87.0,73.8,60.6,2.0),(6013,14,57,6393248,89.5,123.0,89.5,123.0,89.5,76.1,62.7,2.0),(6014,14,58,7012115,92.0,126.0,92.0,126.0,92.0,78.4,64.8,2.0),(6015,14,59,7676435,94.5,129.0,94.5,129.0,94.5,80.7,66.9,2.0),(6016,14,60,8381262,98.0,133.0,98.0,133.0,98.0,84.0,70.0,2.0),(6017,14,61,9153202,101.5,137.0,101.5,137.0,101.5,87.3,73.1,2.0),(6018,14,62,9988717,105.0,141.0,105.0,141.0,105.0,90.6,76.2,2.0),(6019,14,63,10896061,108.5,145.0,108.5,145.0,108.5,93.9,79.3,2.0),(6020,14,64,11870384,112.0,149.0,112.0,149.0,112.0,97.2,82.4,2.0),(6021,14,65,12924772,115.5,153.0,115.5,153.0,115.5,100.5,85.5,2.0),(6022,14,66,14051511,119.0,157.0,119.0,157.0,119.0,103.8,88.6,2.0),(6023,14,67,15262071,122.5,161.0,122.5,161.0,122.5,107.1,91.7,2.0),(6024,14,68,16552866,126.0,165.0,126.0,165.0,126.0,110.4,94.8,2.0),(6025,14,69,17933526,129.5,169.0,129.5,169.0,129.5,113.7,97.9,2.0),(6026,14,70,19397185,133.0,173.0,133.0,173.0,133.0,117.0,101.0,2.0),(6027,14,71,20956657,136.5,177.0,136.5,177.0,136.5,120.3,104.1,2.0),(6028,14,72,22609940,140.0,181.0,140.0,181.0,140.0,123.6,107.2,2.0),(6029,14,73,24365176,143.5,185.0,143.5,185.0,143.5,126.9,110.3,2.0),(6030,14,74,26214155,147.0,189.0,147.0,189.0,147.0,130.2,113.4,2.0);

UNLOCK TABLES;

/*Table structure for table `c_classes` */

DROP TABLE IF EXISTS `c_classes`;

CREATE TABLE `c_classes` (
  `id` int(11) NOT NULL auto_increment COMMENT 'c_class id',
  `name` varchar(32) NOT NULL COMMENT 'Name of the c_class',
  `description` varchar(256) default NULL COMMENT 'description of the c_class',
  `attack_spells` tinyint(1) default NULL COMMENT 'If true, this c_class can use attack spells',
  `healing_spells` tinyint(1) default NULL COMMENT 'If true, this c_class can use healing spells',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `c_classes` */

LOCK TABLES `c_classes` WRITE;

insert  into `c_classes`(`id`,`name`,`description`,`attack_spells`,`healing_spells`) values (1,'Bartender','Tends the bars',0,0),(2,'Therapist','Gives consultations, and etc',0,0),(3,'Electrician','Zap zap zap',1,1),(4,'Medic','Heals stuff',0,1),(14,'Pyro','Burns things',1,0),(25,'Bad Dude','badd',0,0);

UNLOCK TABLES;

/*Table structure for table `creature_kills` */

DROP TABLE IF EXISTS `creature_kills`;

CREATE TABLE `creature_kills` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who killed this creature',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the creature killed',
  `number` int(10) NOT NULL default '0' COMMENT 'Number of this type of creatures killed',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `creature_id` (`creature_id`),
  KEY `player_character_creature_id` (`player_character_id`,`creature_id`),
  CONSTRAINT `FK_creatures_creature_kills` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_player_characters_creature_kills` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `creature_kills` */

LOCK TABLES `creature_kills` WRITE;

UNLOCK TABLES;

/*Table structure for table `creatures` */

DROP TABLE IF EXISTS `creatures`;

CREATE TABLE `creatures` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) NOT NULL COMMENT 'name of the creature',
  `description` varchar(256) default NULL COMMENT 'description of the creature',
  `experience` int(10) NOT NULL COMMENT 'Base experience awarded',
  `HP` int(10) NOT NULL COMMENT 'Base HP',
  `str` int(10) NOT NULL COMMENT 'strength',
  `dex` int(10) NOT NULL COMMENT 'dexterity',
  `dam` int(10) NOT NULL COMMENT 'base damage dealt',
  `dfn` int(10) NOT NULL COMMENT 'base defense',
  `int` int(10) NOT NULL COMMENT 'base intelligence',
  `mag` int(10) NOT NULL COMMENT 'base magic',
  `gold` int(20) NOT NULL COMMENT 'base gold awarded',
  `image_id` int(11) NOT NULL COMMENT 'image id of the creature',
  `player_id` int(11) NOT NULL COMMENT 'user id of the maker of the creature',
  `public` tinyint(1) NOT NULL default '0' COMMENT 'if true, this creature can be found in the world and can be assigned to other kingdoms',
  `kingdom_id` int(11) NOT NULL COMMENT 'Home kingdom of where the creature is found',
  `number_alive` int(10) NOT NULL COMMENT 'The number of these creatures that exist. 0 indicates that this creature is extinct, a positive number is the number left, and each time one is killed,this number is decremented. negative one indicates that there are an infinite number of this creature, o',
  `fecundity` float NOT NULL COMMENT 'This is how many new creatures are born/spawned each day. This helps creatures from being completely killed off, and allows their numbers to regrow overtime if they are hunted exclusively. Does nothing for infinite creature population and extinct creature',
  `disease_id` int(11) default NULL COMMENT 'The disease the creature carries. If null, creature doesn''t carry a disease typically.',
  `armed` tinyint(1) default '0' COMMENT 'Indicates if the creature has been amde available for use in the game. If true, then it can be used for things like events. Also, it may not be edited or destroyed.',
  `being_fought` int(10) default '0' COMMENT 'The number of creatures that are being fought by players. Mainly used to prevent creatures from beign fought, not all killed, and being marked as extinct when they shouldn''t be.',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `name` (`name`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `experience` (`experience`),
  KEY `FK_creatures_images` (`image_id`),
  KEY `disease_id` (`disease_id`),
  KEY `public` (`public`),
  CONSTRAINT `FK_diseases_creatures` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`),
  CONSTRAINT `FK_images_creatures` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`),
  CONSTRAINT `FK_kingdoms_creatures` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_creatures` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `creatures` */

LOCK TABLES `creatures` WRITE;

insert  into `creatures`(`id`,`name`,`description`,`experience`,`HP`,`str`,`dex`,`dam`,`dfn`,`int`,`mag`,`gold`,`image_id`,`player_id`,`public`,`kingdom_id`,`number_alive`,`fecundity`,`disease_id`,`armed`,`being_fought`) values (1,'monkey','ghgh',18,13,5,7,5,4,10,0,0,175,1,1,1,10000,33,NULL,1,0),(3,'Leper','like a zombie, but still alive',6,1,1,7,3,2,0,0,1,171,1,1,1,9001,3,1,1,0),(10,'Superfly','OH NO A SUPERFLY!!!',762,500,1,7,100,100,0,0,40,42,1,0,1,99932,200,NULL,1,0),(12,'Peasant','Poor living conditions and hard work. That\'s how they roll.',50,10,10,10,10,10,0,0,1,172,-1,0,-1,-1,0,5,1,0),(13,'Squirrel','',2,5,1,7,5,5,0,0,0,93,1,1,1,9969,10,NULL,1,0),(14,'Slime','gross',28,20,1,7,10,4,0,0,3,94,1,1,1,9000,100,NULL,1,0),(15,'cactus','Has sharp pointy spines',120,20,1,7,20,20,0,0,0,95,1,1,1,1000,25,NULL,1,0),(16,'Goat','OMFG a GOAT',9,40,1,60,30,15,10,10,10,96,1,1,1,-1,10,NULL,1,0),(17,'Rabid Tree','Tree with rabies',184,50,15,15,30,25,5,5,2,176,1,0,1,10000,10,13,1,0),(18,'Rat','Rodent',50,20,5,20,10,5,10,1,1,177,1,1,1,-1,0,8,1,0),(19,'Bat','Flying rodent',36,25,7,15,8,10,8,8,0,178,1,1,1,100000,25,NULL,1,0),(20,'Sludge','Don\'t ask where it came from. You don\'t want to know.',161,70,13,13,25,25,10,10,5,179,1,1,1,666,50,NULL,1,0),(21,'Goblin','Troublesome creature.',40,20,8,10,10,10,7,2,3,180,1,1,1,9001,100,NULL,1,0),(22,'Cube','Geometry',209,100,30,30,30,30,30,30,10,181,1,0,1,30000,10,NULL,1,0),(23,'Ghost','Not much of a body left.',375,75,10,30,25,60,25,25,8,182,1,1,1,-1,0,NULL,1,0),(24,'Bear','Mammal.',313,200,50,20,45,35,17,10,0,183,1,1,1,1000,5,NULL,1,0),(25,'Walrus','Aquatic Mammal.',278,200,35,15,35,40,25,15,13,184,1,0,1,700,10,NULL,1,0),(26,'Manatee','Sea cow.',290,175,30,20,30,50,30,10,8,185,1,0,1,1200,15,NULL,1,0),(27,'Serpent','Slithers on the ground.',160,80,15,40,25,25,30,18,9,186,1,1,1,1000,200,NULL,1,0),(28,'Lion','Get in the car.',264,130,45,45,45,30,15,15,5,187,1,1,1,1999,30,NULL,1,0),(29,'Stone','A rock.',200,500,30,10,30,80,0,0,3,188,1,0,1,100000,1,NULL,1,0),(30,'Giant','A big person.',298,350,50,30,40,35,30,10,7,189,1,1,1,3000,8,NULL,1,0),(31,'Tentacle','Attack in groups. Who knows what they might be up to.',147,80,30,30,30,15,15,15,1,190,1,1,1,50000,10,NULL,1,0),(32,'Telephone','Someone is calling.',104,150,40,20,15,20,40,40,10,191,1,0,1,4500,33,NULL,1,0),(33,'Wherewolf','Doesn\'t know where he is.',354,300,50,45,60,35,30,30,16,192,1,1,1,700,20,NULL,1,0),(34,'Zombie','Like a leper, but more dead and animated.',280,100,80,20,50,30,0,0,0,193,1,1,1,500,400,NULL,1,0),(35,'Skeleton','Just bones wandering the earth.',273,50,50,30,45,33,0,4,0,194,1,1,1,5000,25,NULL,1,0),(36,'Mystery Box','Anything could be inside.',298,265,67,56,45,34,23,12,30,195,1,0,1,314159,11,NULL,1,0),(37,'Dragon','Breathes fire and other cliched things.',1265,500,100,76,120,95,70,70,100,196,1,0,1,9001,3,NULL,1,0),(38,'Filth','Its everywhere. This is the internet afterall.',320,187,20,70,50,40,10,25,20,197,1,1,1,5000,200,9,1,0),(39,'Vampire','Sucks your blood.',385,275,35,60,65,30,40,40,60,198,1,1,1,500,5,10,1,0),(40,'Lawyer','Sucks your moneys.',374,666,50,50,50,50,50,50,500,199,1,0,1,50000,45,15,1,0),(41,'Gazebo','',32278,1000,203,133,133,273,63,63,63,200,1,0,1,300,1,NULL,1,0),(42,'Rotting Corpse','',10574,300,180,180,170,170,30,30,30,201,1,1,1,7000,20,9,1,0),(43,'Change','',323760,3000,500,500,500,500,500,500,500,202,1,0,1,100,0,6,1,0);

UNLOCK TABLES;

/*Table structure for table `diseases` */

DROP TABLE IF EXISTS `diseases`;

CREATE TABLE `diseases` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the disease',
  `name` varchar(32) NOT NULL COMMENT 'Name of the disease',
  `description` varchar(256) default NULL COMMENT 'Description of the disease',
  `virility` float NOT NULL COMMENT '% chance that the disease will be transmitted to an uninfected if they come into contact with the tranmission method',
  `trans_method` int(3) NOT NULL COMMENT 'The method that the disease may be transmitted',
  `dam` int(10) default NULL COMMENT 'damage penalty for those infected',
  `dfn` int(10) default NULL COMMENT 'defense penalty',
  `str` int(10) default NULL COMMENT 'strength penalty',
  `dex` int(10) default NULL COMMENT 'dexterity penalty',
  `mag` int(10) default NULL COMMENT 'magic penalty',
  `int` int(10) default NULL COMMENT 'intelligence penalty',
  `con` int(10) default NULL COMMENT 'constitution penalty',
  `HP_per_turn` int(10) default NULL COMMENT 'HP lost per turn infected',
  `MP_per_turn` int(10) default NULL COMMENT 'MP lost per turn while infected',
  `NPC_fatal` tinyint(1) default NULL COMMENT 'If true, an NPC who is in an infected kingdom has a chance of being killed by the disease',
  `peasant_fatality` float default NULL COMMENT '% of peasants in the kingdom killed each day by the disease if a kingdom has an outbreak',
  `min_peasants` int(10) NOT NULL COMMENT 'Minimum number of peasants for the disease to continue to infect a kingdom',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `diseases` */

LOCK TABLES `diseases` WRITE;

insert  into `diseases`(`id`,`name`,`description`,`virility`,`trans_method`,`dam`,`dfn`,`str`,`dex`,`mag`,`int`,`con`,`HP_per_turn`,`MP_per_turn`,`NPC_fatal`,`peasant_fatality`,`min_peasants`) values (1,'leprosy','not pleasant',3,1,4,4,4,4,4,4,4,4,4,0,3,3003),(2,'AIDS','you went in the pool, didn\'t you?',100,2,0,0,0,0,10,10,10,20,0,1,30,100),(5,'Cooties','worse than you think it might be',50,2,0,10,5,5,5,5,5,1,1,0,3,50),(6,'The Shakes','I can\'t stop my leg',100,1,10,10,0,10,0,0,0,5,0,0,10,100),(7,'Hemmorhagitis','blood everywhere',75,3,0,0,15,0,15,15,15,20,10,1,25,69),(8,'Pustulent Corpuscles','gross',30,3,0,20,0,0,0,20,25,15,9,1,13,10),(9,'Rotting Fever','Burning apart',60,1,15,15,15,15,15,15,15,15,15,1,40,600),(10,'Soul Plague','deep infestation of the soul',100,1,30,0,30,0,30,30,0,0,20,0,0,75),(11,'Reefer Madness','i was crazy once . . .',75,1,-25,0,0,0,5,10,5,0,0,1,10,1000),(12,'Cholera','when youve got the runs',80,3,0,0,20,0,0,10,20,10,0,1,35,750),(13,'Rabies','foaming at the mouth',65,3,-5,5,5,5,0,10,5,5,0,1,15,900),(14,'Brain Pox','Pox upon your brain',40,1,0,0,0,0,30,30,5,0,50,0,3,1200),(15,'Mondays','You dont want to get a case of thses.',100,1,8,5,8,15,5,15,20,10,10,1,42,5000);

UNLOCK TABLES;

/*Table structure for table `done_events` */

DROP TABLE IF EXISTS `done_events`;

CREATE TABLE `done_events` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event that has happened',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who has completed this event. IE, if the event was a one time monster, and the player_character killed the monster, then the player_character has completed this event. If the player_character fails to kill the monster, then the ',
  `datetime` datetime NOT NULL COMMENT 'When this event was done. Useful if events exist that a player_character can use every so often. Decide later if its ok to purge events with time limit expiratins.',
  `level_map_id` int(11) default NULL COMMENT 'Where this even occurred. Note that an event that occurs at once spot willl be recorded as having happened there, even if the feature changes. ',
  `world_map_id` int(11) default NULL COMMENT 'World map where this was completed. Null if this event was completed in a kingdom level ',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `event_id_player_character_id` (`event_id`,`player_character_id`),
  KEY `level_map_id` (`level_map_id`),
  KEY `event_id_player_id_level_map_id` (`event_id`,`player_character_id`,`level_map_id`),
  KEY `world_map_id` (`world_map_id`),
  KEY `player_character_id_world_map_id` (`player_character_id`,`world_map_id`),
  CONSTRAINT `FK_events_done_events` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_level_maps_done_events` FOREIGN KEY (`level_map_id`) REFERENCES `level_maps` (`id`),
  CONSTRAINT `FK_player_characters_done_events` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_world_maps_done_events` FOREIGN KEY (`world_map_id`) REFERENCES `world_maps` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `done_events` */

LOCK TABLES `done_events` WRITE;

insert  into `done_events`(`id`,`event_id`,`player_character_id`,`datetime`,`level_map_id`,`world_map_id`) values (2,46,1,'2008-11-08 12:42:14',NULL,41);

UNLOCK TABLES;

/*Table structure for table `done_quests` */

DROP TABLE IF EXISTS `done_quests`;

CREATE TABLE `done_quests` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who has completed this quest',
  `date` datetime NOT NULL COMMENT 'When this player_character completed this quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `quest_id_player_character_id` (`quest_id`,`player_character_id`),
  CONSTRAINT `FK_player_characters_done_quests` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_quests_done_quests` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `done_quests` */

LOCK TABLES `done_quests` WRITE;

UNLOCK TABLES;

/*Table structure for table `event_creatures` */

DROP TABLE IF EXISTS `event_creatures`;

CREATE TABLE `event_creatures` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the creature',
  `low` int(2) NOT NULL default '1' COMMENT 'the smalest number of this creature that might appear',
  `high` int(2) NOT NULL default '1' COMMENT 'The largets number of this creatures taht might appear',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `creature_id` (`creature_id`),
  CONSTRAINT `FK_creatures_event_creatures` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_events_event_creatures` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_creatures` */

LOCK TABLES `event_creatures` WRITE;

insert  into `event_creatures`(`id`,`event_id`,`creature_id`,`low`,`high`) values (1,1,29,1,5),(2,3,13,3,5),(3,5,19,1,4),(4,6,19,3,8),(5,7,24,1,3),(6,8,24,1,2),(7,9,15,2,5),(8,10,43,1,1),(9,11,22,1,3),(10,12,37,1,1),(11,13,38,1,10),(12,14,41,1,1),(13,15,38,3,7),(14,16,23,2,4),(15,17,30,1,4),(16,18,16,4,8),(17,19,21,2,12),(18,20,40,2,4),(19,21,3,1,3),(20,22,28,1,2),(21,23,26,2,3),(22,24,1,1,20),(23,25,36,1,3),(24,26,12,1,6),(25,27,17,3,8),(26,28,17,1,3),(27,29,18,5,15),(28,30,42,1,3),(29,31,27,2,5),(30,32,35,1,8),(31,33,14,3,6),(32,34,20,2,9),(33,35,29,5,13),(34,36,10,3,3),(35,37,32,1,1),(36,38,31,9,25),(37,39,31,20,30),(38,40,39,1,1),(39,41,25,1,4),(40,42,33,1,1),(41,43,34,2,10),(42,44,12,1,30),(43,45,12,1,100),(44,65,20,20,20),(45,69,38,30,30);

UNLOCK TABLES;

/*Table structure for table `event_diseases` */

DROP TABLE IF EXISTS `event_diseases`;

CREATE TABLE `event_diseases` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event where pesants are encountered at home',
  `disease_id` int(11) NOT NULL COMMENT 'ID of the disease associated with this event',
  `cures?` tinyint(1) NOT NULL COMMENT 'If true, this event cures the player_character of this disease. Otherwise, it gives the player_character this disease.',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_diseases_event_diseases` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`),
  CONSTRAINT `FK_events_event_diseases` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_diseases` */

LOCK TABLES `event_diseases` WRITE;

insert  into `event_diseases`(`id`,`event_id`,`disease_id`,`cures?`) values (1,51,11,0),(2,52,11,1),(3,53,10,1),(4,54,8,0),(5,55,12,0);

UNLOCK TABLES;

/*Table structure for table `event_items` */

DROP TABLE IF EXISTS `event_items`;

CREATE TABLE `event_items` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item',
  `number` int(5) NOT NULL default '0' COMMENT 'Number of this item given',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `item_id` (`item_id`),
  CONSTRAINT `FK_events_event_items` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_items_event_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_items` */

LOCK TABLES `event_items` WRITE;

insert  into `event_items`(`id`,`event_id`,`item_id`,`number`) values (1,47,1,1),(2,48,6,1),(3,49,7,1),(4,50,5,1),(5,60,2,1);

UNLOCK TABLES;

/*Table structure for table `event_moves` */

DROP TABLE IF EXISTS `event_moves`;

CREATE TABLE `event_moves` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `move_type` int(3) NOT NULL COMMENT 'Type of movement, ie enter a knigdom, enter kingdom 0 (the world), move to a different region in the world, move to a different level in a kingdom, etc',
  `move_id` int(11) NOT NULL COMMENT 'ID of the new location. This will vary, depending on where one is moving. Might have been  good idea to break this into different tables, a different table for kingdom levels, kingdoms, world, etc. the ID here will be directly related to a location table ',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `move_type_move_id` (`move_type`,`move_id`),
  CONSTRAINT `FK_events_event_moves` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_moves` */

LOCK TABLES `event_moves` WRITE;

insert  into `event_moves`(`id`,`event_id`,`move_type`,`move_id`) values (2,67,3,-1),(4,77,3,1),(5,81,1,1),(6,83,1,3);

UNLOCK TABLES;

/*Table structure for table `event_npcs` */

DROP TABLE IF EXISTS `event_npcs`;

CREATE TABLE `event_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event for the housecall.',
  `npc_id` int(11) default NULL COMMENT 'ID of the NPC encountered by this event.',
  `level_map_id` int(11) default NULL COMMENT 'The actual square where this event will be occurring. This is set when a feature is built on the map.',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `npc_id` (`npc_id`),
  KEY `level_map_id` (`level_map_id`),
  CONSTRAINT `FK_events_event_npcs` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_event_npcs` FOREIGN KEY (`level_map_id`) REFERENCES `level_maps` (`id`),
  CONSTRAINT `FK_npcs_event_npcs` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_npcs` */

LOCK TABLES `event_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `event_player_characters` */

DROP TABLE IF EXISTS `event_player_characters`;

CREATE TABLE `event_player_characters` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character that is encountered.',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `player_character_id` (`player_character_id`),
  CONSTRAINT `FK_events_event_player_characters` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_player_characters_event_player_characters` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_player_characters` */

LOCK TABLES `event_player_characters` WRITE;

UNLOCK TABLES;

/*Table structure for table `event_quests` */

DROP TABLE IF EXISTS `event_quests`;

CREATE TABLE `event_quests` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `text` text COMMENT 'Flavor text. Go wild. No point to have it, no poitn to not ahve it. Really no point until i figure out how i want this thing to work :(',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  CONSTRAINT `FK_events_event_quests` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_quests` */

LOCK TABLES `event_quests` WRITE;

insert  into `event_quests`(`id`,`event_id`,`text`) values (1,2,'You stand before the planet rock. It\r\ndoesn\'t seem as impressive up close.'),(2,4,'Here, the roots of the mighty oak,\r\ntowering above.'),(3,66,'The sludge has been defeated. Your path \r\nis no longer obstructed.'),(4,70,'You have defeated the dragon. The \r\nvillagers are grateful for your \r\nvalliant acts.'),(5,71,'You have saved the foresters from the \r\ndread gazebo. They are forever in your \r\ndebt.'),(6,72,'You fought change, and have defeated \r\nit. The hamleteers are prepared to \r\nreward you handsomely.'),(7,73,'You have defeated the bear overlords. \r\nThe cave people are prepared to follow \r\nyou to the end of the times.'),(8,74,'The rotting corpses are defeated. The \r\nliving inhabitants can now roam the \r\nstreets.'),(9,75,'the filth has been defeated. The water \r\nis no longer murky.'),(10,76,'You hack away at the sludge obstructing \r\nyour path.'),(11,78,'Not a very comfortable bed, but you \r\nhave found the bed rock, far beneath \r\nthe surface.');

UNLOCK TABLES;

/*Table structure for table `event_stats` */

DROP TABLE IF EXISTS `event_stats`;

CREATE TABLE `event_stats` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `str` int(10) default '0' COMMENT 'Attributes. The values can be positive or negative.',
  `dex` int(10) default '0',
  `int` int(10) default '0',
  `mag` int(10) default '0',
  `con` int(10) default '0',
  `dam` int(10) default '0',
  `dfn` int(10) default '0',
  `gold` int(20) default '0',
  `experience` int(10) default '0',
  `text` text COMMENT 'Description of the event. Adds more flavor than "You lost 10 eperience"',
  `HP` int(10) default '0' COMMENT 'The amound of HP lost (this is taken from current HP)',
  `MP` int(10) default '0' COMMENT 'The amound of MP lost (this is taken from current MP)',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  CONSTRAINT `FK_events_event_stats` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_stats` */

LOCK TABLES `event_stats` WRITE;

insert  into `event_stats`(`id`,`event_id`,`str`,`dex`,`int`,`mag`,`con`,`dam`,`dfn`,`gold`,`experience`,`text`,`HP`,`MP`) values (1,57,-10,0,0,0,0,0,0,0,0,'you feel weaker',0,0),(2,58,-5,0,0,0,-5,0,0,0,0,'A blight upon your health!',-15,0),(3,59,5,5,5,5,5,5,5,5,5,'You feel embiggened',5,5);

UNLOCK TABLES;

/*Table structure for table `event_storm_gates` */

DROP TABLE IF EXISTS `event_storm_gates`;

CREATE TABLE `event_storm_gates` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'Parent event',
  `level_id` int(11) NOT NULL COMMENT 'Level ID that will be broken into',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `level_id` (`level_id`),
  CONSTRAINT `FK_events_event_storm_gate` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_levels_event_storm_gate` FOREIGN KEY (`level_id`) REFERENCES `levels` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_storm_gates` */

LOCK TABLES `event_storm_gates` WRITE;

insert  into `event_storm_gates`(`id`,`event_id`,`level_id`) values (2,82,1);

UNLOCK TABLES;

/*Table structure for table `events` */

DROP TABLE IF EXISTS `events`;

CREATE TABLE `events` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the event',
  `kingdom_id` int(11) NOT NULL COMMENT 'Kingdom where the event may be used.',
  `player_id` int(11) NOT NULL COMMENT 'Player who created the event.',
  `event_rep_type` int(3) NOT NULL COMMENT 'The limit of this type of event that can happen. IE, this event can happen only X number of times, each player_character can only do this event X numer of times, only allied player_characters can do this event X times, etc. If null, then no limit, and it ',
  `event_reps` int(10) default NULL COMMENT 'The number of times. If null, no limits, and the completion of these events will not happen.',
  `name` varchar(32) NOT NULL COMMENT 'The name of the event. This is for reference for the players who make events, such as "wandering moster X", "Dangerous trap Y", etc',
  `event_type` int(3) NOT NULL COMMENT 'The type of event this is, ie creature event, item event, disease event, stat event, etc',
  `armed` tinyint(1) default '0' COMMENT 'This is true if the event has been activated and made available for use in the game. Once active, the event will not be able to be deleted or edited, as the event might be in use somewhere, esp. if it is made public.',
  `cost` int(20) NOT NULL COMMENT 'How much this event costs',
  `text` varchar(255) default NULL COMMENT 'This is what is displayed to player if they have option of picking this event',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `player_id` (`player_id`),
  KEY `event_type` (`event_type`),
  KEY `armed_player_id` (`armed`,`player_id`),
  KEY `armed_kingdom_id` (`armed`,`kingdom_id`),
  KEY `armed_event_type_name` (`armed`,`event_type`,`name`),
  CONSTRAINT `FK_kingdoms_events` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_events` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `events` */

LOCK TABLES `events` WRITE;

insert  into `events`(`id`,`kingdom_id`,`player_id`,`event_rep_type`,`event_reps`,`name`,`event_type`,`armed`,`cost`,`text`) values (1,1,1,1,NULL,'1-5 stone attack',1,1,135500,NULL),(2,1,1,1,NULL,'planet rock',7,1,500,NULL),(3,1,1,1,NULL,'3-5 squirell attack',1,1,500,NULL),(4,1,1,1,NULL,'roots of oak',7,1,500,NULL),(5,1,1,1,NULL,'1-4 bats attack',1,1,500,NULL),(6,1,1,1,NULL,'3-8 bats attack',1,1,500,NULL),(7,1,1,2,5,'1-3 bear attacks',1,1,500,NULL),(8,1,1,1,NULL,'1-2 bear attack',1,1,500,NULL),(9,1,1,2,1,'2-5 cactus encounter',1,1,500,NULL),(10,1,1,3,1,'1 change attack',1,1,7666,NULL),(11,1,1,1,NULL,'1-3 cube attack',1,1,270500,NULL),(12,1,1,2,1,'1 dragon attack',1,1,1000,NULL),(13,1,1,1,NULL,'1-10 filth attack',1,1,1800500,NULL),(14,1,1,2,1,'1 gazebo attacks',1,1,1340,NULL),(15,1,1,2,5,'3-7 filth attack lpc 5',1,1,3000,NULL),(16,1,1,1,NULL,'2-4 ghost attack',1,1,2727500,NULL),(17,1,1,1,NULL,'1-4 giants attack',1,1,252500,NULL),(18,1,1,1,NULL,'4-8 goats attack',1,1,540500,NULL),(19,1,1,1,NULL,'2-12 goblins attack',1,1,297500,NULL),(20,1,1,2,5,'2-4 lawyers attack',1,1,38000,NULL),(21,1,1,1,NULL,'1-3 lepers attack',1,1,27500,NULL),(22,1,1,1,NULL,'1-2 lions attack',1,1,90500,NULL),(23,1,1,2,4,'2-3 manatee attack',1,1,820,NULL),(24,1,1,1,NULL,'1-20 mokeys attack',1,1,500,NULL),(25,1,1,2,1,'1-3 mystery box attack',1,1,950,NULL),(26,1,1,1,NULL,'1-6 peasants attack',1,1,702500,NULL),(27,1,1,2,10,'3-8 rabid trees attaack lpc 10',1,1,1100,NULL),(28,1,1,1,NULL,'1-3 rabid trees',1,1,54500,NULL),(29,1,1,1,NULL,'5-15 rats attack',1,1,1287500,NULL),(30,1,1,2,1,'1-3 rotting corpses attack',1,1,965,NULL),(31,1,1,1,NULL,'2-5 serpents attack',1,1,324500,NULL),(32,1,1,1,NULL,'1-8 skeletons attack',1,1,500,NULL),(33,1,1,1,NULL,'3-6 slime attack',1,1,108500,NULL),(34,1,1,1,NULL,'2-9 sludge attack',1,1,360500,NULL),(35,1,1,1,NULL,'5-13 squirrell attacks',1,1,243500,NULL),(36,1,1,2,4,'3 superfly attack',1,1,1300,NULL),(37,1,1,1,NULL,'1 telephone attack',1,1,90500,NULL),(38,1,1,1,NULL,'9-25 tentacles attack',1,1,153500,NULL),(39,1,1,2,1,'20-30 blocking tentacles (lpc 1)',1,1,555,NULL),(40,1,1,2,1,'1 vampire lpc 1',1,1,800,NULL),(41,1,1,1,NULL,'1-4 walrus attack',1,1,468500,NULL),(42,1,1,2,1,'1 wherewolf attack lpc 1',1,1,580,NULL),(43,1,1,1,NULL,'2-10 zombies attack',1,1,500,NULL),(44,-1,-1,1,NULL,'\nSYSTEM GENERATED',1,1,0,NULL),(45,-1,-1,1,NULL,'\nSYSTEM GENERATED',1,1,0,NULL),(46,1,1,3,1,'spawn kingdom',11,1,500,NULL),(47,1,1,2,1,'recieve 1 axe of axing lpc 1',3,1,2000,NULL),(48,1,1,2,1,'recieve 1 lead axe lpc 1',3,1,750,NULL),(49,1,1,2,1,'recieev 1 mountain top lpc 1',3,1,2500,NULL),(50,1,1,2,1,'recieve 1 rusty dagger',3,1,550,NULL),(51,1,1,2,1,'catch reefer madness',2,1,500,NULL),(52,1,1,2,1,'cure reefer madness',2,1,17600,NULL),(53,1,1,2,5,'cure soul plague',2,1,354000,NULL),(54,1,1,1,NULL,'catch pustulent corpuscles',2,1,500,NULL),(55,1,1,1,NULL,'catch cholera',2,1,500,NULL),(57,1,1,2,1,'stat s-10',8,1,550,NULL),(58,1,1,1,NULL,'stat hp-15,s-5,c-5',8,1,225500,NULL),(59,1,1,2,1,'stat all+5',8,1,725,NULL),(60,1,1,2,1,'recieve 1 good knife',3,1,650,NULL),(65,1,1,2,1,'20 sludge (lpc )',1,1,525,'Attack the sludge'),(66,1,1,2,1,'sludge defeated',7,1,500,'You have defeated teh sludge blocking the stairway down.'),(67,1,1,1,NULL,'Move down 1 level',4,1,500,'Move down one level'),(69,1,1,2,1,'filth attack 30',1,1,600,'Fight the filth'),(70,1,1,2,1,'defeat dragon, become king',7,1,500,'The dragon has been defeated'),(71,1,1,2,1,'defeat gazebo, become king',7,1,500,'You have defeated the Gazebo'),(72,1,1,2,1,'defeat change, become king',7,1,500,'You have defeated change'),(73,1,1,2,1,'defeat bears, become kign of cav',7,1,500,'The bears have been defeated'),(74,1,1,2,1,'defeat rotting corpses, become k',7,1,500,'The rotting corpses are defeated'),(75,1,1,2,1,'defeat filth, become king',7,1,500,'Filth defeated'),(76,1,1,2,1,'20 blocking sludge defeated',7,1,500,'The sludeg is defeated'),(77,1,1,1,NULL,'move up one level',4,1,500,'Take stairs up'),(78,1,1,1,NULL,'Bedrock',7,1,500,'A rock bed'),(79,-1,-1,1,NULL,'\nCastle Siseneg event',10,1,0,NULL),(80,-1,-1,1,NULL,'\nThrone Siseneg event',9,1,0,NULL),(81,-1,-1,1,NULL,'\nKingdom Siseneg entrance',4,1,0,NULL),(82,-1,-1,1,NULL,'\nKingdom Siseneg storm event',12,1,0,NULL),(83,-1,-1,1,NULL,'\nSYSTEM GENERATED',4,1,0,NULL);

UNLOCK TABLES;

/*Table structure for table `feature_events` */

DROP TABLE IF EXISTS `feature_events`;

CREATE TABLE `feature_events` (
  `id` int(11) NOT NULL auto_increment,
  `feature_id` int(11) NOT NULL COMMENT 'ID of the feature',
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `chance` float NOT NULL default '100' COMMENT '% chance that this event will happen when the tile is clicked. So if there are multiple events assigned, then all or none of them could likely happen. Nothing special happens if none of the events occur.',
  `priority` int(3) default NULL COMMENT 'The priority this event has. The events will execute from lowest number to highest, so if someone has a certain monster guarding a door, and the player_character runs before defeating it, the "passing through the door" event will not happen. If any events',
  `choice` tinyint(1) default '0' COMMENT 'If true, then the player has the option to select from any of the other events of the same priority that are likely to happen that also hve this as true. This will mean that the player can decline to chose any. If an event of same priority as other events',
  PRIMARY KEY  (`id`),
  KEY `feature_id` (`feature_id`),
  KEY `event_id` (`event_id`),
  KEY `feature_priority_id` (`feature_id`,`priority`),
  KEY `feature_id_priority_choice` (`feature_id`,`priority`,`choice`),
  CONSTRAINT `FK_events_feature_events` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_features_feature_events` FOREIGN KEY (`feature_id`) REFERENCES `features` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `feature_events` */

LOCK TABLES `feature_events` WRITE;

insert  into `feature_events`(`id`,`feature_id`,`event_id`,`chance`,`priority`,`choice`) values (1,59,1,70,1,0),(2,54,44,65,42,1),(3,14,45,65,42,1),(4,16,3,100,1,0),(5,16,8,10,1,0),(6,16,24,10,1,0),(7,16,28,40,1,0),(8,16,27,40,1,0),(9,17,22,100,1,0),(10,17,26,65,1,0),(11,22,50,100,1,0),(12,22,60,100,1,0),(13,22,60,100,1,0),(14,22,50,100,1,0),(15,22,26,75,1,0),(16,19,13,50,1,0),(17,19,21,10,1,0),(18,19,23,33,1,0),(19,19,33,100,1,0),(20,19,54,50,1,0),(21,19,51,50,1,0),(22,18,1,60,1,0),(23,18,9,100,1,0),(24,18,31,100,1,0),(25,21,47,100,1,1),(26,20,1,10,1,0),(27,20,17,70,1,0),(28,20,18,100,1,0),(29,20,57,10,1,0),(30,55,7,70,1,0),(31,55,8,100,1,0),(32,55,18,100,1,0),(33,55,16,40,1,0),(34,55,19,100,1,0),(35,56,11,100,1,0),(36,56,17,100,1,0),(37,56,49,100,2,1),(38,15,14,1,1,1),(39,15,3,100,1,0),(40,15,24,60,1,0),(41,57,1,100,1,0),(42,57,16,100,1,0),(43,58,1,100,1,0),(44,58,58,100,1,0),(45,58,25,100,1,0),(46,59,2,100,2,0),(48,25,46,100,2,1),(49,60,22,100,1,0),(50,60,26,100,1,0),(51,60,36,100,1,0),(56,68,67,100,1,0),(58,69,12,100,1,0),(59,69,46,100,3,1),(60,70,14,100,1,0),(61,70,71,100,2,0),(62,70,46,100,3,1),(63,69,70,100,2,0),(64,71,10,100,1,0),(65,71,72,100,2,0),(66,71,46,100,3,1),(67,72,7,100,1,0),(68,72,8,100,2,0),(69,72,8,100,3,0),(70,72,8,100,5,0),(71,72,7,100,4,0),(72,72,8,100,6,0),(73,72,8,100,7,0),(74,72,8,100,8,0),(75,72,73,100,9,0),(76,72,46,100,10,1),(77,73,30,100,1,0),(78,73,30,100,2,0),(79,73,30,100,3,0),(80,73,74,100,4,0),(81,73,46,100,5,1),(82,74,69,100,1,0),(83,74,69,100,2,0),(84,74,75,100,3,0),(85,74,46,100,4,1),(86,75,38,100,1,0),(87,75,13,50,1,0),(88,75,34,50,1,0),(89,76,65,100,1,0),(90,76,76,100,2,0),(91,76,67,100,3,0),(92,84,48,50,1,1),(93,84,37,20,1,0),(94,84,19,100,1,0),(95,84,50,50,1,1),(96,82,42,100,1,0),(97,82,29,75,1,0),(98,86,6,100,1,0),(99,86,40,60,1,0),(100,79,50,40,1,0),(101,79,6,60,1,0),(102,79,29,50,1,0),(103,79,21,100,1,0),(104,83,50,100,1,0),(105,83,50,100,1,0),(106,83,13,100,1,0),(107,83,29,100,1,0),(108,81,77,100,1,0),(110,78,32,100,1,0),(111,78,43,100,1,0),(112,78,19,10,1,0),(113,78,50,33,1,0),(114,77,34,100,1,0),(115,77,29,100,1,0),(116,77,32,100,1,0),(117,85,78,100,1,0),(118,85,37,100,1,0),(119,80,57,10,1,0),(120,80,55,10,1,0),(121,80,33,100,1,0),(122,80,29,100,1,0),(123,80,38,100,1,0),(124,87,38,100,1,0),(125,88,25,25,1,0),(126,88,16,100,1,0),(127,88,43,100,1,0),(128,88,32,100,1,0),(129,89,4,100,1,0),(130,66,79,100,42,1),(131,66,80,100,42,1),(132,67,81,100,42,1),(133,67,82,100,42,1),(134,66,83,100,42,1);

UNLOCK TABLES;

/*Table structure for table `features` */

DROP TABLE IF EXISTS `features`;

CREATE TABLE `features` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(64) default NULL COMMENT 'Name of the feature',
  `description` varchar(256) default NULL COMMENT 'Description of the feature',
  `action_cost` int(1) default NULL COMMENT 'how many actions will be used if player_character clicks the feature',
  `image_id` int(11) NOT NULL COMMENT 'ID of the image represented by the feature',
  `player_id` int(11) NOT NULL COMMENT 'ID of the user who created the feature',
  `world_feature` tinyint(1) default NULL COMMENT 'True if this is a feature available only in the world (the images have different dimensions)',
  `kingdom_id` int(11) NOT NULL COMMENT 'Kingdom id of the home kingdom where this feature was made, always available to this kingdom',
  `public` tinyint(1) default NULL COMMENT 'True if this feature is available to other kingdoms for use. This is false for all world features',
  `cost` int(20) default NULL COMMENT 'How much it costs the king to build this.',
  `num_occupants` int(10) NOT NULL default '0' COMMENT 'The number of occupants that can live here. Only relevant to housing features. The sum of these for a kingdom is the max number of peasants it can have, regardless of the peasant growth rate',
  `armed` tinyint(1) default '0' COMMENT 'Indicated if the feature has been made available for use int he game. If true, then it cannot be edited or destroyed through the menu.',
  `store_front_size` int(2) default '0' COMMENT 'The number of stores that can be set up. Min 0, max 9.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `name` (`name`),
  KEY `image_id` (`image_id`),
  KEY `player_id` (`player_id`),
  KEY `kingdom_id_public_world` (`world_feature`,`kingdom_id`,`public`),
  KEY `world_feature_kingdom_id` (`world_feature`,`kingdom_id`),
  KEY `world_feature_public` (`world_feature`,`public`),
  KEY `armed_wrold_feature_name` (`armed`,`world_feature`,`name`),
  CONSTRAINT `FK_images_features` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`),
  CONSTRAINT `FK_kingdoms_features` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_features` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `features` */

LOCK TABLES `features` WRITE;

insert  into `features`(`id`,`name`,`description`,`action_cost`,`image_id`,`player_id`,`world_feature`,`kingdom_id`,`public`,`cost`,`num_occupants`,`armed`,`store_front_size`) values (8,'Storefront','A regular store that a marchant can sell shit at',0,58,1,0,1,1,510,0,1,1),(9,'SuperMarket','Has many shops',0,60,1,0,1,1,770,0,1,3),(14,'Section 8 Housing','Peasants and other poor beings live in these run down buildings.',1,84,1,0,1,1,10500,100,1,0),(15,'Light Deciduous Wood','A light wood populated with pine trees and evergreens',1,85,1,1,1,0,1526,0,1,0),(16,'Dense Pine Forest','A dense pine forest, lost of trees, tight together, etc',1,86,1,1,1,0,57380,0,1,0),(17,'Grassland','Lots of grass. Thats about it.',1,87,1,1,1,0,793500,0,1,0),(18,'Desert','A landscape with little water',1,88,1,1,1,0,461500,0,1,0),(19,'Swamp','Mosquitoes and humidity, and bog',1,89,1,1,1,0,1938541,0,1,0),(20,'Mountain','Jagged rocks, dangerous climbing',1,90,1,1,1,0,929110,0,1,0),(21,'The axe tree','A tree that grows axes.',1,91,1,1,1,0,4500,0,1,0),(22,'Field of knives','A field that grows knives occasionally',1,92,1,1,1,0,707800,0,1,0),(25,'Test kingdom spawnination feature','Click here to found a kingdom. This should only be used to found the seed kingdom.',1,208,-1,1,-1,0,1000,0,1,0),(49,'\nEmpty','This is the empty feature. The default when a map is generated. Has no associated feature events.',0,139,-1,0,-1,0,500,0,1,0),(54,'housing','Crappy houses for the peasantry',1,157,1,0,1,1,3500,30,1,0),(55,'Mountain Cave','',1,203,1,1,1,0,3567200,0,1,0),(56,'Mountain Peak','',1,204,1,1,1,0,528500,0,1,0),(57,'Giant Rock','A giant rock. Not too special',1,205,1,1,1,0,2863500,0,1,0),(58,'Crater','A hole in the ground',1,206,1,1,1,0,363400,0,1,0),(59,'Planet Rock','A mysterious round boulder...',1,207,1,1,1,0,136500,0,1,0),(60,'Plains','flatter than grassland',1,209,1,1,1,0,796100,0,1,0),(66,'\nCastle Siseneg',NULL,0,215,1,0,0,0,0,0,1,0),(67,'\nKingdom Siseneg entrance',NULL,0,215,1,1,0,0,0,0,1,0),(68,'Stairs down one level','Stairs down',1,217,1,0,1,0,1000,0,1,0),(69,'Village','A quanit little village',1,218,1,1,1,0,4000,0,1,0),(70,'Forest Tribe','tribe living in the forests',1,219,1,1,1,0,4680,0,1,0),(71,'Magic Hamlet','Its magical',1,220,1,1,1,0,9666,0,1,0),(72,'Cave Complex','Lots of caves, lots of places to hide',1,221,1,1,1,0,7000,0,1,0),(73,'Pestelant City','The dead walk the streets',1,222,1,1,-1,0,7790,0,1,0),(74,'Sunken City','A city sunken under the waves',1,223,1,1,-1,0,4400,0,1,0),(75,'Water','Deep enough to drown in',1,224,1,1,-1,0,2315000,0,1,0),(76,'Dirty Stairs Down 1 Level','These stairs are completely filthy',1,225,1,0,1,0,3050,0,1,0),(77,'Dungeon Corridor','A chilly slimy place',1,226,1,0,1,0,1649000,0,1,0),(78,'Dungeon Cell','A cold place to be',1,227,1,0,1,0,299363,0,1,0),(79,'Dungeon Alcove','',1,228,1,0,1,0,1316440,0,1,0),(80,'Sewer','Raw sewage',1,229,1,0,1,0,1550610,0,1,0),(81,'Stairs Up','Stairs leading upward',1,230,1,0,1,0,1000,0,1,0),(82,'Den','',1,231,1,0,1,0,1289160,0,1,0),(83,'Rubbish','nothing of value',1,232,1,0,1,0,3090700,0,1,0),(84,'Anvil','Use by blacsmith',1,233,1,0,1,0,389800,0,1,0),(85,'Bedrock','',1,234,1,0,1,0,91500,0,1,0),(86,'Dungeon Crypt','Death things',1,235,1,0,1,0,1960,0,1,0),(87,'Dark Dungeon Well','Putrid liquid fills this stone hole',1,236,1,0,1,0,154000,0,1,0),(88,'Dungeon Catacomb','Dead are asleep',1,237,1,0,1,0,2729475,0,1,0),(89,'Roots of Oak','',1,238,1,0,1,0,1000,0,1,0);

UNLOCK TABLES;

/*Table structure for table `forum_nodes` */

DROP TABLE IF EXISTS `forum_nodes`;

CREATE TABLE `forum_nodes` (
  `id` int(11) NOT NULL auto_increment,
  `player_id` int(11) NOT NULL COMMENT 'Player who created this node',
  `forum_node_id` int(11) default NULL COMMENT 'Parent node, if null, then its probably a board node',
  `name` varchar(64) default NULL COMMENT 'Title of the node',
  `text` text COMMENT 'Text that is displayed',
  `datetime` datetime default NULL COMMENT 'When the node was created',
  `is_locked` tinyint(1) default '0' COMMENT 'True if this node is locked; it nor any of its children may be edited by anyone except high level mod',
  `is_hidden` tinyint(1) default '0' COMMENT 'True if this node is hidden, it may be edited by author or mods, but no one otehr than author or mods can see it or its children',
  `is_deleted` tinyint(1) default '0' COMMENT 'True fi the node is deleted. All children are considered deleted too, and no posting or viewing of any of those can take place, save for a high level mod',
  `is_mods_only` tinyint(1) default '0' COMMENT 'True if the node is only for the mods use. No nonmod may post children to it nor view',
  `elders` int(1) NOT NULL default '0' COMMENT 'Number of nodes it would take to get to a node with a null parent. Ie, level of 2 is a post, level of 1 is a thred, level of 0 is a board.',
  `edit_notices` text COMMENT 'Edit notices of who edited teh node when. really only used at the post level. nothing will be collected at the moment for the thred or board level.',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `forum_node_id` (`forum_node_id`),
  KEY `name` (`name`),
  KEY `datetime` (`datetime`),
  KEY `forum_node_id_is_locked` (`forum_node_id`,`is_locked`),
  KEY `forum_node_id_is_hidden` (`forum_node_id`,`is_hidden`),
  KEY `forum_node_id_is_deleted` (`forum_node_id`,`is_deleted`),
  KEY `forum_node_id_is_mods_only` (`forum_node_id`,`is_mods_only`),
  CONSTRAINT `FK_forum_nodes_forum_nodes` FOREIGN KEY (`forum_node_id`) REFERENCES `forum_nodes` (`id`),
  CONSTRAINT `FK_players_forum_nodes` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `forum_nodes` */

LOCK TABLES `forum_nodes` WRITE;

insert  into `forum_nodes`(`id`,`player_id`,`forum_node_id`,`name`,`text`,`datetime`,`is_locked`,`is_hidden`,`is_deleted`,`is_mods_only`,`elders`,`edit_notices`) values (1,-1,NULL,'General Discussions','Talk about stuff','2008-11-08 11:52:46',0,0,0,0,0,NULL),(2,-1,NULL,'Bug reports','Let us know when something breaks','2008-11-08 11:53:02',0,0,0,0,0,NULL),(3,-1,NULL,'Hints','Where to go to find things','2008-11-08 12:02:51',0,0,0,0,0,NULL),(4,-1,NULL,'Just for Mods','No nonmods allowed','2008-11-08 12:06:20',0,0,0,1,0,NULL);

UNLOCK TABLES;

/*Table structure for table `forum_restrictions` */

DROP TABLE IF EXISTS `forum_restrictions`;

CREATE TABLE `forum_restrictions` (
  `id` int(11) NOT NULL auto_increment,
  `player_id` int(11) NOT NULL COMMENT 'ID of the player with this posting limitation',
  `restriction` int(3) NOT NULL COMMENT 'The restriction code',
  `expires` date default NULL COMMENT 'when this restriction expires. Null means no expiration.',
  `given_by` int(11) NOT NULL COMMENT 'Who gave the restriction',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `player_id_expires` (`player_id`,`expires`),
  KEY `given_by` (`given_by`),
  KEY `player_id_expires_restriction` (`player_id`,`expires`,`restriction`),
  CONSTRAINT `FK_forum_restrictions` FOREIGN KEY (`given_by`) REFERENCES `players` (`id`),
  CONSTRAINT `FK_players_forum_restrictions` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `forum_restrictions` */

LOCK TABLES `forum_restrictions` WRITE;

UNLOCK TABLES;

/*Table structure for table `genocides` */

DROP TABLE IF EXISTS `genocides`;

CREATE TABLE `genocides` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who killed the last of this creature',
  `level` int(10) NOT NULL COMMENT 'Level of the player_character at the time of anhiliation',
  `when` datetime NOT NULL COMMENT 'when the player_character killed the last of these',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the cerature wiped out',
  `how_eliminated` int(3) NOT NULL COMMENT 'How the creature was wiped out, ie, hand to hand combat, magic, disease',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `creature_id` (`creature_id`),
  CONSTRAINT `FK_creatures_genocides` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_player_characters_genocides` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `genocides` */

LOCK TABLES `genocides` WRITE;

UNLOCK TABLES;

/*Table structure for table `healer_skills` */

DROP TABLE IF EXISTS `healer_skills`;

CREATE TABLE `healer_skills` (
  `id` int(11) NOT NULL auto_increment,
  `max_HP_restore` int(10) default NULL COMMENT 'maximum HP restored at this level with this amount of min sales',
  `max_MP_restore` int(10) default NULL COMMENT 'maximum MP restored at this level with this amount of min sales',
  `disease_id` int(11) default NULL COMMENT 'should be similiar to blacksmith, disease cured at this level with this min sales',
  `max_stat_restore` float default NULL COMMENT 'player_character stats are restored to this % of the base stat at this level',
  `min_sales` int(20) NOT NULL COMMENT 'Minimum sales for these attributes',
  PRIMARY KEY  (`id`),
  KEY `min_sales` (`min_sales`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_diseases_healer_skills` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `healer_skills` */

LOCK TABLES `healer_skills` WRITE;

insert  into `healer_skills`(`id`,`max_HP_restore`,`max_MP_restore`,`disease_id`,`max_stat_restore`,`min_sales`) values (2,5,0,1,0,0),(3,30,30,NULL,30,300),(4,50,50,5,40,1000),(5,60,60,8,45,2500),(6,0,0,13,0,2500),(7,70,70,2,50,5000),(8,80,80,7,55,10000),(9,90,90,9,65,15000),(10,0,0,14,0,15000),(11,100,100,11,70,25000),(12,0,0,12,0,10000),(13,125,125,NULL,70,40000),(14,200,200,NULL,75,75000),(15,400,400,15,95,100000),(16,500,500,NULL,100,250000);

UNLOCK TABLES;

/*Table structure for table `healing_spells` */

DROP TABLE IF EXISTS `healing_spells`;

CREATE TABLE `healing_spells` (
  `id` int(11) NOT NULL auto_increment COMMENT 'Id of the healing spell',
  `name` varchar(32) NOT NULL COMMENT 'name of the spell',
  `description` varchar(256) default NULL COMMENT 'description of the spell',
  `min_level` int(5) default NULL COMMENT 'Minimum level required to cast the spell',
  `min_heal` int(10) default NULL COMMENT 'Minimum amount healed',
  `max_heal` int(10) default NULL COMMENT 'Maximum amount healed',
  `disease_id` int(11) default NULL COMMENT 'Disease ID cured, if applicable. If null, no disease cured. If 0, all diseases cured. If another number, that disease is cured.',
  `mp_cost` int(10) default NULL COMMENT 'MP cost of the spell',
  `cast_on_others?` tinyint(1) default NULL COMMENT 'If true, this spell can be cast on others, including NPCs as wll as other player_characters',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`),
  KEY `min_level` (`min_level`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_diseases_healing_spells` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `healing_spells` */

LOCK TABLES `healing_spells` WRITE;

insert  into `healing_spells`(`id`,`name`,`description`,`min_level`,`min_heal`,`max_heal`,`disease_id`,`mp_cost`,`cast_on_others?`) values (1,'Antifungal','Cures fungal stuff',2,0,0,1,10,1),(2,'Minor Heal','a small heal',0,1,10,NULL,1,0),(3,'Cure for AIDS','will cure those aids',10,10,30,2,20,1),(4,'Moderate Heal','Heals moderate wounds',5,5,20,NULL,5,1),(5,'Cootie shot','Cures cooties',7,0,0,5,10,1),(6,'Magic Stitches','Cures some serious wounds',14,20,50,NULL,15,1),(7,'Clotting Spell','Stops bleeding',10,10,30,7,15,0),(8,'Restore Health','Heals some health',20,30,80,8,30,0),(9,'Rot Cure','Cures the rot',25,0,0,9,40,1),(10,'Physical Restore','Cres serious damage',25,60,180,NULL,70,0),(11,'Revitalize','heals very serious wounds',33,100,250,NULL,100,1),(12,'AntiCholera','cures cholera',17,0,0,12,30,1),(13,'Still','cures the shakes',40,0,0,6,200,0),(14,'Rabie Cure','does what it says it does',9,0,0,13,35,0),(15,'Mind Heal','Cures brain damage',16,20,30,14,23,0);

UNLOCK TABLES;

/*Table structure for table `images` */

DROP TABLE IF EXISTS `images`;

CREATE TABLE `images` (
  `id` int(11) NOT NULL auto_increment,
  `image_text` varchar(2500) default NULL COMMENT 'the ascii image',
  `player_id` int(11) NOT NULL COMMENT 'user id of the player who made the image',
  `public` tinyint(1) NOT NULL default '0' COMMENT 'if true, the image is useable by other kingdoms',
  `kingdom_id` int(11) NOT NULL COMMENT 'home kingdom of the image, image is always available to be assigned in the home kingdom',
  `image_type` int(3) NOT NULL COMMENT 'type of image, ie world feature, kingdom feature, creature, avatar',
  `picture` varchar(256) default NULL COMMENT 'The location of the actual picture, if one exists. Future version of the game may just involve pictures instead of ascii graphics, in case the ascii is just too fucking ugly, whichit probably will be.',
  `name` varchar(32) NOT NULL COMMENT 'The name of the image',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `type` (`image_type`),
  KEY `player_id` (`player_id`),
  CONSTRAINT `FK_kingdoms_images` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_images` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `images` */

LOCK TABLES `images` WRITE;

insert  into `images`(`id`,`image_text`,`player_id`,`public`,`kingdom_id`,`image_type`,`picture`,`name`) values (1,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,-1,4,NULL,'DEFAULT NPC'),(42,' /~\\          /~\\\r\n|   \\        /   | \r\n \\   \\      /    /\r\n  \\___######____/\r\n     ## ## ##\r\n     MMMMMMMM\r\n      | || | \r\n        ||',1,0,1,3,NULL,'Superfly image'),(45,'      ___      \n     /   \\     \n    /     \\    \n   /   O   \\   \n   |        \\  \n   |   __    \\ \n   |   ||    | \n===============\n               \n               ',1,0,1,1,NULL,'building image'),(56,'  /\\\r\n /  \\ /\\      \r\n  || /  \\  /\\ \r\n      ||  /  \\ \n /\\     /\\ || \r\n/  \\/\\ /  \\ \r\n ||/  \\ ||  \r\n    ||/\\     /\\\n kl\r\nkl             \n',1,0,1,2,NULL,'This is the forests'),(58,' /|---------|\\ \n ||  C==D   || \n ||---------|| \n |           | \n | #  MM  #  | \n |    MM     | \n===============\n               \n               \n               ',1,0,1,1,NULL,'Storefront image'),(60,'     vv\r\n    vvvvv\r\n    m   m\r\n    m   m\r\n    m   m\r\nmmmmmmmmmmmmmm\r\nm            m\r\nm            m\r\nm            m\r\nm            m\r\n',1,0,1,1,NULL,'SuperMarket image'),(61,'   \r\n     <~~>\r\n     /  \\\r\n    |    |\r\n  OO  ()  OO\r\n  }}      {{\r\n  ==========\r\n  ==========\r\n  ||      ||\r\n  ||      ||   \n',-1,0,-1,1,NULL,'DEFAULT THRONE'),(82,'\r\n\r\n\n___         ___\n| |__  __  _| |\n\\    ||  ||   /\n |    ____   |\r\n |    |##|   |\r\n |    |##|   |\r\n===============\n\n',-1,0,-1,1,NULL,'DEFAULT CASTLE'),(84,'    *\r\n     *\r\n      *\r\n      __ \r\n    __!!_\r\n   /     \\\r\n  /  #  #%.\r\n  | HH    |\r\n #| HH# @ #  #\r\n###############\n',1,0,1,1,NULL,'Section 8 Housing image'),(85,' /\\\r\n/  \\\r\n ||      /\\\r\n        /  \\\r\n     /\\  ||\r\n    /  \\\r\n     ||   /\\\r\n  /\\      HH \r\n.             .\n\n',1,0,1,1,NULL,'Light Deciduous Wood image'),(86,'               \n /\\        /\\  \n/  \\      /  \\ \n ||    /\\  ||  \n   /\\ /  \\     \n  /  \\ ||   /  \n   ||      /\\  \n /\\      /\\    \n/  \\ /\\ /  \\   \n || /  \\ || /  ',1,0,1,1,NULL,'Dense Pine Forest image'),(87,' \'\'\'\'  \'  \' \'  \n\'  \'\'\'  \'\' \' \'\'\n \'\' \' \'\' \' \' \'\'\n\'  \'\'  \' \'  \' \'\n \'\'  \' \' \'\'  \' \n\' \' \'\' \'  \' \' \'\n \' \'\'  \' \' \'\' \'\n\'\'\'\' \' \'\' \'\' \' \n \' \' \'\' \' \' \'\'\'\n\' \' \'\' \' \' \' \' \'\n',1,0,1,1,NULL,'Grassland image'),(88,' . .      . \r\n             \r\n  .    .     \r\n             .\r\n .   .    . \r\n\r\n .     .     .\r\n\r\n   .      .    \n\n',1,0,1,1,NULL,'Desert image'),(89,',,.,..-,.,.-,.-\n,.-,.,.-,.,-.-.\n,.,.,-.,.,.-,.,\n,-.\',-,.\',-,-\',\n,-,..-,\',-,-\',-\n,.-,.-,.-\',.-,.\n,.\'-,.,-,.-\'.,-\n-\',.-,.-,.\'-,.,\n-\'-,.-,-.-,-.,-\n\r\n',1,0,1,1,NULL,'Swamp image'),(90,'      /\\       \n  /\\ / \\\\  /\\  \n / \\\\  /\\ / \\\\ \n/   \\\\/ \\\\  /\\ \n   /\\   /\\ / \\\\\n  / \\\\ / \\\\   \\\n /   \\/\\    /\\ \n /\\  / \\\\  /~\\\\\n/  \\/   \\\\// \\\\\n               ',1,0,1,1,NULL,'Mountain image'),(91,'   ~~ ~~~~\r\n ~~\\~ ~~  ~~\r\n  ~~ ~ / ~~- ~ \n  ~~~ ~  ~~ ~\r\n     | |   |\r\n     |O|  <|D\r\n     | |\r\n .  /  |\\ .   .\n. ./ / . \\ .  .\n .   .  .   . . \n',1,0,1,1,NULL,'The axe tree image'),(92,'  __    __\r\n  ||    ||\r\n ====  ==== \r\n         __    \n         ||    \n        ====  \r\n  __    \r\n  ||   \r\n ====          \n\n',1,0,1,1,NULL,'Field of knives image'),(93,'   /~~~\\\r\n   |   |\r\n   |   | \r\n   \\/\\ /\\\r\n   { ^_^ }\r\n    |---|\r\n    66666\r\n    {} {}',1,0,1,3,NULL,'Squirrel image'),(94,' ____ _____\r\n/     o    \\_____\r\n\\___     o       \\\r\n    \\____________/',1,0,1,3,NULL,'Slime image'),(95,'    __\r\n   /||\\\r\n   ||||\r\n _ ||||\r\n/|\\||||  _\r\n||||||| /|\\\r\n||\\|||| |||\r\n\\\\--|||_/||\r\n   |||--//\r\n   ||||\r\n',1,0,1,3,NULL,'cactus image'),(96,'\r\n  \\__/\r\n  @..@\r\n   ~/\\---\\-* \r\n   W\\____| \r\n     || ||\r\n     == ==',1,0,1,3,NULL,'Goat image'),(109,'\r\n            /\\\'\\   \r\n      _|_ <_XX  }\r\n     /   \\  ||./ \r\n    / === \\ || \r\n  ------\"\"_ ||\r\n  |    |\' _@d3\r\n  |    | :; ||\r\n  \\    /\':; ||\r\n   \\__/\'\'\'  ||\r\n    [M] [[> \\/',-1,0,-1,4,NULL,'GUARD IMAGE'),(121,'MMMMMMMMMMMM\r\nMMMM\r\nmMMMMMMMMMMMM\r\nMMMMMMMMMMMM\r\n      MMMMMMMM\r\n         MMMMMMM\r\nMMMMMMMMMMMM\r\nmMMMMMMMM',-1,0,-1,4,NULL,'floss\'s character image'),(139,'               \n\n\n\n\n\n\n\n\n\n',-1,0,-1,1,NULL,'Empty image'),(140,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',-1,0,-1,4,NULL,'DEFAULT PC IMAGE'),(150,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',1,0,1,4,NULL,'Fhugue\'s character image'),(157,'               \n   /====\\      \n  |======|     \n  |==+===|     \n  |======|     \n  |==  ==|     \n /|==  ==|\\    \n============   \n               \n               ',1,0,1,1,NULL,'housing image'),(158,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',-1,0,-1,4,NULL,'DEFAULT PC IMAGE'),(171,'   .--\\\r\n   }o.\'\\\r\n   \\~\"|\\\r\n   - - -\\\r\n  ]   { }\r\n  \\x x|.|\r\n  -----w-\r\n (_ _ _ )\r\n   ~ ~| |\r\n  ||  | |\r\n  \\/  ~~~',1,0,1,3,NULL,'Leper image'),(172,'        ____\r\n    ## /  / \\\r\n   @## |  | |\r\n   ====|   \\   \r\n   ===/ &   |\r\n   ===   ^  |\r\n    ==|  #  &\\\r\n       --  |\r\n      /     |\r\n     |      |\r\n     (__ _ _\\\r\n      / | | \\\r\n   \"\"\"\"\"\"\"\"\"\"\"\"\"       ',1,0,1,3,NULL,'Peasant image'),(175,' \r\n \r\n     ----\r\n    /    __\r\n   *    C..o \r\n    \\   ( v)\r\n      \\{{ }}\r\n      /| ~~\\_\r\n      ^ ^ ^ ',1,0,1,3,NULL,'monkey image'),(176,'  \\ !#  *| /#\r\n  #% Q# ,6 # /\r\n * # ?  w @&+ ##\r\n# #\\{\\~&/* ` # 8\r\n # % O\\/O # / *\r\n  \\ | ___ |    # \r\n   =| \"V\" |===|   \r\n ~/ |  `\" |   |*\r\n    | \'  #|\r\n  /-d {{ mm-\\\r\n -   |mmm\\   -\\\r\n  m m     \\ mm  ',1,0,1,3,NULL,'Rabid Tree image'),(177,'\r\n O..O\r\n =\\/=_\r\n |\"\"|,\\==--\r\n ~~~~~~\r\n   ',1,0,1,3,NULL,'Rat image'),(178,' ___ ,, ___\r\n/ | \\oo/ | \\\r\n     \'\' ',1,0,1,3,NULL,'Bat image'),(179,'\r\n ____________\\_\r\n=~~======~~~===\\__/__\r\n \\==~~~======\"======\r\n  == \\=====/  \\====/ \r\n             ~~~~  ',1,0,1,3,NULL,'Sludge image'),(180,'  \\    /\r\n  |\\--/|\r\n   {><}\r\n   |--| |\\\r\n   (==) ||\r\n(@======|3\r\n   |\"#\"=|\r\n  /=# #=|',1,0,1,3,NULL,'Goblin image'),(181,'  _____ \r\n /    /|\r\n/____/ |\r\n|    | |\r\n|    | /\r\n|____|/',1,0,1,3,NULL,'Cube image'),(182,'\r\n    _____\r\n  ,\'     `.\r\n /   o o   \\\r\n |    o    |\r\n |         |\r\n |         |\r\n |         |\r\n \\_/-\\_/-\\_/\r\n',1,0,1,3,NULL,'Ghost image'),(183,'\r\n   _.--._\r\n  / q_p \\\\ \r\n \'  O O  \'\'\r\n | .\\ /. ||\r\n | ||\" | ||\r\n | ||  | ||\r\n \"\"\'\"  \"\"\'\"',1,0,1,3,NULL,'Bear image'),(184,'\r\n   .-.\r\n  O  O\\.\r\n  \\.._/ \'  \r\n  /I#I   \\  /\r\n \'|I I  | |- |\r\n ||     | |  /\r\n \\________/_/',1,0,1,3,NULL,'Walrus image'),(185,'     ,---._         \r\n  _,O      `-- - ~. ~  \r\n  \\__ .   .  _    -- \r\n     `-\\  |~~ ~`-\'`\r\n       `-~         ',1,0,1,3,NULL,'Manatee image'),(186,'\r\n    _.O.\r\n >-\'    `\'~~--=---~~----~=~\r\n   `~~~~~~=~=~~~==~~=~~=\'',1,0,1,3,NULL,'Serpent image'),(187,' \r\n \\|||/\r\n -0V0-\r\n = I =\r\n =\'^\'=\r\n  ~~~ ',1,0,1,3,NULL,'Lion image'),(188,'\r\n   ,~-~.\r\n  / -  -|\r\n  |   \\  \\\r\n  | -~ \\ |\r\n  \\______/',1,0,1,3,NULL,'Stone image'),(189,'        ..\r\n       \'--\' \r\n   .~~//||\\\\~~.\r\n  {\\: :----: :/}\r\n  { \\: : : : / }\r\n  { /\\: : : /\\ }\r\n  { }|######|[ ]\r\n  { }|######|[ ]\r\n  {88|  ##  |666\r\n  `8;\'  ##  |\r\n  <;>|__##__|\r\n  <O>[..||.>> \r\n   V [..||.>>>\r\n     @@@v@@@@>',1,0,1,3,NULL,'Giant image'),(190,'\r\n     ,~~-.\r\n    /o/ `~`\r\n   ;<     \'\r\n   \':o\r\n   |\'\\\r\n   `\'v\\\r\n   /v\'`\r\n  ~~~~~~',1,0,1,3,NULL,'Tentacle image'),(191,'\r\n     _____________\r\n    /             \\\r\n   /  ,---------.  \\\r\n  ====   .~\'~.   ====\r\n    /   \'* * *\'   \\\r\n   \'____\\\'-~-\'/____\'\r\n   |_______________|',1,0,1,3,NULL,'Telephone image'),(192,'\r\n      |\\/|\r\n##--. {><}~-. \r\n=~~~  =}{= ~\\\\\r\n    #  \'\'  : \\\\\r\n    .\\\"\"\"\" / \'\"\r\n     ||\'\'||\r\n     ||  \\\\\r\n     MM  MM',1,0,1,3,NULL,'Wherewolf image'),(193,'\r\n    ,...\r\n    |% 3\r\n    `|=/\r\n   m~   \'\\___\r\n   w--|.`\\-=`;!\r\n   --/~\\|  \r\n    \\;;?/\r\n    =====\r\n    ( _ )\r\n    |/ ||\r\n    |  ||\r\n    +  \\==',1,0,1,3,NULL,'Zombie image'),(194,'\r\n     .~.\r\n    |O O|\r\n     |\"|\r\n      -\r\n   0--|--0\r\n   |--|--||\r\n   |-/\'\\-||\r\n8==*  :   |\r\n   .-_:_-.*\r\n   |o _ o|\"\r\n    -\' \'- \"\r\n    |   |\r\n    |   |\r\n    O   O\r\n    I   I\r\n    I   I\r\n  #MM#M##M#',1,0,1,3,NULL,'Skeleton image'),(195,'------------\r\n|?    _   ?|\r\n|    / \\   |\r\n|      /   |\r\n|     |    |\r\n|          |\r\n|?    *   ?|\r\n------------',1,0,1,3,NULL,'Mystery Box image'),(196,'  __._._           _._.__\r\n *  / | \\  .  .   / | \\  *\r\n/~~/~~\'~~\\ \\,,/  /~~\'~~\\~~\\\r\n         +\'}oo{\'+\r\n           !||!   \r\n       = ][ \"\" ][ =\r\n    \"\"  \"\"\"\"\"\"\"\"\"\" \" \"\"\r\n      \" \"\" \" \"\"  \"\" \"\r\n        \"\"  \"\" \"\" \"\"',1,0,1,3,NULL,'Dragon image'),(197,'     ~     ~\r\n ~      ~    \r\n     ~      ~\r\n  ^&**  #%^&\r\n.~^&~***&*&***.\r\n===============',1,0,1,3,NULL,'Filth image'),(198,'   \\,~.\r\n   }\\o-\\\r\n  .------$\r\n  |      /\r\n  |     /\r\n  |     |\r\n  |   _/\r\n  `~~\'||\r\n    &&&&&',1,0,1,3,NULL,'Vampire image'),(199,'       __\r\n      /  \\\r\n     ------\r\n      |~~|\r\n      \'--\'\r\n   .-/\\/\\/\\-.\r\n  /    \\/    \\\r\n  | !  ||  ! |\r\n  | !  ||  ! |\r\n  | !  \\/  ! |\r\n  \'-!      !-\'\r\n  ===------\'++\r\n  |#||     | |\r\n  |#||  |  | |\r\n  ===|  |  | |\r\n     |  |  | |\r\n    $$$$$$$$$*',1,0,1,3,NULL,'Lawyer image'),(200,'      =======\r\n  ===============\r\n===================\r\n ||  ||     ||  ||\r\n ||  ||     ||  ||\r\n ||==||     ||==||\r\n ||  ||=====||  ||\r\n =================\r\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"',1,0,1,3,NULL,'Gazebo image'),(201,'    \r\n ~    ,3\r\n    `|=/   ~\r\n   m~   \'\\___\r\n   w--|.`\\-=`;!\r\n   --/~\\|  ~\r\n~   \\;;?~~\r\n    =====~~~~~',1,0,1,3,NULL,'Rotting Corpse image'),(202,'          //\\\r\n         //\\ \\\r\n        // \\\\ \\\r\n       // / \\\\ \\\r\n      // /   \\\\ \\\r\n     // /     \\\\ \\\r\n    // /       \\\\ \\\r\n   // /         \\\\ \\\r\n  // /_____________ \\\r\n // /----------------\\\r\n//_/------------------\\',1,0,1,3,NULL,'Change image'),(203,'   /\\  /\\      \n  / \\\\/ \\\\  /\\ \n /  \\\\  /\\ / \\\\\n/    \\\\/ \\\\ /\\ \n  /\\    /\\ /\\\\\\\n / \\\\  / \\\\    \n/   \\ *#*    /\\\n /\\  /###\\  / \\\n/  \\/}###\\\\/  \\\n               ',1,0,1,1,NULL,'Mountain Cave image'),(204,'               \n               \n      /\\\\      \n     /  \\\\     \n    /    \\\\    \n   //\\/\\/\\\\\\   \n  // /  \\  \\\\  \n ///  \\/  \\ \\\\ \n//\\/\\\\ //\\\\//\\\\\n               ',1,0,1,1,NULL,'Mountain Peak image'),(205,'               \n               \n               \n    ,~~~~.     \n   / -    ~    \n  /     @  \\   \n===============\n               \n               \n               ',1,0,1,1,NULL,'Giant Rock image'),(206,'               \n               \n               \n               \n               \n ,/\"\"\"\"\"\"\\.    \n=/\" /^\'\\\'.\\=   \n .=\'=.==\'=     \n               \n               ',1,0,1,1,NULL,'Crater image'),(207,'               \n               \n     _.~._     \n    / \"\"  \\    \n   .\'\" \"\"\' .   \n   |  \"\"\"  |   \n   \'   \' \' \'   \n    \\_\'\"\"_/    \n     \"\"\"\"\"     \n               ',1,0,1,1,NULL,'Planet Rock image'),(208,'               \n     ~~~~      \n   ~~    ~~    \n     ~~~~      \n      ~~       \n      ~~       \n    ~~~~~~~    \n===============\n               \n               ',-1,0,-1,1,NULL,'Test kingdom spawnination featur'),(209,'\'  \'    \'   \'  \n \'    \'    \'   \n \'  \'   \'    \' \n   \'  \'    \'   \n \'   \'  \'    \' \n   \'      \'    \n \'     \'    \'  \n    \'    \'     \n\' \'   \'    \'  \'\n    \'   \'    \' ',1,0,1,1,NULL,'Plains image'),(210,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',-1,0,-1,4,NULL,'System\'s character image'),(215,'\r\n\r\n\n___         ___\n| |__  __  _| |\n\\    ||  ||   /\n |    ____   |\r\n |    |##|   |\r\n |    |##|   |\r\n===============\n\n',-1,0,0,1,NULL,'Siseneg Castle Image'),(216,'\r\n            /\\\'\\   \r\n      _|_ <_XX  }\r\n     /   \\  ||./ \r\n    / === \\ || \r\n  ------\"\"_ ||\r\n  |    |\' _@d3\r\n  |    | :; ||\r\n  \\    /\':; ||\r\n   \\__/\'\'\'  ||\r\n    [M] [[> \\/',-1,0,0,4,NULL,'Siseneg Guard Image'),(217,'               \n               \n ||=========|| \n ||         || \n ||         || \n ||-\\\\      || \n ||  \\\\     || \n ||   \\\\    || \n ||=========|| \n               ',1,0,1,1,NULL,'Stairs to level -1 image'),(218,'               \n  /~\\   ____   \n  |=|  /####\\  \n       |\"\".\"|  \n   ___         \n  /\"\"\"\\ _____  \n /_____/_____\\ \n  |\'.\'| |^.^|  \n #######|\'#\'|  \n               ',1,0,1,1,NULL,'Village image'),(219,'               \n /\\        /\\  \n/  \\      /  \\ \n ||#  #/\\ #||  \n # /\\ /  \\     \n  /  \\##|   /  \n  #||     #/\\  \n /\\  #  #/\\    \n/  \\#/\\ /  \\   \n ||#/  \\ # || /',1,0,1,1,NULL,'Forest Tribe image'),(220,'               \n               \n     |   |     \n \\          /  \n               \n |~~~~~~~~~~|  \n |    |#|   |  \n---------------\n               \n               ',1,0,1,1,NULL,'Magic Hamlet image'),(221,'   /\\  /\\      \n  / \\\\/ \\\\  /\\ \n / #\\\\ #/\\ / \\\\\n/ ###\\\\/#\\\\ /\\ \n  /\\    /\\ /\\\\\\\n /#\\\\  / \\\\#   \n/###\\ *#* ###/\\\n /\\  /###\\  / \\\n/  \\/}...\\\\/##\\\n               ',1,0,1,1,NULL,'Cave Complex image'),(222,'               \n               \n               \n |\\            \n | *  /~ ~~\\   \n | | ~~~^^^^   \n | |##  %@ %   \n==============+\n               \n               ',1,0,1,1,NULL,'Pestelant City image'),(223,'  ~     ~    ~ \n       :  :    \n~ :  ~    :~   \n  :  ,.. :.    \n  ~ .  ~  ;.~  \n    ,.. ..,:   \n ~ ~.  : ~ . ~ \n  | . .. .``   \n  ~  ~     ~   \n~       ~      ',1,0,1,1,NULL,'Sunken City image'),(224,' ~   ~    ~    \n               \n   ~    ~    ~ \n               \n ~    ~   ~    \n               \n    ~    ~  ~  \n               \n~  ~   ~   ~   \n               ',1,0,1,1,NULL,'Water image'),(225,'               \n               \n ||=========|| \n ||         || \n || ##      || \n ||-\\## ## #|| \n || ##\\#####|| \n ||####\\####|| \n ||=========|| \n               ',1,0,1,1,NULL,'Dirty Stairs Down 1 Level image'),(226,'---------------\n|\\           /|\n| \\         / |\n|  \\_______/  |\n|  | V V V |  |\n|  |_______|  |\n|  /       \\  |\n| /         \\ |\n|/           \\|\n---------------',1,0,1,1,NULL,'Dungeon Corridor image'),(227,'               \n---------------\n               \n   MMMMMMMMM   \n   M | | | M   \n   M |###| M   \n   M | | | M   \n   M | | | M   \n===============\n               ',1,0,1,1,NULL,'Dungeon Cell image'),(228,'               \n               \n  /\\/\\/\\/\\/\\   \n  |        |   \n  |   __   |   \n  |  /__\\  |   \n  |   ##   |   \n  |   ##   |   \n============== \n               ',1,0,1,1,NULL,'Dungeon Alcove image'),(229,'\\ \\________/ / \n \\________0_/  \n=   =   =   =  \n  =  =    ___  \n ~ =  =  /|||\\ \n-------------- \n--/||||\\------ \n##$%#$##$%#$%# \n#$%$%#$##$#$%% \n============== ',1,0,1,1,NULL,'Sewer image'),(230,'               \n               \n||=========||  \n||  |###|  ||  \n|| /|###|\\ ||  \n||/ /===\\ \\||  \n|| /=====\\ ||  \n||/=======\\||  \n||=========||  \n               ',1,0,1,1,NULL,'Stairs Up image'),(231,'    =      =   \n  =     =    = \n =    =    =   \n  /===/===/  = \n= |M#####M\\=   \n =/##M#@@#||   \n  /H####M#\\\\   \n---=---------- \n               \n               ',1,0,1,1,NULL,'Den image'),(232,' =    =        \n   =      =    \n  ~    =    ~  \n=  =       =   \n      ~        \n = #$M#%M   =  \n   @#$%#M@     \n--@#$%#^%$%-   \n               \n               ',1,0,1,1,NULL,'Rubbish image'),(233,'               \n               \n  _________    \n  `.__   _/    \n     /  |`     \n    /    \\     \n-------------  \n               \n               \n               ',1,0,1,1,NULL,'Anvil image'),(234,'               \n               \n ._.           \n |=|           \n |=\\_______.   \n |=========|   \n |=|     |=|   \n============== \n               \n               ',1,0,1,1,NULL,'Bedrock image'),(235,'               \n       O       \n      -|-      \n       |       \n   /-------\\   \n   | ++ ++ |   \n   |-------|   \n               \n===============\n               ',1,0,1,1,NULL,'Dungeon Crypt image'),(236,'               \n               \n  ~            \n           ~   \n   ._  __      \n  (==!~= )     \n  (   =  )     \n=============  \n               \n               ',1,0,1,1,NULL,'Dark Dungeon Well image'),(237,'=   }O\"O{      \n  = |\\^/|    = \n   =_____ ^_^  \n   |=====|=    \n = |=+++=|     \n   |=+++=| o   \n   |=+++=| +   \n~~~~~~~~~~~~~  \n               \n               ',1,0,1,1,NULL,'Dungeon Catacomb image'),(238,' /  / M \\  \\   \n/   \\ M  \\  |  \n|   / M  |  \\  \n\'  /  M  |  /  \n      |  `  `  \n      \'        \n               \n               \n               \n               ',1,0,1,1,NULL,'Roots of Oak image'),(239,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',2,0,0,4,NULL,'noob\'s character image'),(240,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,1,4,NULL,'Rufus Sven Svenburg image'),(241,'\r\n            /\\\'\\   \r\n      _|_ <_XX  }\r\n     /   \\  ||./ \r\n    / === \\ || \r\n  ------\"\"_ ||\r\n  |    |\' _@d3\r\n  |    | :; ||\r\n  \\    /\':; ||\r\n   \\__/\'\'\'  ||\r\n    [M] [[> \\/',-1,0,1,4,NULL,'Siseneg Guard Image'),(242,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,1,4,NULL,'Margaret Jonse image'),(243,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,1,4,NULL,'Dorian image'),(244,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,1,4,NULL,'Rupert Eliza image'),(245,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,1,4,NULL,'Jonse O\'Donatello the Sharp imag'),(246,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,1,4,NULL,'Rufus Elizaowit image');

UNLOCK TABLES;

/*Table structure for table `infections` */

DROP TABLE IF EXISTS `infections`;

CREATE TABLE `infections` (
  `id` int(11) NOT NULL auto_increment,
  `character_id` int(11) NOT NULL COMMENT 'player_character id with disease',
  `disease_id` int(11) NOT NULL COMMENT 'disease player_character has',
  PRIMARY KEY  (`id`),
  KEY `character_id` (`character_id`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_characters_infections` FOREIGN KEY (`character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_diseases_infections` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `infections` */

LOCK TABLES `infections` WRITE;

insert  into `infections`(`id`,`character_id`,`disease_id`) values (1,-1,1);

UNLOCK TABLES;

/*Table structure for table `items` */

DROP TABLE IF EXISTS `items`;

CREATE TABLE `items` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(64) NOT NULL default '' COMMENT 'name of the item',
  `equip_loc` int(3) NOT NULL COMMENT 'where this item may be equipped.',
  `description` varchar(256) default NULL COMMENT 'description of the item',
  `base_item_id` int(11) NOT NULL COMMENT 'item''s base type',
  `min_level` int(5) NOT NULL COMMENT 'minimum level required to be able to equip this item',
  `c_class_id` int(11) default NULL COMMENT 'favored c_class, a character with this c_class who equips gains an additional 10% to the normal item stat mod',
  `race_id` int(11) default NULL COMMENT 'favored race, a character with this race who equips gains an additional 10% stat mod to the normal',
  `str` int(10) default NULL COMMENT 'strength modifier',
  `dex` int(10) default NULL COMMENT 'dexterity modifier',
  `mag` int(10) default NULL COMMENT 'magic modifier',
  `int` int(10) default NULL COMMENT 'intelligence modifier',
  `con` int(10) default NULL COMMENT 'constitution modifier',
  `dfn` int(10) default NULL COMMENT 'defense modifier',
  `dam` int(10) default NULL COMMENT 'damamge modifier',
  `race_body_type` int(3) default NULL COMMENT 'If null, then this item has no race restrictions. Otherwise, only races with this body type may use this item. Note that smiths might be able to reforge an item for use by a different race.',
  `price` int(20) default NULL COMMENT 'The gold equivalent of this item. Arbitrarily set.',
  `npc_id` int(11) default NULL COMMENT 'ID of the npc which makes this item. If this is nul, then this is a generic item, and any NPC can make',
  PRIMARY KEY  (`id`),
  KEY `base_item_id` (`base_item_id`),
  KEY `name` (`name`),
  KEY `min_level` (`min_level`),
  KEY `race_body_type` (`race_body_type`),
  KEY `race_id` (`race_id`),
  KEY `c_class_id` (`c_class_id`),
  KEY `npc_id` (`npc_id`),
  KEY `npc_id_base_item_id_price` (`npc_id`,`base_item_id`,`price`),
  CONSTRAINT `FK_base_items_items` FOREIGN KEY (`base_item_id`) REFERENCES `base_items` (`id`),
  CONSTRAINT `FK_c_classes_items` FOREIGN KEY (`c_class_id`) REFERENCES `c_classes` (`id`),
  CONSTRAINT `FK_races_items` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `items` */

LOCK TABLES `items` WRITE;

insert  into `items`(`id`,`name`,`equip_loc`,`description`,`base_item_id`,`min_level`,`c_class_id`,`race_id`,`str`,`dex`,`mag`,`int`,`con`,`dfn`,`dam`,`race_body_type`,`price`,`npc_id`) values (1,'Axe of axing',1,'A good axe',4,2,1,1,5,0,0,0,0,0,10,1,300,NULL),(2,'Good knife',1,'A better than normal knife',1,1,1,1,0,5,0,0,0,0,5,NULL,30,NULL),(5,'Rusty Dagger',1,'A dagger that is really, really, rusted.',1,1,25,1,0,0,0,0,0,0,3,NULL,10,NULL),(6,'Lead Ax',1,'heavy axe of lead',4,5,25,1,0,0,0,0,0,2,10,NULL,50,NULL),(7,'Mountain Top',1,'THe tip of a mountain',22,20,25,2,15,0,15,0,5,5,20,NULL,400,NULL),(9,'Plastic Sword',1,'Sword made from the finest plastic in all the land',8,4,25,3,10,10,0,0,0,0,5,NULL,50,NULL),(10,'Cardboard Helm',4,'Just like DOn Quixhote\'s',3,5,1,3,0,0,15,0,0,3,0,NULL,100,NULL),(11,'Glistening Boots',2,'These boots really glisten!',2,15,14,1,5,20,10,10,0,10,5,NULL,500,NULL);

UNLOCK TABLES;

/*Table structure for table `kingdom_bans` */

DROP TABLE IF EXISTS `kingdom_bans`;

CREATE TABLE `kingdom_bans` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of kingdom',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of player_character baned from the kingdom/blacklisted by king',
  `name` varchar(32) NOT NULL COMMENT 'Name of the player_character who is banned.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `kingdom_player_character_id` (`kingdom_id`,`player_character_id`),
  KEY `name` (`name`),
  CONSTRAINT `FK_kingdoms_kingdom_bans` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_player_characters_kingdom_bans` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_bans` */

LOCK TABLES `kingdom_bans` WRITE;

UNLOCK TABLES;

/*Table structure for table `kingdom_empty_shops` */

DROP TABLE IF EXISTS `kingdom_empty_shops`;

CREATE TABLE `kingdom_empty_shops` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'the kingdom where the empty store is in. Used for indexing purposes mainly',
  `level_map_id` int(11) NOT NULL COMMENT 'The level map that has an empty storefront.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `level_map_id` (`level_map_id`),
  KEY `kingdom_id_level_id` (`kingdom_id`,`level_map_id`),
  CONSTRAINT `FK_kingdoms_kingdom_empty_shops` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_level_maps_kingdom_empty_shops` FOREIGN KEY (`level_map_id`) REFERENCES `level_maps` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_empty_shops` */

LOCK TABLES `kingdom_empty_shops` WRITE;

insert  into `kingdom_empty_shops`(`id`,`kingdom_id`,`level_map_id`) values (1,1,163),(2,1,163),(3,1,163),(4,1,167),(5,1,168),(6,1,169);

UNLOCK TABLES;

/*Table structure for table `kingdom_entries` */

DROP TABLE IF EXISTS `kingdom_entries`;

CREATE TABLE `kingdom_entries` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom',
  `allowed_entry` int(3) NOT NULL COMMENT 'How the kingdom is limiting entry, ie, no entry, only those aligned, only those not on blacklist, no signs of disease, etc',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  CONSTRAINT `FK_kingdoms_kingdom_entries` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_entries` */

LOCK TABLES `kingdom_entries` WRITE;

insert  into `kingdom_entries`(`id`,`kingdom_id`,`allowed_entry`) values (1,1,3);

UNLOCK TABLES;

/*Table structure for table `kingdom_items` */

DROP TABLE IF EXISTS `kingdom_items`;

CREATE TABLE `kingdom_items` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item in the kingdom storerooms',
  `quantity` int(10) NOT NULL default '0' COMMENT 'Number f this item in the storerooms',
  PRIMARY KEY  (`id`),
  KEY `FK_kingdom_items_kingdoms` (`kingdom_id`),
  KEY `FK_kingdom_items_items` (`item_id`),
  CONSTRAINT `FK_items_kingdom_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_kingdoms_kingdom_items` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_items` */

LOCK TABLES `kingdom_items` WRITE;

insert  into `kingdom_items`(`id`,`kingdom_id`,`item_id`,`quantity`) values (1,1,9,10000),(2,1,10,10000),(3,1,11,10000);

UNLOCK TABLES;

/*Table structure for table `kingdom_notices` */

DROP TABLE IF EXISTS `kingdom_notices`;

CREATE TABLE `kingdom_notices` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom',
  `shown_to` int(3) NOT NULL COMMENT 'who sees this bulletin',
  `datetime` datetime NOT NULL COMMENT 'When this bulletin was created',
  `text` text COMMENT 'What happened',
  `signed` varchar(64) default NULL COMMENT 'Who signed the notice; it who posted it.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `kingdom_shown_to_id` (`kingdom_id`,`shown_to`),
  KEY `kingdom_datetime_id` (`kingdom_id`,`datetime`),
  KEY `signed` (`signed`),
  CONSTRAINT `FK_kingdoms_kingdom_notices` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_notices` */

LOCK TABLES `kingdom_notices` WRITE;

insert  into `kingdom_notices`(`id`,`kingdom_id`,`shown_to`,`datetime`,`text`,`signed`) values (1,0,1,'2009-05-18 08:48:16','Population trends:<br/>Births: 15<br/>Immigrants: 102<br/>Emmigrants: 0<br/>Deaths from disease: 0','Minister of Population'),(2,0,1,'2009-05-18 08:49:00','Population trends:<br/>Births: 102<br/>Immigrants: 102<br/>Emmigrants: 0<br/>Deaths from disease: 0','Minister of Population'),(3,0,1,'2009-05-18 17:50:49','Population trends:<br/>Births: 255<br/>Immigrants: 102<br/>Emmigrants: 0<br/>Deaths from disease: 0','Minister of Population'),(4,0,1,'2009-05-18 17:53:35','Population trends:<br/>Births: 528<br/>Immigrants: 102<br/>Emmigrants: -51<br/>Deaths from disease: 0','Minister of Population'),(5,0,1,'2009-05-18 17:55:02','Population trends:<br/>Births: 1032<br/>Immigrants: 102<br/>Emmigrants: -124<br/>Deaths from disease: 0','Minister of Population'),(6,0,1,'2009-05-18 18:03:10','Population trends:<br/>Births: 1976<br/>Immigrants: 102<br/>Emmigrants: -321<br/>Deaths from disease: 0','Minister of Population');

UNLOCK TABLES;

/*Table structure for table `kingdoms` */

DROP TABLE IF EXISTS `kingdoms`;

CREATE TABLE `kingdoms` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the kingdom',
  `name` varchar(32) NOT NULL COMMENT 'name of the kingdom',
  `player_character_id` int(11) default NULL COMMENT 'the king',
  `num_of_pc` int(5) default NULL COMMENT 'Number of PC''s affiliated with kingdom',
  `tax_rate` float default '5' COMMENT 'Tax rate in the kingdom (this is the percentage of gold taken from the total left by a monster or found randomly, as well as percentage added to NPC service charges)',
  `num_peasants` int(10) NOT NULL COMMENT 'The number of pesants residing in the city and nearby lands, doing the menial labor and whatever else epasants do to in the background.',
  `gold` int(20) NOT NULL default '0' COMMENT 'The amount of gold the kingdom has in its secure coffers.',
  `world_id` int(11) NOT NULL COMMENT 'The world where the kingdom is located. Initially, all kingdoms will be located in the main world, even if the higher and lower worlds are breached. Will need to think more on this later when/if it becomes an issue.',
  `bigx` int(2) NOT NULL COMMENT 'Teh x location of the kingdom. Used whena character is created as the starting coordinates.',
  `bigy` int(2) NOT NULL COMMENT 'The y location of the kingdom in the world.',
  `housing_cap` int(10) NOT NULL default '0' COMMENT 'The number of housing units for peasants',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `name` (`name`),
  KEY `num_of_pc` (`num_of_pc`),
  KEY `num_peasants` (`num_peasants`),
  KEY `tax_rate` (`tax_rate`),
  KEY `world_id` (`world_id`),
  CONSTRAINT `FK_player_characters_kingdoms` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_worlds_kingdoms` FOREIGN KEY (`world_id`) REFERENCES `worlds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdoms` */

LOCK TABLES `kingdoms` WRITE;

insert  into `kingdoms`(`id`,`name`,`player_character_id`,`num_of_pc`,`tax_rate`,`num_peasants`,`gold`,`world_id`,`bigx`,`bigy`,`housing_cap`) values (-1,'SystemGeneratd',-1,NULL,1,0,0,1,0,0,0),(0,' None',NULL,NULL,1,0,0,1,0,0,0),(1,'Siseneg',1,NULL,5,5033,2107690280,1,0,0,390);

UNLOCK TABLES;

/*Table structure for table `level_maps` */

DROP TABLE IF EXISTS `level_maps`;

CREATE TABLE `level_maps` (
  `id` int(11) NOT NULL auto_increment,
  `level_id` int(11) NOT NULL COMMENT 'ID of the level this map represents',
  `xpos` int(2) NOT NULL COMMENT 'The x positioon of the map tile',
  `ypos` int(2) NOT NULL COMMENT 'The y position of the map tile',
  `feature_id` int(11) default NULL COMMENT 'The feature at this position',
  PRIMARY KEY  (`id`),
  KEY `level_id` (`level_id`),
  KEY `feature_id` (`feature_id`),
  KEY `level_id_x_y` (`level_id`,`xpos`,`ypos`),
  CONSTRAINT `FK_features_level_maps` FOREIGN KEY (`feature_id`) REFERENCES `features` (`id`),
  CONSTRAINT `FK_levels_level_maps` FOREIGN KEY (`level_id`) REFERENCES `levels` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `level_maps` */

LOCK TABLES `level_maps` WRITE;

insert  into `level_maps`(`id`,`level_id`,`xpos`,`ypos`,`feature_id`) values (1,1,0,0,49),(2,1,1,0,49),(3,1,2,0,49),(4,1,3,0,49),(5,1,4,0,49),(6,1,0,1,49),(7,1,1,1,49),(8,1,2,1,49),(9,1,3,1,49),(10,1,4,1,49),(11,1,0,2,49),(12,1,1,2,49),(13,1,2,2,49),(14,1,3,2,49),(15,1,4,2,49),(17,3,0,0,49),(18,3,1,0,49),(19,3,2,0,49),(20,3,3,0,49),(21,3,4,0,49),(22,3,0,1,49),(23,3,1,1,49),(24,3,2,1,49),(25,3,3,1,49),(26,3,4,1,49),(27,3,0,2,49),(28,3,1,2,49),(29,3,2,2,49),(30,3,3,2,49),(31,3,4,2,49),(32,3,0,3,49),(33,3,1,3,49),(34,3,2,3,49),(35,3,3,3,49),(36,3,4,3,49),(37,3,0,4,49),(38,3,1,4,49),(39,3,2,4,49),(40,3,3,4,49),(41,3,4,4,49),(42,4,0,0,49),(43,4,1,0,49),(44,4,2,0,49),(45,4,3,0,49),(46,4,0,1,49),(47,4,1,1,49),(48,4,2,1,49),(49,4,3,1,49),(50,4,0,2,49),(51,4,1,2,49),(52,4,2,2,49),(53,4,3,2,49),(54,4,0,3,49),(55,4,1,3,49),(56,4,2,3,49),(57,4,3,3,49),(58,5,0,0,49),(59,5,1,0,49),(60,5,2,0,49),(61,5,0,1,49),(62,5,1,1,49),(63,5,2,1,49),(64,5,0,2,49),(65,5,1,2,49),(66,5,2,2,49),(67,6,0,0,49),(68,6,1,0,49),(69,6,0,1,49),(70,6,1,1,49),(71,6,0,2,49),(72,6,1,2,49),(73,7,0,0,49),(74,7,1,0,49),(75,7,0,1,49),(76,7,1,1,49),(77,8,0,0,49),(78,8,1,0,49),(79,8,2,0,49),(80,8,0,1,49),(81,8,1,1,49),(82,8,2,1,49),(83,9,0,0,49),(84,9,1,0,49),(85,9,2,0,49),(86,9,0,1,49),(87,9,1,1,49),(88,9,2,1,49),(89,9,0,2,49),(90,9,1,2,49),(91,9,2,2,49),(92,10,0,0,49),(93,10,1,0,49),(94,10,2,0,49),(95,10,3,0,49),(96,10,0,1,49),(97,10,1,1,49),(98,10,2,1,49),(99,10,3,1,49),(100,10,0,2,49),(101,10,1,2,49),(102,10,2,2,49),(103,10,3,2,49),(104,11,0,0,49),(105,11,1,0,49),(106,11,2,0,49),(107,11,3,0,49),(108,11,0,1,49),(109,11,1,1,49),(110,11,2,1,49),(111,11,3,1,49),(112,11,0,2,49),(113,11,1,2,49),(114,11,2,2,49),(115,11,3,2,49),(116,12,0,0,49),(117,12,1,0,49),(118,12,2,0,49),(119,12,3,0,49),(120,12,0,1,49),(121,12,1,1,49),(122,12,2,1,49),(123,12,3,1,49),(124,12,0,2,49),(125,12,1,2,49),(126,12,2,2,49),(127,12,3,2,49),(128,12,0,3,49),(129,12,1,3,49),(130,12,2,3,49),(131,12,3,3,49),(132,13,0,0,49),(133,13,1,0,49),(134,13,0,1,49),(135,13,1,1,49),(136,14,0,0,49),(137,14,1,0,49),(138,14,0,1,49),(139,14,1,1,49),(140,15,0,0,49),(141,15,1,0,49),(142,15,2,0,49),(143,15,3,0,49),(144,15,4,0,49),(145,15,0,1,49),(146,15,1,1,49),(147,15,2,1,49),(148,15,3,1,49),(149,15,4,1,49),(150,15,0,2,49),(151,15,1,2,49),(152,15,2,2,49),(153,15,3,2,49),(154,15,4,2,49),(155,15,0,3,49),(156,15,1,3,49),(157,15,2,3,49),(158,15,3,3,49),(159,15,4,3,49),(160,1,0,0,14),(161,1,1,0,14),(162,1,2,0,54),(163,1,3,0,9),(164,1,0,1,14),(165,1,3,1,54),(166,1,4,1,54),(167,1,1,2,8),(168,1,2,2,8),(169,1,3,2,8),(170,3,0,4,68),(171,4,1,0,68),(172,5,1,1,68),(173,6,0,0,68),(174,7,0,0,68),(175,8,1,0,68),(176,9,2,0,68),(177,10,0,0,68),(178,11,0,2,68),(179,12,0,0,68),(180,13,1,0,68),(181,14,1,0,68),(182,15,3,0,68),(183,3,0,0,81),(184,3,4,0,68),(185,3,0,1,77),(186,3,4,1,77),(187,3,0,2,77),(188,3,1,2,77),(189,3,2,2,77),(190,3,3,2,77),(191,3,4,2,77),(192,3,0,3,77),(193,3,4,3,77),(194,3,4,4,81),(195,3,1,0,78),(196,3,1,1,87),(197,3,2,0,78),(198,3,3,0,83),(199,3,1,1,77),(200,3,2,1,79),(201,3,3,1,83),(202,3,1,3,78),(203,3,2,3,77),(204,3,3,3,77),(205,3,1,4,77),(206,3,2,4,78),(207,3,3,4,77),(208,4,0,0,79),(209,4,2,0,81),(210,4,3,0,79),(211,4,0,1,77),(212,4,1,1,77),(213,4,2,1,77),(214,4,3,1,83),(215,4,0,2,78),(216,4,1,2,78),(217,4,2,2,77),(218,4,3,2,78),(219,4,0,3,83),(220,4,1,3,79),(221,4,2,3,77),(222,4,3,3,77),(223,5,0,0,78),(224,5,1,0,81),(225,5,2,0,78),(226,5,0,1,78),(227,5,2,1,79),(228,5,0,2,78),(229,5,1,2,78),(230,5,2,2,78),(231,6,1,0,81),(232,6,0,1,83),(233,6,1,1,79),(234,6,0,2,87),(235,6,1,2,78),(236,4,1,0,76),(237,7,1,0,81),(238,7,0,1,88),(239,7,1,1,88),(240,8,0,0,87),(241,8,1,0,82),(242,8,2,0,81),(243,8,0,1,76),(244,8,1,1,83),(245,8,2,1,83),(246,9,0,0,81),(247,9,1,0,79),(248,9,0,1,77),(249,9,1,1,78),(250,9,2,1,77),(251,9,0,2,88),(252,9,1,2,88),(253,9,2,2,88),(254,10,1,0,81),(255,10,2,0,87),(256,10,3,0,88),(257,10,0,1,83),(258,10,1,1,77),(259,10,2,1,77),(260,10,3,1,78),(261,10,0,2,78),(262,10,1,2,82),(263,10,2,2,78),(264,10,3,2,83),(265,11,0,0,81),(266,11,1,0,78),(267,11,2,0,78),(268,11,3,0,79),(269,11,0,1,78),(270,11,1,1,77),(271,11,2,1,77),(272,11,3,1,86),(273,11,1,2,78),(274,11,2,2,78),(275,11,3,2,79),(276,12,1,0,78),(277,12,2,0,78),(278,12,3,0,81),(279,12,0,1,77),(280,12,1,1,77),(281,12,2,1,77),(282,12,3,1,77),(283,12,0,2,88),(284,12,1,2,78),(285,12,2,2,87),(286,12,3,2,83),(287,12,0,3,80),(288,12,1,3,80),(289,12,2,3,80),(290,12,3,3,80),(291,3,3,0,89),(292,13,0,0,86),(293,13,1,0,76),(294,13,0,1,81),(295,13,1,1,82),(296,14,0,0,81),(297,14,0,1,80),(298,14,1,1,80),(299,15,0,0,80),(300,15,1,0,80),(301,15,2,0,86),(302,15,4,0,81),(303,15,0,1,85),(304,15,1,1,79),(305,15,2,1,76),(306,15,3,1,78),(307,15,4,1,78),(308,15,0,2,88),(309,15,1,2,88),(310,15,2,2,84),(311,15,3,2,86),(312,15,4,2,86),(313,15,0,3,88),(314,15,1,3,88),(315,15,2,3,87),(316,15,3,3,86),(317,15,4,3,86),(318,12,3,1,85),(335,1,2,1,66);

UNLOCK TABLES;

/*Table structure for table `levels` */

DROP TABLE IF EXISTS `levels`;

CREATE TABLE `levels` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the level',
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom this level belongs to',
  `level` int(10) NOT NULL COMMENT 'Leel, ie 0, -1 (dungeon) 2 (tower), etc.',
  `maxx` int(2) NOT NULL COMMENT 'THe widest the map can be',
  `maxy` int(2) NOT NULL COMMENT 'The tallest the map can be',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `kingdom_level_id` (`kingdom_id`,`level`),
  CONSTRAINT `FK_kingdoms_levels` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `levels` */

LOCK TABLES `levels` WRITE;

insert  into `levels`(`id`,`kingdom_id`,`level`,`maxx`,`maxy`) values (1,1,0,5,3),(3,1,-1,5,5),(4,1,-2,4,4),(5,1,-3,3,3),(6,1,-4,2,3),(7,1,-5,2,2),(8,1,-6,3,2),(9,1,-7,3,3),(10,1,-8,4,3),(11,1,-9,4,3),(12,1,-10,4,4),(13,1,-11,2,2),(14,1,-12,2,2),(15,1,-13,5,4);

UNLOCK TABLES;

/*Table structure for table `log_quest_creature_kills` */

DROP TABLE IF EXISTS `log_quest_creature_kills`;

CREATE TABLE `log_quest_creature_kills` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_creature_kill_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  `num_kills` int(11) NOT NULL default '0' COMMENT 'number of kills of this type of creature',
  PRIMARY KEY  (`id`),
  KEY `quest_creature_kill_id` (`quest_creature_kill_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_creature_kill_id` (`log_quest_id`,`quest_creature_kill_id`),
  CONSTRAINT `FK_log_quest_log_quest_creature_kills` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_creature_kills_log_quest_creature_kills` FOREIGN KEY (`quest_creature_kill_id`) REFERENCES `quest_creature_kills` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_creature_kills` */

LOCK TABLES `log_quest_creature_kills` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_explores` */

DROP TABLE IF EXISTS `log_quest_explores`;

CREATE TABLE `log_quest_explores` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_explore_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  PRIMARY KEY  (`id`),
  KEY `quest_explore_id` (`quest_explore_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_explore_id` (`log_quest_id`,`quest_explore_id`),
  CONSTRAINT `FK_log_quest_log_quest_explores` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_explores_log_quest_explores` FOREIGN KEY (`quest_explore_id`) REFERENCES `quest_explores` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_explores` */

LOCK TABLES `log_quest_explores` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_kill_n_npcs` */

DROP TABLE IF EXISTS `log_quest_kill_n_npcs`;

CREATE TABLE `log_quest_kill_n_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_kill_n_npc_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  `num_kills` int(10) NOT NULL default '0' COMMENT 'Number of kills',
  PRIMARY KEY  (`id`),
  KEY `quest_kill_n_npc_id` (`quest_kill_n_npc_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_kill_n_npc_id` (`log_quest_id`,`quest_kill_n_npc_id`),
  CONSTRAINT `FK_log_quest_log_quest_kill_n_npcs` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_kill_n_npcs_log_quest_kill_n_npcs` FOREIGN KEY (`quest_kill_n_npc_id`) REFERENCES `quest_kill_n_npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_kill_n_npcs` */

LOCK TABLES `log_quest_kill_n_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_kill_pcs` */

DROP TABLE IF EXISTS `log_quest_kill_pcs`;

CREATE TABLE `log_quest_kill_pcs` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_kill_pc_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  PRIMARY KEY  (`id`),
  KEY `quest_kill_pc_id` (`quest_kill_pc_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_kill_pc_id` (`log_quest_id`,`quest_kill_pc_id`),
  CONSTRAINT `FK_log_quest_log_quest_kill_pcs` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_kill_pcs_log_quest_kill_pcs` FOREIGN KEY (`quest_kill_pc_id`) REFERENCES `quest_kill_pcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_kill_pcs` */

LOCK TABLES `log_quest_kill_pcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_kill_s_npcs` */

DROP TABLE IF EXISTS `log_quest_kill_s_npcs`;

CREATE TABLE `log_quest_kill_s_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_kill_s_npc_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  PRIMARY KEY  (`id`),
  KEY `quest_kill_s_npc_id` (`quest_kill_s_npc_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_kill_s_npc_id` (`log_quest_id`,`quest_kill_s_npc_id`),
  CONSTRAINT `FK_log_quest_log_quest_kill_s_npcs` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_kill_s_npcs_log_quest_kill_s_npcs` FOREIGN KEY (`quest_kill_s_npc_id`) REFERENCES `quest_kill_s_npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_kill_s_npcs` */

LOCK TABLES `log_quest_kill_s_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quests` */

DROP TABLE IF EXISTS `log_quests`;

CREATE TABLE `log_quests` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character attempting the quest',
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `completed` tinyint(1) NOT NULL default '0' COMMENT 'IF true, player_character has completed quest. Purging of quest related logs is ok at this point.',
  `rewarded` tinyint(1) NOT NULL default '0' COMMENT 'IF true, player_character has collected reward.',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `quest_id` (`quest_id`),
  KEY `player_character_quest_id` (`player_character_id`,`quest_id`),
  KEY `player_character_quest_comp_id` (`player_character_id`,`quest_id`,`completed`),
  CONSTRAINT `FK_player_characters_log_quests` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_quests_log_quests` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `log_quests` */

LOCK TABLES `log_quests` WRITE;

UNLOCK TABLES;

/*Table structure for table `name_surfixes` */

DROP TABLE IF EXISTS `name_surfixes`;

CREATE TABLE `name_surfixes` (
  `id` int(11) NOT NULL auto_increment,
  `name_surfixes` varchar(32) default NULL COMMENT 'A prefix or suffix added to a name to make it a surname. the"-" indicated what the "-" indicates where the rest of the name goes.',
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `name_surfixes` */

LOCK TABLES `name_surfixes` WRITE;

insert  into `name_surfixes`(`id`,`name_surfixes`) values (1,'O\'-'),(2,'-son'),(3,'-sson'),(4,'-sdottor'),(5,'-stein'),(6,'-burg'),(7,'-bel'),(8,'-ley'),(9,'-owit'),(10,'Mc-'),(11,'Mac-'),(12,'De-'),(13,'Don-');

UNLOCK TABLES;

/*Table structure for table `name_titles` */

DROP TABLE IF EXISTS `name_titles`;

CREATE TABLE `name_titles` (
  `id` int(11) NOT NULL auto_increment,
  `title` varchar(32) default NULL COMMENT 'Title, follows the name',
  `stat` varchar(3) default NULL COMMENT 'If this is being used for an item name (or someone''s titiel), then this is the three character abbreviation of a stat trait. If null, then it is not a valid title for for an item. "all" is a stat trait that does not exist, but rather states that this titl',
  `points` int(10) default NULL COMMENT 'Ony used if stat is nto null. This is the minimum points eeded to gain this title.',
  PRIMARY KEY  (`id`),
  KEY `stat_points` (`stat`,`points`),
  KEY `points` (`points`),
  KEY `stat_title` (`stat`,`title`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `name_titles` */

LOCK TABLES `name_titles` WRITE;

insert  into `name_titles`(`id`,`title`,`stat`,`points`) values (1,'weak','all',0),(2,'dull','dex',1),(3,'blunt','dam',1),(4,'fool','int',1),(5,'mundane','mag',1),(6,'soft','dfn',1),(7,'sickly','con',1),(8,'puny','str',1),(9,'peon','',NULL),(10,'good','all',10),(11,'quality','all',25),(12,'excellent','all',100),(13,'phenomenal','all',300),(14,'magnificent','all',750),(15,'august','all',2500),(16,'citizen','',NULL),(17,'pauper','',NULL),(18,'slovenly','',NULL),(19,'cruel','',NULL),(20,'humble','',NULL),(21,'traveller','',NULL),(22,'journeyman','',NULL),(23,'bonded','',NULL),(24,'loyal','',NULL),(25,'younger','',NULL),(26,'older','',NULL),(27,'one-eyed','',NULL),(28,'mad','',NULL),(29,'cold','',NULL),(30,'rotund','',NULL),(31,'fat','',NULL),(32,'cursed','',NULL),(33,'enforcer','',NULL),(34,'steadfast','con',25),(35,'stable','con',7),(36,'edged','dam',7),(37,'sharp','dam',25),(38,'biting','dam',100),(39,'harsh','dam',300),(40,'viscious','dam',750),(41,'mordant','dam',2500),(42,'lithe','dex',7),(43,'spry','dex',25),(44,'agile','dex',100),(45,'quicksilver','dex',300),(46,'fleet','dex',750),(47,'ephemeral','dex',2500),(48,'callous','dfn',7),(49,'rough','dfn',25),(50,'secured','dfn',100),(51,'stone','dfn',300),(52,'reinforced ','dfn',750),(53,'adamant','dfn',2500),(54,'esoteric','mag',7),(55,'smart','int',7),(56,'bright','int',25),(57,'genius','int',100),(58,'wise','int',300),(59,'illuminated','int',750),(60,'adriot','int',2500),(61,'magical','mag',25),(62,'occult','mag',100),(63,'mystic','mag',300),(64,'arcane','mag',750),(65,'marvelous','mag',2500),(66,'stout','str',7),(67,'tough','str',25),(68,'mighty','str',100),(69,'stalwart','str',300),(70,'potent','str',750),(71,'puissant','str',2500),(72,'hardy','con',100),(73,'iron','con',300),(74,'steel','con',750),(75,'immune','con',2500);

UNLOCK TABLES;

/*Table structure for table `names` */

DROP TABLE IF EXISTS `names`;

CREATE TABLE `names` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) default NULL COMMENT 'Name, not in surname form',
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `names` */

LOCK TABLES `names` WRITE;

insert  into `names`(`id`,`name`) values (1,'Bjorn'),(2,'Hans'),(3,'Aelfric'),(4,'Cedric'),(5,'Richard'),(6,'Samuel'),(7,'Michelangelo'),(8,'Donatello'),(9,'Sven'),(10,'Rupert'),(11,'Cecil'),(12,'Pliny'),(13,'Margaret'),(14,'Samantha'),(15,'Frey'),(16,'Wendy'),(17,'Lisa'),(18,'Hannah'),(19,'Rufus'),(20,'Manuel'),(21,'Rico'),(22,'Green'),(23,'Red'),(24,'Eliza'),(25,'Reily'),(26,'Tool'),(27,'Thor'),(28,'Wotan'),(29,'Ezekiel'),(30,'Judge'),(31,'Dorian'),(32,'Smith'),(33,'Jonse'),(34,'Jones'),(35,'Holmes'),(36,'Tyr'),(37,'Sanchez'),(38,'Celleaghan'),(39,'Down');

UNLOCK TABLES;

/*Table structure for table `nonplayer_character_killers` */

DROP TABLE IF EXISTS `nonplayer_character_killers`;

CREATE TABLE `nonplayer_character_killers` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who killed the NPC',
  `npc_id` int(11) default NULL COMMENT 'ID of teh NPC killed. IF null, this is the entry for the peasants that asshole player_character butchered.',
  `when` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT 'When the NPC was killed',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `npc_id` (`npc_id`),
  KEY `player_character_npc_id` (`player_character_id`,`npc_id`),
  CONSTRAINT `FK_npcs_nonplayer_character_killers` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`),
  CONSTRAINT `FK_player_characters_nonplayer_character_killers` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `nonplayer_character_killers` */

LOCK TABLES `nonplayer_character_killers` WRITE;

UNLOCK TABLES;

/*Table structure for table `npc_blacksmith_items` */

DROP TABLE IF EXISTS `npc_blacksmith_items`;

CREATE TABLE `npc_blacksmith_items` (
  `id` int(11) NOT NULL auto_increment,
  `npc_id` int(11) NOT NULL COMMENT 'ID of the NPC that can make this item',
  `item_id` int(11) NOT NULL COMMENT 'ID of the ITEM that can be made',
  `min_sales` int(20) default NULL COMMENT 'The level of min sales attained to be able to make this item',
  PRIMARY KEY  (`id`),
  KEY `npc_id` (`npc_id`),
  KEY `item_id` (`item_id`),
  CONSTRAINT `FK_items_npc_blacksmith_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_npcs_npc_blacksmith_items` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npc_blacksmith_items` */

LOCK TABLES `npc_blacksmith_items` WRITE;

UNLOCK TABLES;

/*Table structure for table `npc_diseases` */

DROP TABLE IF EXISTS `npc_diseases`;

CREATE TABLE `npc_diseases` (
  `id` int(11) NOT NULL auto_increment,
  `character_id` int(11) NOT NULL COMMENT 'The ID of the NPC or guard',
  `disease_id` int(11) NOT NULL COMMENT 'The disease the NPC has. Possible for NPC to have many diseases',
  PRIMARY KEY  (`id`),
  KEY `character_id` (`character_id`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_characters_npc_diseases` FOREIGN KEY (`character_id`) REFERENCES `npcs` (`id`),
  CONSTRAINT `FK_diseases_npc_diseases` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npc_diseases` */

LOCK TABLES `npc_diseases` WRITE;

UNLOCK TABLES;

/*Table structure for table `npc_merchants` */

DROP TABLE IF EXISTS `npc_merchants`;

CREATE TABLE `npc_merchants` (
  `id` int(11) NOT NULL auto_increment,
  `npc_id` int(11) NOT NULL,
  `healing_sales` int(20) default NULL,
  `blacksmith_sales` int(20) default NULL,
  `trainer_sales` int(20) default NULL,
  `consignor` tinyint(1) default '0' COMMENT 'Can buy items from player_characters and resell them/hold a general store',
  `race_body_type` int(3) NOT NULL COMMENT 'Only relevant if npc is a blacksmith, in which case must not be null. Restrict the smith from making equipment that only a certain race could use, such as seamonster armor if its a human smith. This will be dependent on where the smith takes up shop, as w',
  PRIMARY KEY  (`id`),
  KEY `npc_id` (`npc_id`),
  CONSTRAINT `FK_npcs_npc_merchants` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `npc_merchants` */

LOCK TABLES `npc_merchants` WRITE;

insert  into `npc_merchants`(`id`,`npc_id`,`healing_sales`,`blacksmith_sales`,`trainer_sales`,`consignor`,`race_body_type`) values (1,1,NULL,500,NULL,1,1),(2,2,500,NULL,NULL,0,0),(3,3,NULL,NULL,500,0,0),(4,9,NULL,NULL,10,1,1),(5,11,10,NULL,NULL,0,1),(6,13,NULL,NULL,10,0,1),(7,15,10,NULL,10,0,1),(8,17,10,NULL,10,1,1),(9,19,10,NULL,NULL,1,1);

UNLOCK TABLES;

/*Table structure for table `npc_stocks` */

DROP TABLE IF EXISTS `npc_stocks`;

CREATE TABLE `npc_stocks` (
  `id` int(11) NOT NULL auto_increment,
  `npc_id` int(11) NOT NULL COMMENT 'ID of the NPC who has this item for sale',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item',
  `quantity` int(10) NOT NULL default '0' COMMENT 'The number of second hand items of this kind',
  PRIMARY KEY  (`id`),
  KEY `item_id` (`item_id`),
  KEY `npc_id` (`npc_id`),
  KEY `npc_id_item_id` (`npc_id`,`item_id`),
  CONSTRAINT `FK_items_npc_stocks` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_npcs_npc_stocks` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npc_stocks` */

LOCK TABLES `npc_stocks` WRITE;

UNLOCK TABLES;

/*Table structure for table `npcs` */

DROP TABLE IF EXISTS `npcs`;

CREATE TABLE `npcs` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) NOT NULL COMMENT 'Name of the NPC',
  `kingdom_id` int(11) default NULL COMMENT 'Kingdom where the NPC does business. If null, NPC was rejected, and a new kingdom needs to be assigned.',
  `wellness` int(3) NOT NULL default '1' COMMENT 'The wellness of the NPC, ie alive, dead, sick',
  `npc_division` int(3) NOT NULL COMMENT 'The type of npc, ie merchant or guard, (or possibly retainer that travels out of kingdom with player_character?)',
  `base_HP` int(10) NOT NULL default '10' COMMENT 'Base HP of the NPC. HP is restored to this the next day. Ie, after being beaten up a bit or losing health due to illness (as long as the illness is cured), the NPC''s HP will be restored to this. If NPC has a disease, then HP is not restored to this.',
  `HP` int(10) NOT NULL default '10' COMMENT 'Current HP of the NPC. This drops to zero, NPC dies for good. (unless they are resurrected within a few days)',
  `str` int(10) NOT NULL default '10' COMMENT 'Strength of the NPC',
  `dex` int(10) NOT NULL default '10' COMMENT 'Dexterity of the NPC',
  `con` int(10) NOT NULL default '10' COMMENT 'Constitution of the NPC',
  `int` int(10) NOT NULL default '10' COMMENT 'Intellignce of the NPC',
  `mag` int(10) NOT NULL default '10' COMMENT 'Magic of the NPC',
  `dam` int(10) NOT NULL default '10' COMMENT 'Damage attribute for the NPC',
  `dfn` int(10) NOT NULL default '10' COMMENT 'Defense Attribute for the NPC',
  `gold` int(20) NOT NULL default '10' COMMENT 'Amount of Gold NPC carries. For merchants, it will be the day''s sales. For Guards, it will be up to their salary.',
  `experience` int(10) NOT NULL default '10' COMMENT 'How much experience is gained by killing this NPC. Usually will be fixed',
  `is_hired` tinyint(1) NOT NULL default '0' COMMENT 'If the NPC has been hired. If the king does not hire this NPC, the kingdom affiliation goes away, and the NPC is randomly sent to a different kingdom that might have space for them. It could be that many NPC''s will look around for quite a while before the',
  `image_id` int(11) NOT NULL default '1' COMMENT 'The image of the NPC',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `name` (`name`),
  KEY `is_hired` (`is_hired`),
  KEY `name_is_hired` (`name`,`is_hired`),
  KEY `kingdom_id_npc_division` (`kingdom_id`,`npc_division`),
  CONSTRAINT `FK_kingdoms_npcs` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npcs` */

LOCK TABLES `npcs` WRITE;

insert  into `npcs`(`id`,`name`,`kingdom_id`,`wellness`,`npc_division`,`base_HP`,`HP`,`str`,`dex`,`con`,`int`,`mag`,`dam`,`dfn`,`gold`,`experience`,`is_hired`,`image_id`) values (1,'Bjorn the Blacksmith',NULL,1,1,100,100,10,10,10,10,10,10,10,10,10,0,1),(2,'Sven the Healer',NULL,1,1,100,100,10,10,10,10,10,10,10,10,10,0,1),(3,'Allan the Trainer',NULL,1,1,100,100,10,10,10,10,10,10,10,10,10,0,1),(4,'Guard Eliza Ezekielsdottor',1,1,2,160,160,35,33,30,26,26,42,27,272,242,1,216),(5,'Guard Sanchez Jonesowit',1,1,2,88,88,22,22,32,20,36,27,26,174,288,1,216),(6,'Guard Sven',1,1,2,131,131,41,43,23,26,22,19,44,70,206,1,216),(7,'Guard Smith Reilysdottor',1,1,2,167,167,30,32,42,23,29,43,25,266,251,1,216),(8,'Guard Red Wendy O\'Donatello',1,1,2,169,169,44,18,39,41,27,25,26,356,238,1,216),(9,'Rufus Sven Svenburg',NULL,1,1,64,64,14,16,26,39,31,28,40,453,102,0,240),(10,'Guard Hans Freysdottor',1,1,2,77,77,29,36,38,35,39,28,35,323,216,1,241),(11,'Margaret Jonse',1,1,1,129,129,13,18,30,41,48,44,44,291,240,0,242),(12,'Guard Sanchez Sanchez',1,1,2,109,109,41,34,33,36,36,43,20,365,178,1,241),(13,'Dorian',1,1,1,181,181,25,35,35,33,30,20,28,492,182,0,243),(14,'Guard Rupert Michelangelo Plinyl',1,1,2,74,74,36,20,17,30,32,14,43,163,137,1,241),(15,'Rupert Eliza',1,1,1,90,90,30,36,40,12,26,40,22,497,147,0,244),(16,'Guard Samanthaowit',1,1,2,93,93,32,37,26,37,36,21,22,317,155,1,241),(17,'Jonse O\'Donatello the Sharp',NULL,1,1,123,123,10,30,23,14,20,36,26,413,127,0,245),(18,'Guard Aelfric Freystein',1,1,2,171,171,24,38,29,31,34,33,25,72,111,1,241),(19,'Rufus Elizaowit',1,1,1,119,119,22,18,26,39,29,23,38,44,100,0,246),(20,'Guard Richard',1,1,2,173,173,27,15,31,17,37,26,34,31,100,1,241);

UNLOCK TABLES;

/*Table structure for table `pandemics` */

DROP TABLE IF EXISTS `pandemics`;

CREATE TABLE `pandemics` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'Kingdom with the disease',
  `disease_id` int(11) NOT NULL COMMENT 'ID of the disease the kingdom has',
  `day` int(11) NOT NULL COMMENT 'Number of days the disease has been plaguing the kingdom',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `disease_id` (`disease_id`),
  KEY `day` (`day`),
  CONSTRAINT `FK_diseases_pandemics` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`),
  CONSTRAINT `FK_kingdoms_pandemics` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `pandemics` */

LOCK TABLES `pandemics` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_character_equip_locs` */

DROP TABLE IF EXISTS `player_character_equip_locs`;

CREATE TABLE `player_character_equip_locs` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'The ID of the player_character who owns this equipment location',
  `equip_loc` int(3) NOT NULL COMMENT 'The equiment location number',
  `item_id` int(11) default NULL COMMENT 'The item equipped at this location. If null, there is nothing equiped at this location',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `player_character_equip_loc` (`player_character_id`,`equip_loc`),
  KEY `FK_player_character_equip_locs_items` (`item_id`),
  CONSTRAINT `FK_items_player_character_equip_locs` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_player_characters_player_character_equip_locs` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_character_equip_locs` */

LOCK TABLES `player_character_equip_locs` WRITE;

insert  into `player_character_equip_locs`(`id`,`player_character_id`,`equip_loc`,`item_id`) values (1,2,90,NULL),(2,2,9,NULL),(3,2,9,NULL),(4,2,4,NULL),(5,2,30,NULL),(6,2,31,NULL),(7,2,32,NULL),(8,2,90,NULL);

UNLOCK TABLES;

/*Table structure for table `player_character_items` */

DROP TABLE IF EXISTS `player_character_items`;

CREATE TABLE `player_character_items` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of player_character who owns the items',
  `item_id` int(11) NOT NULL COMMENT 'id of the item owned',
  `quantity` int(5) NOT NULL default '0'  COMMENT 'number of items owned by player_character',
  PRIMARY KEY  (`id`),
  KEY `FK_player_character_items_items` (`item_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `player_character_id_item_id` (`player_character_id`,`item_id`),
  CONSTRAINT `FK_items_player_character_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_player_characters_player_character_items` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_character_items` */

LOCK TABLES `player_character_items` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_character_killers` */

DROP TABLE IF EXISTS `player_character_killers`;

CREATE TABLE `player_character_killers` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the PKer',
  `killed_id` int(11) NOT NULL COMMENT 'ID of the player_character killed',
  `when` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT 'When the player was killed',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `killed_id` (`killed_id`),
  KEY `player_character_killed_id` (`player_character_id`,`killed_id`),
  CONSTRAINT `FK_killeds_player_character_killers` FOREIGN KEY (`killed_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_player_characters_player_character_killers` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_character_killers` */

LOCK TABLES `player_character_killers` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_characters` */

DROP TABLE IF EXISTS `player_characters`;

CREATE TABLE `player_characters` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) NOT NULL COMMENT 'Player character''s name',
  `player_id` int(11) NOT NULL COMMENT 'Player''s ID number',
  `c_class_id` int(11) NOT NULL COMMENT 'Player''s c_class ID',
  `race_id` int(11) NOT NULL COMMENT 'Player''s Race ID',
  `level` int(5) NOT NULL default '0' COMMENT 'Level teh player is',
  `next_level_at` int(10) NOT NULL default '0' COMMENT 'Amount of experience needed for the next level',
  `experience` int(10) NOT NULL default '0' COMMENT 'Experience points the player has',
  `max_HP` int(10) NOT NULL default '0' COMMENT 'Maximum HP the player can have (ie, HP player woul dhave if uninjured)',
  `max_MP` int(10) NOT NULL default '0' COMMENT 'Maximum MP the player can have',
  `HP` int(10) NOT NULL default '0' COMMENT 'Player''s current HP',
  `MP` int(10) NOT NULL default '0' COMMENT 'Player''s current MP',
  `kingdom_id` int(11) default NULL COMMENT 'player''s home kingdom ID (0 is no home kingdom)',
  `house_x` int(2) NOT NULL default '0' COMMENT 'X coordinate of the players house in the home kingdom',
  `house_y` int(2) NOT NULL default '0' COMMENT 'Y coordinate of the players house in their home kingdom',
  `turns` int(3) NOT NULL default '0' COMMENT 'number of actions the player currently can take',
  `base_str` int(10) NOT NULL default '0' COMMENT 'base strength',
  `base_dex` int(10) NOT NULL default '0' COMMENT 'base dexterity',
  `base_mag` int(10) NOT NULL default '0' COMMENT 'base magic',
  `base_int` int(10) NOT NULL default '0' COMMENT 'base intelligence',
  `base_con` int(10) NOT NULL default '0' COMMENT 'base constitution',
  `base_dfn` int(10) NOT NULL default '0' COMMENT 'base defense',
  `base_dam` int(10) NOT NULL default '0' COMMENT 'base damage',
  `freepts` int(10) NOT NULL default '0' COMMENT 'The number of freepoints not distributed. Player gains 10% interest on freepoints not spent (rounded to the nearest 1)',
  `str` int(10) NOT NULL default '0' COMMENT 'current strength',
  `dex` int(10) NOT NULL default '0' COMMENT 'current dexterity',
  `mag` int(10) NOT NULL default '0' COMMENT 'current magic',
  `int` int(10) NOT NULL default '0' COMMENT 'current intelligence',
  `con` int(10) NOT NULL default '0' COMMENT 'current constitution',
  `dfn` int(10) NOT NULL default '0' COMMENT 'current defense',
  `dam` int(10) NOT NULL default '0' COMMENT 'current damage',
  `trn_str` int(10) default '0' COMMENT 'strength modifier from training',
  `trn_dex` int(10) default '0' COMMENT 'dex ',
  `trn_mag` int(10) default '0' COMMENT 'magic ',
  `trn_int` int(10) default '0' COMMENT 'intelligence ',
  `trn_con` int(10) default '0' COMMENT 'constitution ',
  `trn_dfn` int(10) default '0' COMMENT 'defense ',
  `trn_dam` int(10) default '0' COMMENT 'damage ',
  `gold` int(20) default '0' COMMENT 'The amount of gold the player has',
  `image_id` int(11) default NULL COMMENT 'player''s personal avatar/image to represent them as an ascii image',
  `wellness` int(3) NOT NULL default '1' COMMENT 'The welness of the player, ie alive, dead, diseased, etc.',
  `char_stat` int(3) NOT NULL default '1' COMMENT 'Status of the character, ie retired, final death, active',
  `in_kingdom` int(11) default NULL COMMENT 'ID of the kingdom the character is at (null if character is in the world)',
  `bigx` int(2) default NULL COMMENT 'big x location fo the player in the world',
  `bigy` int(2) default NULL COMMENT 'big y location of the player in the world',
  `kingdom_level` int(11) default NULL COMMENT 'ID of the level the player is at if in a kingdom (null if char is not in a kingdom)',
  `in_world` int(11) default NULL COMMENT 'The id of the world where the character is (null i guess is limbo, where ever that is).',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `c_class_id` (`c_class_id`),
  KEY `race_id` (`race_id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `image_id` (`image_id`),
  KEY `name` (`name`),
  KEY `in_kingdom` (`in_kingdom`),
  KEY `kingdom_level` (`kingdom_level`),
  KEY `in_world` (`in_world`),
  CONSTRAINT `FK_c_classes_player_characters` FOREIGN KEY (`c_class_id`) REFERENCES `c_classes` (`id`),
  CONSTRAINT `FK_images_player_characters` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`),
  CONSTRAINT `FK_in_kingdoms_player_characters` FOREIGN KEY (`in_kingdom`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_in_levels_player_characters` FOREIGN KEY (`kingdom_level`) REFERENCES `levels` (`id`),
  CONSTRAINT `FK_kingdoms_player_characters` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_player_characters` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`),
  CONSTRAINT `FK_races_player_characters` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`),
  CONSTRAINT `FK_worlds_player_characters` FOREIGN KEY (`in_world`) REFERENCES `worlds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_characters` */

LOCK TABLES `player_characters` WRITE;

insert  into `player_characters`(`id`,`name`,`player_id`,`c_class_id`,`race_id`,`level`,`next_level_at`,`experience`,`max_HP`,`max_MP`,`HP`,`MP`,`kingdom_id`,`house_x`,`house_y`,`turns`,`base_str`,`base_dex`,`base_mag`,`base_int`,`base_con`,`base_dfn`,`base_dam`,`freepts`,`str`,`dex`,`mag`,`int`,`con`,`dfn`,`dam`,`trn_str`,`trn_dex`,`trn_mag`,`trn_int`,`trn_con`,`trn_dfn`,`trn_dam`,`gold`,`image_id`,`wellness`,`char_stat`,`in_kingdom`,`bigx`,`bigy`,`kingdom_level`,`in_world`) values (-1,'System',-1,1,1,500,0,0,9999,9999,999,999,-1,0,0,400,999,999,999,999,999,999,999,0,999,999,999,999,999,999,999,0,0,0,0,0,0,0,0,1,3,1,NULL,0,0,NULL,1),(1,'Mr.Oblivious',1,3,1,100,10365,44115851,999999,999999,999999,999999,1,1,1,400,999999,999999,999999,999999,999999,999999,999999,0,999999,999999,999999,999999,999999,999999,999999,7,11,11,11,15,11,8,60403,1,1,1,1,0,0,1,1),(2,'NewLevelMethod',2,25,20,1,1818,0,1028,1,642,1,0,0,0,400,38,22,5,11,27,27,27,3,38,22,5,11,27,27,27,0,0,0,0,0,0,0,125,239,2,1,1,0,0,1,1);

UNLOCK TABLES;

/*Table structure for table `players` */

DROP TABLE IF EXISTS `players`;

CREATE TABLE `players` (
  `id` int(11) NOT NULL auto_increment COMMENT 'Player ID number',
  `handle` varchar(32) NOT NULL COMMENT 'Player''s user name',
  `passwd` varchar(256) NOT NULL COMMENT 'Player''s password',
  `city` varchar(32) default '' COMMENT 'Player''s RL hometown',
  `state` varchar(2) default '' COMMENT 'Player''s RL homestate',
  `country` varchar(32) default '' COMMENT 'Player''s RL home country',
  `email` varchar(64) default '' COMMENT 'Player''s email',
  `AIM` varchar(32) default '' COMMENT 'Player''s AIM screen name',
  `yahoo_sn` varchar(32) default '' COMMENT 'layer''s yahoo messanger screenname',
  `bio` text COMMENT 'Player''s persnal biography',
  `account_status` int(3) NOT NULL default '1' COMMENT 'Account status. If the player is active, suspended, banned, blocked, mod privilidges, etc.',
  `admin` tinyint(1) default '0',
  `table_editor_access` tinyint(1) default '0',
  `mod_level` int(2) default '0' COMMENT 'Level of mod status. Totally arbitrary, and only used with boards. Level 0 is no mod status. Mods can only ban other players from forums with lesser status.',
  `joined` date default NULL COMMENT 'when the player joined',
  PRIMARY KEY  (`id`),
  KEY `handle` (`handle`),
  KEY `country` (`country`),
  KEY `state` (`state`),
  KEY `city` (`city`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `players` */

LOCK TABLES `players` WRITE;

insert  into `players`(`id`,`handle`,`passwd`,`city`,`state`,`country`,`email`,`AIM`,`yahoo_sn`,`bio`,`account_status`,`admin`,`table_editor_access`,`mod_level`,`joined`) values (-1,'System','36cdf5d5b5ab03f1f713e804b07874509c0b2d03',NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,1,1,9,'2008-07-02'),(1,'Fhugue','36cdf5d5b5ab03f1f713e804b07874509c0b2d03','Madtown','WI','','','','','Putting together this game thing.',1,1,1,9,'2008-07-02'),(2,'noob','15b49cb89912af667d517bba22980c926e53591a','','','','','','','',1,0,0,0,'2008-11-09');

UNLOCK TABLES;

/*Table structure for table `pref_lists` */

DROP TABLE IF EXISTS `pref_lists`;

CREATE TABLE `pref_lists` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'The kingdom this item is a preference for',
  `pref_list_type` int(3) NOT NULL COMMENT 'They type of item (ie, feature, creature, event, etc)',
  `thing_id` int(11) NOT NULL COMMENT 'ID of the thigng this row represents',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id_pref_list_type` (`kingdom_id`,`pref_list_type`),
  KEY `thing_id` (`thing_id`),
  KEY `kingdom_id` (`kingdom_id`),
  CONSTRAINT `FK_kingdms_pref_lists` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `pref_lists` */

LOCK TABLES `pref_lists` WRITE;

insert  into `pref_lists`(`id`,`kingdom_id`,`pref_list_type`,`thing_id`) values (114,-1,3,49),(115,-1,2,22),(116,-1,2,26),(117,-1,2,36),(118,-1,3,60),(119,-1,3,58),(120,-1,3,16),(121,-1,3,18),(122,-1,3,22),(123,-1,3,17),(124,-1,3,15),(125,-1,3,55),(126,-1,3,59),(127,-1,3,19),(129,-1,3,21),(130,-1,3,57),(131,-1,3,20),(132,-1,3,56),(133,1,1,43),(134,1,1,22),(135,1,1,37),(136,1,1,41),(137,1,1,40),(138,1,1,26),(139,1,1,36),(140,1,1,17),(141,1,1,29),(142,1,1,10),(143,1,1,32),(144,1,1,25),(145,1,1,19),(146,1,1,24),(147,1,1,15),(148,1,1,38),(149,1,1,23),(150,1,1,30),(151,1,1,16),(152,1,1,21),(153,1,1,3),(154,1,1,1),(155,1,1,18),(156,1,1,42),(157,1,1,27),(158,1,1,35),(159,1,1,14),(160,1,1,20),(161,1,1,28),(162,1,1,13),(163,1,1,31),(164,1,1,39),(165,1,1,33),(166,1,1,34),(171,1,2,4),(172,1,2,6),(173,1,2,50),(174,1,2,48),(175,1,2,54),(176,1,2,29),(177,1,2,38),(178,1,2,40),(179,1,2,42),(180,1,2,13),(181,1,2,37),(182,1,2,11),(183,1,2,21),(184,1,2,25),(185,1,2,5),(186,1,2,32),(187,1,2,43),(188,1,2,19),(189,1,2,20),(190,1,2,34),(191,1,2,39),(192,1,2,65),(193,1,2,66),(194,1,2,67),(195,1,3,68),(196,1,2,12),(198,1,2,14),(199,1,2,10),(200,1,2,30),(201,1,2,69),(202,1,2,70),(203,1,2,71),(204,1,2,72),(205,1,2,73),(206,1,2,74),(207,1,2,75),(208,1,2,8),(209,1,2,7),(217,1,2,76),(218,1,3,76),(219,1,3,84),(220,1,3,82),(221,1,3,86),(222,1,3,79),(223,1,3,83),(224,1,2,77),(225,1,3,81),(226,1,3,78),(227,1,3,77),(228,1,2,16),(229,1,2,33),(230,1,2,55),(231,1,2,57),(232,1,2,78),(233,1,3,85),(234,1,3,80),(235,1,3,87),(236,1,3,88),(237,1,3,89);

UNLOCK TABLES;

/*Table structure for table `quest_creature_kills` */

DROP TABLE IF EXISTS `quest_creature_kills`;

CREATE TABLE `quest_creature_kills` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the creature to kill',
  `num_kills` int(11) NOT NULL default '1' COMMENT 'number of this creature that must be killed to complete the quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `creature_id` (`creature_id`),
  KEY `quest_creatures_id` (`quest_id`,`creature_id`),
  CONSTRAINT `FK_creatures_quest_creature_kills` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_quests_quest_creature_kills` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_creature_kills` */

LOCK TABLES `quest_creature_kills` WRITE;

insert  into `quest_creature_kills`(`id`,`quest_id`,`creature_id`,`num_kills`) values (1,3,19,10),(2,3,18,10),(3,5,34,20),(4,7,33,1),(5,8,39,1),(6,11,17,10),(7,13,13,15),(8,14,29,6),(9,15,1,30),(10,16,15,15);

UNLOCK TABLES;

/*Table structure for table `quest_explores` */

DROP TABLE IF EXISTS `quest_explores`;

CREATE TABLE `quest_explores` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `event_id` int(11) NOT NULL COMMENT 'ID of the [move] event the player_character must encounter to solve this quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `event_id` (`event_id`),
  CONSTRAINT `FK_events_quest_explores` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_quests_quest_explores` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_explores` */

LOCK TABLES `quest_explores` WRITE;

insert  into `quest_explores`(`id`,`quest_id`,`event_id`) values (1,1,2),(2,2,4),(3,4,66),(4,9,78);

UNLOCK TABLES;

/*Table structure for table `quest_items` */

DROP TABLE IF EXISTS `quest_items`;

CREATE TABLE `quest_items` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item the player_character needs to have to complete this part of the quest.',
  `num` int(2) NOT NULL default '1' COMMENT 'Number of this item the player_character needs.',
  `surrender_item?` tinyint(1) NOT NULL default '0' COMMENT 'If true, then the player_character must surrender the item(s) when they collect the reward. The item(s) will be placed in the king''s store room.',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `item_id` (`item_id`),
  KEY `quest_item_id` (`quest_id`,`item_id`),
  CONSTRAINT `FK_items_quest_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_quests_quest_items` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_items` */

LOCK TABLES `quest_items` WRITE;

insert  into `quest_items`(`id`,`quest_id`,`item_id`,`num`,`surrender_item?`) values (1,6,5,6,1),(2,10,6,1,1),(3,12,7,1,1);

UNLOCK TABLES;

/*Table structure for table `quest_kill_n_npcs` */

DROP TABLE IF EXISTS `quest_kill_n_npcs`;

CREATE TABLE `quest_kill_n_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `npc_division` int(3) NOT NULL COMMENT 'Type of NPCs to kill',
  `kingdom_id` int(11) default NULL COMMENT 'ID of the kingdom in which to kill these npcs. If null, any kingdom will do.',
  `num_kills` int(10) NOT NULL COMMENT 'Minimum number of this type to kill to complete the quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `kingdom_id` (`kingdom_id`),
  CONSTRAINT `FK_kingdoms_quest_kill_n_npcs` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_quests_quest_kill_n_npcs` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_kill_n_npcs` */

LOCK TABLES `quest_kill_n_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `quest_kill_pcs` */

DROP TABLE IF EXISTS `quest_kill_pcs`;

CREATE TABLE `quest_kill_pcs` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character to be killed.',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `player_character_id` (`player_character_id`),
  CONSTRAINT `FK_player_characters_quest_kill_pcs` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_quests_quest_kill_pcs` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_kill_pcs` */

LOCK TABLES `quest_kill_pcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `quest_kill_s_npcs` */

DROP TABLE IF EXISTS `quest_kill_s_npcs`;

CREATE TABLE `quest_kill_s_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `npc_id` int(11) NOT NULL COMMENT 'ID of the targeted NPC (NA for peasants, as all of them are nameless)',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `npc_id` (`npc_id`),
  CONSTRAINT `FK_npcs_quest_kill_s_npcs` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`),
  CONSTRAINT `FK_quests_quest_kill_s_npcs` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_kill_s_npcs` */

LOCK TABLES `quest_kill_s_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `quests` */

DROP TABLE IF EXISTS `quests`;

CREATE TABLE `quests` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the quest',
  `name` varchar(32) NOT NULL COMMENT 'name of the quest',
  `description` varchar(256) default NULL COMMENT 'description of the quest',
  `kingdom_id` int(11) NOT NULL COMMENT 'What kingdom this quest is for',
  `player_id` int(11) NOT NULL COMMENT 'Player who created the test',
  `max_level` int(5) default '500' COMMENT 'The maximum level a player can have to complete the quest. player_characters must be under this level to sign up for the quest. player_character must remain within this level plus one at time of completion. If the level is null, there is no level restrict',
  `max_completeable` int(10) default NULL COMMENT 'The maximum number of quests that may be completed by player_characters. If null, there is no limitation.',
  `quest_status` int(3) NOT NULL COMMENT 'The status of the quest, ie competable, noncompleteable, retired, etc.',
  `gold` int(20) default NULL COMMENT 'The award money given to the player_character from teh kingdom coffers for completing this quest',
  `item_id` int(11) default NULL COMMENT 'This item given to the player_character for completing this quest. This item comes from the storerooms. If there no of the items, the player_character can take the cash value, or try again later to claim the prize.',
  `quest_id` int(11) default NULL COMMENT 'The quest which is prerequisite for being able to attempt and complete this quest.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `player_id` (`player_id`),
  KEY `id_status` (`id`,`quest_status`),
  KEY `item_id` (`item_id`),
  KEY `kingdom_id_quest_status` (`kingdom_id`,`quest_status`),
  KEY `name` (`kingdom_id`,`name`),
  KEY `kingdom_id_quest_status_name` (`kingdom_id`,`quest_status`,`name`),
  KEY `quest_id` (`quest_id`),
  CONSTRAINT `FK_items_quests` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_kingdoms_quests` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_quests` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`),
  CONSTRAINT `FK_quests` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC COMMENT='InnoDB free: 105472 kB';

/*Data for the table `quests` */

LOCK TABLES `quests` WRITE;

insert  into `quests`(`id`,`name`,`description`,`kingdom_id`,`player_id`,`max_level`,`max_completeable`,`quest_status`,`gold`,`item_id`,`quest_id`) values (1,'Journey to the Planet Rock','',1,1,500,NULL,1,350,NULL,12),(2,'Visit roots of oak','',1,1,500,NULL,1,50,NULL,NULL),(3,'Vermin Extermination','Keep the vermin population down',1,1,500,NULL,1,200,NULL,2),(4,'Clear the stairway blockage','Something is blocking the stairs of the dungeon.',1,1,500,NULL,1,0,9,3),(5,'Zombie Population Control','Zombies are getting out of hand',1,1,500,NULL,1,300,NULL,4),(6,'Collect 6 Rusty Daggers','As part of the Make the Dungeons Safe For Children Campaign',1,1,500,NULL,1,NULL,10,5),(7,'Kill the Wherewolf','',1,1,500,NULL,1,400,NULL,6),(8,'Kill the Vampyre','',1,1,500,NULL,1,500,NULL,7),(9,'Find the Bedrock','Its in the dungeon',1,1,500,NULL,1,200,NULL,8),(10,'Fetch the Lead Axe','Also in the dungeon',1,1,500,NULL,1,NULL,11,9),(11,'Chop down the rabid trees','Clear out some of the bad wood',1,1,500,NULL,1,300,NULL,14),(12,'Retrieve the Mountaintop','',1,1,500,NULL,1,200,NULL,14),(13,'Squirrel Hunt','Take out some squirrells, before tehy take us out.',1,1,500,NULL,1,100,NULL,NULL),(14,'Stone Cutter','Cut them stones',1,1,500,NULL,1,200,NULL,13),(15,'Monkey Population Control','They may look cute, but they bite',1,1,500,NULL,1,300,NULL,14),(16,'Cactus Milk','Defeat some cacti',1,1,500,NULL,1,350,NULL,15);

UNLOCK TABLES;

/*Table structure for table `race_equip_locs` */

DROP TABLE IF EXISTS `race_equip_locs`;

CREATE TABLE `race_equip_locs` (
  `id` int(11) NOT NULL auto_increment,
  `race_id` int(11) NOT NULL COMMENT 'Race ID',
  `equip_loc` int(3) NOT NULL COMMENT 'the equipment location number.',
  PRIMARY KEY  (`id`),
  KEY `race_id` (`race_id`),
  KEY `equip_loc` (`equip_loc`),
  CONSTRAINT `FK_races_race_equip_locs` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `race_equip_locs` */

LOCK TABLES `race_equip_locs` WRITE;

insert  into `race_equip_locs`(`id`,`race_id`,`equip_loc`) values (1,1,1),(2,1,2),(3,1,3),(4,2,4),(170,16,90),(171,16,90),(172,16,4),(173,16,20),(174,16,3),(175,16,21),(176,16,21),(177,16,7),(178,16,20),(179,16,8),(193,20,90),(194,20,9),(195,20,9),(196,20,4),(197,20,30),(198,20,31),(199,20,32),(200,20,90),(201,21,30),(202,21,20),(203,21,20),(204,21,20),(205,21,20),(206,21,32),(207,21,4),(208,21,20),(209,21,20),(210,21,20),(211,21,20);

UNLOCK TABLES;

/*Table structure for table `race_levels` */

DROP TABLE IF EXISTS `race_levels`;

CREATE TABLE `race_levels` (
  `id` int(11) NOT NULL auto_increment,
  `race_id` int(11) NOT NULL COMMENT 'Race ID',
  `level` int(5) NOT NULL,
  `min_xp` int(10) NOT NULL,
  `dam` float(10,1) NOT NULL default '0.0' COMMENT 'damage bonus',
  `dfn` float(10,1) NOT NULL default '0.0' COMMENT 'defense bonus',
  `str` float(10,1) NOT NULL default '0.0' COMMENT 'strength bonus',
  `dex` float(10,1) NOT NULL default '0.0' COMMENT 'dexterity bonus',
  `mag` float(10,1) NOT NULL default '0.0' COMMENT 'magic bonus',
  `int` float(10,1) NOT NULL default '0.0' COMMENT 'intelligence bonus',
  `con` float(10,1) NOT NULL default '0.0' COMMENT 'constitution bonus',
  `freepts` float(2,1) NOT NULL default '0.0' COMMENT 'Bonus stat points player_character may redistribute freely.',
  PRIMARY KEY  (`id`),
  KEY `race_id` (`race_id`),
  KEY `race_level_index` (`race_id`,`level`),
  KEY `min_xp` (`race_id`,`min_xp`),
  CONSTRAINT `FK_races_race_levels` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `race_levels` */

LOCK TABLES `race_levels` WRITE;

insert  into `race_levels`(`id`,`race_id`,`level`,`min_xp`,`dam`,`dfn`,`str`,`dex`,`mag`,`int`,`con`,`freepts`) values (2747,1,0,0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0),(2748,1,1,320,5.5,5.5,5.5,5.5,5.5,5.5,5.5,5.0),(2749,1,2,640,6.0,6.0,6.0,6.0,6.0,6.0,6.0,5.0),(2750,1,3,1044,6.5,6.5,6.5,6.5,6.5,6.5,6.5,5.0),(2751,1,4,1448,7.0,7.0,7.0,7.0,7.0,7.0,7.0,5.0),(2752,1,5,1936,7.5,7.5,7.5,7.5,7.5,7.5,7.5,5.0),(2753,1,6,2424,8.0,8.0,8.0,8.0,8.0,8.0,8.0,5.0),(2754,1,7,2996,8.5,8.5,8.5,8.5,8.5,8.5,8.5,5.0),(2755,1,8,3568,9.0,9.0,9.0,9.0,9.0,9.0,9.0,5.0),(2756,1,9,4224,9.5,9.5,9.5,9.5,9.5,9.5,9.5,5.0),(2757,1,10,4880,10.0,10.0,10.0,10.0,10.0,10.0,10.0,9.9),(2758,1,11,5680,10.5,10.5,10.5,10.5,10.5,10.5,10.5,9.9),(2759,1,12,6480,11.0,11.0,11.0,11.0,11.0,11.0,11.0,9.9),(2760,1,13,7364,11.5,11.5,11.5,11.5,11.5,11.5,11.5,9.9),(2761,1,14,8248,12.0,12.0,12.0,12.0,12.0,12.0,12.0,9.9),(2762,1,15,9216,12.5,12.5,12.5,12.5,12.5,12.5,12.5,9.9),(2763,1,16,10184,13.0,13.0,13.0,13.0,13.0,13.0,13.0,9.9),(2764,1,17,11236,13.5,13.5,13.5,13.5,13.5,13.5,13.5,9.9),(2765,1,18,12288,14.0,14.0,14.0,14.0,14.0,14.0,14.0,9.9),(2766,1,19,13424,14.5,14.5,14.5,14.5,14.5,14.5,14.5,9.9),(2767,1,20,14560,16.0,16.0,16.0,16.0,16.0,16.0,16.0,9.9),(2768,1,21,15864,17.5,17.5,17.5,17.5,17.5,17.5,17.5,9.9),(2769,1,22,17252,19.0,19.0,19.0,19.0,19.0,19.0,19.0,9.9),(2770,1,23,18808,20.5,20.5,20.5,20.5,20.5,20.5,20.5,9.9),(2771,1,24,20448,22.0,22.0,22.0,22.0,22.0,22.0,22.0,9.9),(2772,1,25,22256,23.5,23.5,23.5,23.5,23.5,23.5,23.5,9.9),(2773,1,26,24148,25.0,25.0,25.0,25.0,25.0,25.0,25.0,9.9),(2774,1,27,26208,26.5,26.5,26.5,26.5,26.5,26.5,26.5,9.9),(2775,1,28,28352,28.0,28.0,28.0,28.0,28.0,28.0,28.0,9.9),(2776,1,29,30664,29.5,29.5,29.5,29.5,29.5,29.5,29.5,9.9),(2777,1,30,33060,31.0,31.0,31.0,31.0,31.0,31.0,31.0,9.9),(2778,1,31,35624,32.5,32.5,32.5,32.5,32.5,32.5,32.5,9.9),(2779,1,32,38272,34.0,34.0,34.0,34.0,34.0,34.0,34.0,9.9),(2780,1,33,41060,35.5,35.5,35.5,35.5,35.5,35.5,35.5,9.9),(2781,1,34,43995,37.0,37.0,37.0,37.0,37.0,37.0,37.0,9.9),(2782,1,35,47602,38.5,38.5,38.5,38.5,38.5,38.5,38.5,9.9),(2783,1,36,51734,40.0,40.0,40.0,40.0,40.0,40.0,40.0,9.9),(2784,1,37,57294,41.5,41.5,41.5,41.5,41.5,41.5,41.5,9.9),(2785,1,38,63757,43.0,43.0,43.0,43.0,43.0,43.0,43.0,9.9),(2786,1,39,72404,44.5,44.5,44.5,44.5,44.5,44.5,44.5,9.9),(2787,1,40,82332,47.0,47.0,47.0,47.0,47.0,47.0,47.0,9.9),(2788,1,41,96859,49.5,49.5,49.5,49.5,49.5,49.5,49.5,9.9),(2789,1,42,115082,52.0,52.0,52.0,52.0,52.0,52.0,52.0,9.9),(2790,1,43,139794,54.5,54.5,54.5,54.5,54.5,54.5,54.5,9.9),(2791,1,44,169462,57.0,57.0,57.0,57.0,57.0,57.0,57.0,9.9),(2792,1,45,207509,59.5,59.5,59.5,59.5,59.5,59.5,59.5,9.9),(2793,1,46,251772,62.0,62.0,62.0,62.0,62.0,62.0,62.0,9.9),(2794,1,47,306304,64.5,64.5,64.5,64.5,64.5,64.5,64.5,9.9),(2795,1,48,368312,67.0,67.0,67.0,67.0,67.0,67.0,67.0,9.9),(2796,1,49,442479,69.5,69.5,69.5,69.5,69.5,69.5,69.5,9.9),(2797,1,50,525382,72.0,72.0,72.0,72.0,72.0,72.0,72.0,9.9),(2798,1,51,622334,74.5,74.5,74.5,74.5,74.5,74.5,74.5,9.9),(2799,1,52,729282,77.0,77.0,77.0,77.0,77.0,77.0,77.0,9.9),(2800,1,53,852169,79.5,79.5,79.5,79.5,79.5,79.5,79.5,9.9),(2801,1,54,986312,82.0,82.0,82.0,82.0,82.0,82.0,82.0,9.9),(2802,1,55,1138284,84.5,84.5,84.5,84.5,84.5,84.5,84.5,9.9),(2803,1,56,1302772,87.0,87.0,87.0,87.0,87.0,87.0,87.0,9.9),(2804,1,57,1486979,89.5,89.5,89.5,89.5,89.5,89.5,89.5,9.9),(2805,1,58,1684962,92.0,92.0,92.0,92.0,92.0,92.0,92.0,9.9),(2806,1,59,1904554,94.5,94.5,94.5,94.5,94.5,94.5,94.5,9.9),(2807,1,60,2139182,98.0,98.0,98.0,98.0,98.0,98.0,98.0,9.9),(2808,1,61,2405394,101.5,101.5,101.5,101.5,101.5,101.5,101.5,9.9),(2809,1,62,2696617,105.0,105.0,105.0,105.0,105.0,105.0,105.0,9.9),(2810,1,63,3022952,108.5,108.5,108.5,108.5,108.5,108.5,108.5,9.9),(2811,1,64,3376944,112.0,112.0,112.0,112.0,112.0,112.0,112.0,9.9),(2812,1,65,3769576,115.5,115.5,115.5,115.5,115.5,115.5,115.5,9.9),(2813,1,66,4192511,119.0,119.0,119.0,119.0,119.0,119.0,119.0,9.9),(2814,1,67,4657614,122.5,122.5,122.5,122.5,122.5,122.5,122.5,9.9),(2815,1,68,5155666,126.0,126.0,126.0,126.0,126.0,126.0,126.0,9.9),(2816,1,69,5699414,129.5,129.5,129.5,129.5,129.5,129.5,129.5,9.9),(2817,1,70,6278757,133.0,133.0,133.0,133.0,133.0,133.0,133.0,9.9),(2818,1,71,6907324,136.5,136.5,136.5,136.5,136.5,136.5,136.5,9.9),(2819,1,72,7574132,140.0,140.0,140.0,140.0,140.0,140.0,140.0,9.9),(2820,1,73,8293692,143.5,143.5,143.5,143.5,143.5,143.5,143.5,9.9),(2821,1,74,9054139,147.0,147.0,147.0,147.0,147.0,147.0,147.0,9.9),(2822,2,0,0,10.0,15.0,20.0,10.0,0.0,5.0,10.0,5.0),(2823,2,1,760,11.0,16.5,22.0,11.0,0.0,5.5,11.0,5.0),(2824,2,2,1592,12.0,18.0,24.0,12.0,0.0,6.0,12.0,5.0),(2825,2,3,2520,13.0,19.5,26.0,13.0,0.0,6.5,13.0,5.0),(2826,2,4,3520,14.0,21.0,28.0,14.0,0.0,7.0,14.0,5.0),(2827,2,5,4616,15.0,22.5,30.0,15.0,0.0,7.5,15.0,5.0),(2828,2,6,5784,16.0,24.0,32.0,16.0,0.0,8.0,16.0,5.0),(2829,2,7,7048,17.0,25.5,34.0,17.0,0.0,8.5,17.0,5.0),(2830,2,8,8380,18.0,27.0,36.0,18.0,0.0,9.0,18.0,5.0),(2831,2,9,9844,19.0,28.5,38.0,19.0,0.0,9.5,19.0,5.0),(2832,2,10,11488,20.0,30.0,40.0,20.0,0.0,10.0,20.0,9.9),(2833,2,11,13468,21.0,31.5,42.0,21.0,0.0,10.5,21.0,9.9),(2834,2,12,15772,22.0,33.0,44.0,22.0,0.0,11.0,22.0,9.9),(2835,2,13,18496,23.0,34.5,46.0,23.0,0.0,11.5,23.0,9.9),(2836,2,14,21684,24.0,36.0,48.0,24.0,0.0,12.0,24.0,9.9),(2837,2,15,25472,25.0,37.5,50.0,25.0,0.0,12.5,25.0,9.9),(2838,2,16,29917,26.0,39.0,52.0,26.0,0.0,13.0,26.0,9.9),(2839,2,17,35214,27.0,40.5,54.0,27.0,0.0,13.5,27.0,9.9),(2840,2,18,41366,28.0,42.0,56.0,28.0,0.0,14.0,28.0,9.9),(2841,2,19,48622,29.0,43.5,58.0,29.0,0.0,14.5,29.0,9.9),(2842,2,20,56931,31.0,46.0,61.0,31.0,1.0,16.0,31.0,9.9),(2843,2,21,67358,33.0,48.5,64.0,33.0,2.0,17.5,33.0,9.9),(2844,2,22,79942,35.0,51.0,67.0,35.0,3.0,19.0,35.0,9.9),(2845,2,23,95253,37.0,53.5,70.0,37.0,4.0,20.5,37.0,9.9),(2846,2,24,113445,39.0,56.0,73.0,39.0,5.0,22.0,39.0,9.9),(2847,2,25,135381,41.0,58.5,76.0,41.0,6.0,23.5,41.0,9.9),(2848,2,26,161136,43.0,61.0,79.0,43.0,7.0,25.0,43.0,9.9),(2849,2,27,191661,45.0,63.5,82.0,45.0,8.0,26.5,45.0,9.9),(2850,2,28,226941,47.0,66.0,85.0,47.0,9.0,28.0,47.0,9.9),(2851,2,29,268017,49.0,68.5,88.0,49.0,10.0,29.5,49.0,9.9),(2852,2,30,314784,51.0,71.0,91.0,51.0,11.0,31.0,51.0,9.9),(2853,2,31,368373,53.0,73.5,94.0,53.0,12.0,32.5,53.0,9.9),(2854,2,32,428589,55.0,76.0,97.0,55.0,13.0,34.0,55.0,9.9),(2855,2,33,496649,57.0,78.5,100.0,57.0,14.0,35.5,57.0,9.9),(2856,2,34,572281,59.0,81.0,103.0,59.0,15.0,37.0,59.0,9.9),(2857,2,35,656859,61.0,83.5,106.0,61.0,16.0,38.5,61.0,9.9),(2858,2,36,749999,63.0,86.0,109.0,63.0,17.0,40.0,63.0,9.9),(2859,2,37,853219,65.0,88.5,112.0,65.0,18.0,41.5,65.0,9.9),(2860,2,38,965991,67.0,91.0,115.0,67.0,19.0,43.0,67.0,9.9),(2861,2,39,1089977,69.0,93.5,118.0,69.0,20.0,44.5,69.0,9.9),(2862,2,40,1224505,72.0,97.0,122.0,72.0,22.0,47.0,72.0,9.9),(2863,2,41,1376415,75.0,100.5,126.0,75.0,24.0,49.5,75.0,9.9),(2864,2,42,1545431,78.0,104.0,130.0,78.0,26.0,52.0,78.0,9.9),(2865,2,43,1734151,81.0,107.5,134.0,81.0,28.0,54.5,81.0,9.9),(2866,2,44,1942083,84.0,111.0,138.0,84.0,30.0,57.0,84.0,9.9),(2867,2,45,2172041,87.0,114.5,142.0,87.0,32.0,59.5,87.0,9.9),(2868,2,46,2423317,90.0,118.0,146.0,90.0,34.0,62.0,90.0,9.9),(2869,2,47,2698937,93.0,121.5,150.0,93.0,36.0,64.5,93.0,9.9),(2870,2,48,2998017,96.0,125.0,154.0,96.0,38.0,67.0,96.0,9.9),(2871,2,49,3323875,99.0,128.5,158.0,99.0,40.0,69.5,99.0,9.9),(2872,2,50,3675443,102.0,132.0,162.0,102.0,42.0,72.0,102.0,9.9),(2873,2,51,4056255,105.0,135.5,166.0,105.0,44.0,74.5,105.0,9.9),(2874,2,52,4465027,108.0,139.0,170.0,108.0,46.0,77.0,108.0,9.9),(2875,2,53,4905509,111.0,142.5,174.0,111.0,48.0,79.5,111.0,9.9),(2876,2,54,5376201,114.0,146.0,178.0,114.0,50.0,82.0,114.0,9.9),(2877,2,55,5881069,117.0,149.5,182.0,117.0,52.0,84.5,117.0,9.9),(2878,2,56,6418397,120.0,153.0,186.0,120.0,54.0,87.0,120.0,9.9),(2879,2,57,6992367,123.0,156.5,190.0,123.0,56.0,89.5,123.0,9.9),(2880,2,58,7601047,126.0,160.0,194.0,126.0,58.0,92.0,126.0,9.9),(2881,2,59,8248835,129.0,163.5,198.0,129.0,60.0,94.5,129.0,9.9),(2882,2,60,8933583,133.0,168.0,203.0,133.0,63.0,98.0,133.0,9.9),(2883,2,61,9672400,137.0,172.5,208.0,137.0,66.0,101.5,137.0,9.9),(2884,2,62,10463768,141.0,177.0,213.0,141.0,69.0,105.0,141.0,9.9),(2885,2,63,11313471,145.0,181.5,218.0,145.0,72.0,108.5,145.0,9.9),(2886,2,64,12219703,149.0,186.0,223.0,149.0,75.0,112.0,149.0,9.9),(2887,2,65,13188536,153.0,190.5,228.0,153.0,78.0,115.5,153.0,9.9),(2888,2,66,14217876,157.0,195.0,233.0,157.0,81.0,119.0,157.0,9.9),(2889,2,67,15314083,161.0,199.5,238.0,161.0,84.0,122.5,161.0,9.9),(2890,2,68,16474775,165.0,204.0,243.0,165.0,87.0,126.0,165.0,9.9),(2891,2,69,17706600,169.0,208.5,248.0,169.0,90.0,129.5,169.0,9.9),(2892,2,70,19006888,173.0,213.0,253.0,173.0,93.0,133.0,173.0,9.9),(2893,2,71,20382575,177.0,217.5,258.0,177.0,96.0,136.5,177.0,9.9),(2894,2,72,21830703,181.0,222.0,263.0,181.0,99.0,140.0,181.0,9.9),(2895,2,73,23358496,185.0,226.5,268.0,185.0,102.0,143.5,185.0,9.9),(2896,2,74,24962708,189.0,231.0,273.0,189.0,105.0,147.0,189.0,9.9),(2897,3,0,0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0),(2898,3,1,512,7.7,7.7,7.7,7.7,7.7,7.7,7.7,7.0),(2899,3,2,1024,8.4,8.4,8.4,8.4,8.4,8.4,8.4,7.0),(2900,3,3,1620,9.1,9.1,9.1,9.1,9.1,9.1,9.1,7.0),(2901,3,4,2300,9.8,9.8,9.8,9.8,9.8,9.8,9.8,7.0),(2902,3,5,2980,10.5,10.5,10.5,10.5,10.5,10.5,10.5,7.0),(2903,3,6,3744,11.2,11.2,11.2,11.2,11.2,11.2,11.2,7.0),(2904,3,7,4592,11.9,11.9,11.9,11.9,11.9,11.9,11.9,7.0),(2905,3,8,5440,12.6,12.6,12.6,12.6,12.6,12.6,12.6,7.0),(2906,3,9,6372,13.3,13.3,13.3,13.3,13.3,13.3,13.3,7.0),(2907,3,10,7388,14.0,14.0,14.0,14.0,14.0,14.0,14.0,9.9),(2908,3,11,8488,14.7,14.7,14.7,14.7,14.7,14.7,14.7,9.9),(2909,3,12,9672,15.4,15.4,15.4,15.4,15.4,15.4,15.4,9.9),(2910,3,13,10940,16.1,16.1,16.1,16.1,16.1,16.1,16.1,9.9),(2911,3,14,12292,16.8,16.8,16.8,16.8,16.8,16.8,16.8,9.9),(2912,3,15,13644,17.5,17.5,17.5,17.5,17.5,17.5,17.5,9.9),(2913,3,16,15080,18.2,18.2,18.2,18.2,18.2,18.2,18.2,9.9),(2914,3,17,16600,18.9,18.9,18.9,18.9,18.9,18.9,18.9,9.9),(2915,3,18,18120,19.6,19.6,19.6,19.6,19.6,19.6,19.6,9.9),(2916,3,19,19724,20.3,20.3,20.3,20.3,20.3,20.3,20.3,9.9),(2917,3,20,21412,22.0,22.0,22.0,22.0,22.0,22.0,22.0,9.9),(2918,3,21,23184,23.7,23.7,23.7,23.7,23.7,23.7,23.7,9.9),(2919,3,22,25124,25.4,25.4,25.4,25.4,25.4,25.4,25.4,9.9),(2920,3,23,27232,27.1,27.1,27.1,27.1,27.1,27.1,27.1,9.9),(2921,3,24,29508,28.8,28.8,28.8,28.8,28.8,28.8,28.8,9.9),(2922,3,25,31868,30.5,30.5,30.5,30.5,30.5,30.5,30.5,9.9),(2923,3,26,34396,32.2,32.2,32.2,32.2,32.2,32.2,32.2,9.9),(2924,3,27,37092,33.9,33.9,33.9,33.9,33.9,33.9,33.9,9.9),(2925,3,28,39872,35.6,35.6,35.6,35.6,35.6,35.6,35.6,9.9),(2926,3,29,42855,37.3,37.3,37.3,37.3,37.3,37.3,37.3,9.9),(2927,3,30,46510,39.0,39.0,39.0,39.0,39.0,39.0,39.0,9.9),(2928,3,31,51341,40.7,40.7,40.7,40.7,40.7,40.7,40.7,9.9),(2929,3,32,56949,42.4,42.4,42.4,42.4,42.4,42.4,42.4,9.9),(2930,3,33,64489,44.1,44.1,44.1,44.1,44.1,44.1,44.1,9.9),(2931,3,34,74465,45.8,45.8,45.8,45.8,45.8,45.8,45.8,9.9),(2932,3,35,85848,47.5,47.5,47.5,47.5,47.5,47.5,47.5,9.9),(2933,3,36,100423,49.2,49.2,49.2,49.2,49.2,49.2,49.2,9.9),(2934,3,37,118694,50.9,50.9,50.9,50.9,50.9,50.9,50.9,9.9),(2935,3,38,139002,52.6,52.6,52.6,52.6,52.6,52.6,52.6,9.9),(2936,3,39,163762,54.3,54.3,54.3,54.3,54.3,54.3,54.3,9.9),(2937,3,40,193478,57.0,57.0,57.0,57.0,57.0,57.0,57.0,9.9),(2938,3,41,231573,59.7,59.7,59.7,59.7,59.7,59.7,59.7,9.9),(2939,3,42,275884,62.4,62.4,62.4,62.4,62.4,62.4,62.4,9.9),(2940,3,43,330464,65.1,65.1,65.1,65.1,65.1,65.1,65.1,9.9),(2941,3,44,396447,67.8,67.8,67.8,67.8,67.8,67.8,67.8,9.9),(2942,3,45,470662,70.5,70.5,70.5,70.5,70.5,70.5,70.5,9.9),(2943,3,46,558170,73.2,73.2,73.2,73.2,73.2,73.2,73.2,9.9),(2944,3,47,660105,75.9,75.9,75.9,75.9,75.9,75.9,75.9,9.9),(2945,3,48,772288,78.6,78.6,78.6,78.6,78.6,78.6,78.6,9.9),(2946,3,49,900788,81.3,81.3,81.3,81.3,81.3,81.3,81.3,9.9),(2947,3,50,1046739,84.0,84.0,84.0,84.0,84.0,84.0,84.0,9.9),(2948,3,51,1211275,86.7,86.7,86.7,86.7,86.7,86.7,86.7,9.9),(2949,3,52,1388831,89.4,89.4,89.4,89.4,89.4,89.4,89.4,9.9),(2950,3,53,1586862,92.1,92.1,92.1,92.1,92.1,92.1,92.1,9.9),(2951,3,54,1806502,94.8,94.8,94.8,94.8,94.8,94.8,94.8,9.9),(2952,3,55,2041178,97.5,97.5,97.5,97.5,97.5,97.5,97.5,9.9),(2953,3,56,2299353,100.2,100.2,100.2,100.2,100.2,100.2,100.2,9.9),(2954,3,57,2582161,102.9,102.9,102.9,102.9,102.9,102.9,102.9,9.9),(2955,3,58,2882021,105.6,105.6,105.6,105.6,105.6,105.6,105.6,9.9),(2956,3,59,3208404,108.3,108.3,108.3,108.3,108.3,108.3,108.3,9.9),(2957,3,60,3562444,112.0,112.0,112.0,112.0,112.0,112.0,112.0,9.9),(2958,3,61,3955124,115.7,115.7,115.7,115.7,115.7,115.7,115.7,9.9),(2959,3,62,4378107,119.4,119.4,119.4,119.4,119.4,119.4,119.4,9.9),(2960,3,63,4843258,123.1,123.1,123.1,123.1,123.1,123.1,123.1,9.9),(2961,3,64,5352593,126.8,126.8,126.8,126.8,126.8,126.8,126.8,9.9),(2962,3,65,5896389,130.5,130.5,130.5,130.5,130.5,130.5,130.5,9.9),(2963,3,66,6487897,134.2,134.2,134.2,134.2,134.2,134.2,134.2,9.9),(2964,3,67,7129133,137.9,137.9,137.9,137.9,137.9,137.9,137.9,9.9),(2965,3,68,7808988,141.6,141.6,141.6,141.6,141.6,141.6,141.6,9.9),(2966,3,69,8542099,145.3,145.3,145.3,145.3,145.3,145.3,145.3,9.9),(2967,3,70,9330482,149.0,149.0,149.0,149.0,149.0,149.0,149.0,9.9),(2968,3,71,10176153,152.7,152.7,152.7,152.7,152.7,152.7,152.7,9.9),(2969,3,72,11066113,156.4,156.4,156.4,156.4,156.4,156.4,156.4,9.9),(2970,3,73,12016889,160.1,160.1,160.1,160.1,160.1,160.1,160.1,9.9),(2971,3,74,13030497,163.8,163.8,163.8,163.8,163.8,163.8,163.8,9.9),(2972,16,0,0,20.0,5.0,10.0,10.0,0.0,5.0,10.0,5.0),(2973,16,1,640,22.0,5.5,11.0,11.0,0.0,5.5,11.0,5.0),(2974,16,2,1340,24.0,6.0,12.0,12.0,0.0,6.0,12.0,5.0),(2975,16,3,2124,26.0,6.5,13.0,13.0,0.0,6.5,13.0,5.0),(2976,16,4,2968,28.0,7.0,14.0,14.0,0.0,7.0,14.0,5.0),(2977,16,5,3896,30.0,7.5,15.0,15.0,0.0,7.5,15.0,5.0),(2978,16,6,4884,32.0,8.0,16.0,16.0,0.0,8.0,16.0,5.0),(2979,16,7,5956,34.0,8.5,17.0,17.0,0.0,8.5,17.0,5.0),(2980,16,8,7084,36.0,9.0,18.0,18.0,0.0,9.0,18.0,5.0),(2981,16,9,8332,38.0,9.5,19.0,19.0,0.0,9.5,19.0,5.0),(2982,16,10,9748,40.0,10.0,20.0,20.0,0.0,10.0,20.0,9.9),(2983,16,11,11488,42.0,10.5,21.0,21.0,0.0,10.5,21.0,9.9),(2984,16,12,13540,44.0,11.0,22.0,22.0,0.0,11.0,22.0,9.9),(2985,16,13,16000,46.0,11.5,23.0,23.0,0.0,11.5,23.0,9.9),(2986,16,14,18916,48.0,12.0,24.0,24.0,0.0,12.0,24.0,9.9),(2987,16,15,22384,50.0,12.5,25.0,25.0,0.0,12.5,25.0,9.9),(2988,16,16,26452,52.0,13.0,26.0,26.0,0.0,13.0,26.0,9.9),(2989,16,17,31216,54.0,13.5,27.0,27.0,0.0,13.5,27.0,9.9),(2990,16,18,36724,56.0,14.0,28.0,28.0,0.0,14.0,28.0,9.9),(2991,16,19,43072,58.0,14.5,29.0,29.0,0.0,14.5,29.0,9.9),(2992,16,20,50308,61.0,16.0,31.0,31.0,1.0,16.0,31.0,9.9),(2993,16,21,59083,64.0,17.5,33.0,33.0,2.0,17.5,33.0,9.9),(2994,16,22,69535,67.0,19.0,35.0,35.0,3.0,19.0,35.0,9.9),(2995,16,23,81865,70.0,20.5,37.0,37.0,4.0,20.5,37.0,9.9),(2996,16,24,96416,73.0,22.0,39.0,39.0,5.0,22.0,39.0,9.9),(2997,16,25,113592,76.0,23.5,41.0,41.0,6.0,23.5,41.0,9.9),(2998,16,26,133747,79.0,25.0,43.0,43.0,7.0,25.0,43.0,9.9),(2999,16,27,157283,82.0,26.5,45.0,45.0,8.0,26.5,45.0,9.9),(3000,16,28,184554,85.0,28.0,47.0,47.0,9.0,28.0,47.0,9.9),(3001,16,29,215962,88.0,29.5,49.0,49.0,10.0,29.5,49.0,9.9),(3002,16,30,251861,91.0,31.0,51.0,51.0,11.0,31.0,51.0,9.9),(3003,16,31,292653,94.0,32.5,53.0,53.0,12.0,32.5,53.0,9.9),(3004,16,32,338692,97.0,34.0,55.0,55.0,13.0,34.0,55.0,9.9),(3005,16,33,390372,100.0,35.5,57.0,57.0,14.0,35.5,57.0,9.9),(3006,16,34,448073,103.0,37.0,59.0,59.0,15.0,37.0,59.0,9.9),(3007,16,35,512323,106.0,38.5,61.0,61.0,16.0,38.5,61.0,9.9),(3008,16,36,583458,109.0,40.0,63.0,63.0,17.0,40.0,63.0,9.9),(3009,16,37,662114,112.0,41.5,65.0,65.0,18.0,41.5,65.0,9.9),(3010,16,38,748519,115.0,43.0,67.0,67.0,19.0,43.0,67.0,9.9),(3011,16,39,843417,118.0,44.5,69.0,69.0,20.0,44.5,69.0,9.9),(3012,16,40,946928,122.0,47.0,72.0,72.0,22.0,47.0,72.0,9.9),(3013,16,41,1064038,126.0,49.5,75.0,75.0,24.0,49.5,75.0,9.9),(3014,16,42,1195263,130.0,52.0,78.0,78.0,26.0,52.0,78.0,9.9),(3015,16,43,1342175,134.0,54.5,81.0,81.0,28.0,54.5,81.0,9.9),(3016,16,44,1505110,138.0,57.0,84.0,84.0,30.0,57.0,84.0,9.9),(3017,16,45,1685820,142.0,59.5,87.0,87.0,32.0,59.5,87.0,9.9),(3018,16,46,1884461,146.0,62.0,90.0,90.0,34.0,62.0,90.0,9.9),(3019,16,47,2102961,150.0,64.5,93.0,93.0,36.0,64.5,93.0,9.9),(3020,16,48,2341336,154.0,67.0,96.0,96.0,38.0,67.0,96.0,9.9),(3021,16,49,2601770,158.0,69.5,99.0,99.0,40.0,69.5,99.0,9.9),(3022,16,50,2884131,162.0,72.0,102.0,102.0,42.0,72.0,102.0,9.9),(3023,16,51,3190783,166.0,74.5,105.0,105.0,44.0,74.5,105.0,9.9),(3024,16,52,3521414,170.0,77.0,108.0,108.0,46.0,77.0,108.0,9.9),(3025,16,53,3878568,174.0,79.5,111.0,111.0,48.0,79.5,111.0,9.9),(3026,16,54,4261753,178.0,82.0,114.0,114.0,50.0,82.0,114.0,9.9),(3027,16,55,4673693,182.0,84.5,117.0,117.0,52.0,84.5,117.0,9.9),(3028,16,56,5113716,186.0,87.0,120.0,120.0,54.0,87.0,120.0,9.9),(3029,16,57,5584726,190.0,89.5,123.0,123.0,56.0,89.5,123.0,9.9),(3030,16,58,6085871,194.0,92.0,126.0,126.0,58.0,92.0,126.0,9.9),(3031,16,59,6620235,198.0,94.5,129.0,129.0,60.0,94.5,129.0,9.9),(3032,16,60,7186786,203.0,98.0,133.0,133.0,63.0,98.0,133.0,9.9),(3033,16,61,7800023,208.0,101.5,137.0,137.0,66.0,101.5,137.0,9.9),(3034,16,62,8459544,213.0,105.0,141.0,141.0,69.0,105.0,141.0,9.9),(3035,16,63,9169711,218.0,108.5,145.0,145.0,72.0,108.5,145.0,9.9),(3036,16,64,9929870,223.0,112.0,149.0,149.0,75.0,112.0,149.0,9.9),(3037,16,65,10744635,228.0,115.5,153.0,153.0,78.0,115.5,153.0,9.9),(3038,16,66,11613100,233.0,119.0,157.0,157.0,81.0,119.0,157.0,9.9),(3039,16,67,12540131,238.0,122.5,161.0,161.0,84.0,122.5,161.0,9.9),(3040,16,68,13524570,243.0,126.0,165.0,165.0,87.0,126.0,165.0,9.9),(3041,16,69,14571535,248.0,129.5,169.0,169.0,90.0,129.5,169.0,9.9),(3042,16,70,15679616,253.0,133.0,173.0,173.0,93.0,133.0,173.0,9.9),(3043,16,71,16854183,258.0,136.5,177.0,177.0,96.0,136.5,177.0,9.9),(3044,16,72,18093574,263.0,140.0,181.0,181.0,99.0,140.0,181.0,9.9),(3045,16,73,19403411,268.0,143.5,185.0,185.0,102.0,143.5,185.0,9.9),(3046,16,74,20781780,273.0,147.0,189.0,189.0,105.0,147.0,189.0,9.9),(3047,20,0,0,10.0,10.0,15.0,10.0,5.0,5.0,10.0,3.0),(3048,20,1,658,11.0,11.0,16.5,11.0,5.5,5.5,11.0,3.0),(3049,20,2,1376,12.0,12.0,18.0,12.0,6.0,6.0,12.0,3.0),(3050,20,3,2190,13.0,13.0,19.5,13.0,6.5,6.5,13.0,3.0),(3051,20,4,3064,14.0,14.0,21.0,14.0,7.0,7.0,14.0,3.0),(3052,20,5,4034,15.0,15.0,22.5,15.0,7.5,7.5,15.0,3.0),(3053,20,6,5064,16.0,16.0,24.0,16.0,8.0,8.0,16.0,3.0),(3054,20,7,6190,17.0,17.0,25.5,17.0,8.5,8.5,17.0,3.0),(3055,20,8,7376,18.0,18.0,27.0,18.0,9.0,9.0,18.0,3.0),(3056,20,9,8658,19.0,19.0,28.5,19.0,9.5,9.5,19.0,3.0),(3057,20,10,10000,20.0,20.0,30.0,20.0,10.0,10.0,20.0,6.0),(3058,20,11,11472,21.0,21.0,31.5,21.0,10.5,10.5,21.0,6.0),(3059,20,12,13004,22.0,22.0,33.0,22.0,11.0,11.0,22.0,6.0),(3060,20,13,14632,23.0,23.0,34.5,23.0,11.5,11.5,23.0,6.0),(3061,20,14,16316,24.0,24.0,36.0,24.0,12.0,12.0,24.0,6.0),(3062,20,15,18132,25.0,25.0,37.5,25.0,12.5,12.5,25.0,6.0),(3063,20,16,20053,26.0,26.0,39.0,26.0,13.0,13.0,26.0,6.0),(3064,20,17,22214,27.0,27.0,40.5,27.0,13.5,13.5,27.0,6.0),(3065,20,18,24534,28.0,28.0,42.0,28.0,14.0,14.0,28.0,6.0),(3066,20,19,27202,29.0,29.0,43.5,29.0,14.5,14.5,29.0,6.0),(3067,20,20,30083,31.0,31.0,46.0,31.0,16.0,16.0,31.0,6.0),(3068,20,21,33711,33.0,33.0,48.5,33.0,17.5,17.5,33.0,6.0),(3069,20,22,37951,35.0,35.0,51.0,35.0,19.0,19.0,35.0,6.0),(3070,20,23,43228,37.0,37.0,53.5,37.0,20.5,20.5,37.0,6.0),(3071,20,24,49585,39.0,39.0,56.0,39.0,22.0,22.0,39.0,6.0),(3072,20,25,57805,41.0,41.0,58.5,41.0,23.5,23.5,41.0,6.0),(3073,20,26,67861,43.0,43.0,61.0,43.0,25.0,25.0,43.0,6.0),(3074,20,27,80626,45.0,45.0,63.5,45.0,26.5,26.5,45.0,6.0),(3075,20,28,95983,47.0,47.0,66.0,47.0,28.0,28.0,47.0,6.0),(3076,20,29,114895,49.0,49.0,68.5,49.0,29.5,29.5,49.0,6.0),(3077,20,30,137155,51.0,51.0,71.0,51.0,31.0,31.0,51.0,6.0),(3078,20,31,163816,53.0,53.0,73.5,53.0,32.5,32.5,53.0,6.0),(3079,20,32,194581,55.0,55.0,76.0,55.0,34.0,34.0,55.0,6.0),(3080,20,33,230585,57.0,57.0,78.5,57.0,35.5,35.5,57.0,6.0),(3081,20,34,271467,59.0,59.0,81.0,59.0,37.0,37.0,59.0,6.0),(3082,20,35,318586,61.0,61.0,83.5,61.0,38.5,38.5,61.0,6.0),(3083,20,36,371447,63.0,63.0,86.0,63.0,40.0,40.0,63.0,6.0),(3084,20,37,431607,65.0,65.0,88.5,65.0,41.5,41.5,65.0,6.0),(3085,20,38,498373,67.0,67.0,91.0,67.0,43.0,43.0,67.0,6.0),(3086,20,39,573500,69.0,69.0,93.5,69.0,44.5,44.5,69.0,6.0),(3087,20,40,656097,72.0,72.0,97.0,72.0,47.0,47.0,72.0,6.0),(3088,20,41,752476,75.0,75.0,100.5,75.0,49.5,49.5,75.0,6.0),(3089,20,42,862106,78.0,78.0,104.0,78.0,52.0,52.0,78.0,6.0),(3090,20,43,987858,81.0,81.0,107.5,81.0,54.5,54.5,81.0,6.0),(3091,20,44,1128895,84.0,84.0,111.0,84.0,57.0,57.0,84.0,6.0),(3092,20,45,1288394,87.0,87.0,114.5,87.0,59.5,59.5,87.0,6.0),(3093,20,46,1465212,90.0,90.0,118.0,90.0,62.0,62.0,90.0,6.0),(3094,20,47,1662832,93.0,93.0,121.5,93.0,64.5,64.5,93.0,6.0),(3095,20,48,1879805,96.0,96.0,125.0,96.0,67.0,67.0,96.0,6.0),(3096,20,49,2119920,99.0,99.0,128.5,99.0,69.5,69.5,99.0,6.0),(3097,20,50,2381422,102.0,102.0,132.0,102.0,72.0,72.0,102.0,6.0),(3098,20,51,2668406,105.0,105.0,135.5,105.0,74.5,74.5,105.0,6.0),(3099,20,52,2978811,108.0,108.0,139.0,108.0,77.0,77.0,108.0,6.0),(3100,20,53,3317038,111.0,111.0,142.5,111.0,79.5,79.5,111.0,6.0),(3101,20,54,3680720,114.0,114.0,146.0,114.0,82.0,82.0,114.0,6.0),(3102,20,55,4074564,117.0,117.0,149.5,117.0,84.5,84.5,117.0,6.0),(3103,20,56,4495897,120.0,120.0,153.0,120.0,87.0,87.0,120.0,6.0),(3104,20,57,4949732,123.0,123.0,156.5,123.0,89.5,89.5,123.0,6.0),(3105,20,58,5433090,126.0,126.0,160.0,126.0,92.0,92.0,126.0,6.0),(3106,20,59,5951290,129.0,129.0,163.5,129.0,94.5,94.5,129.0,6.0),(3107,20,60,6501047,133.0,133.0,168.0,133.0,98.0,98.0,133.0,6.0),(3108,20,61,7099851,137.0,137.0,172.5,137.0,101.5,101.5,137.0,6.0),(3109,20,62,7744921,141.0,141.0,177.0,141.0,105.0,105.0,141.0,6.0),(3110,20,63,8443160,145.0,145.0,181.5,145.0,108.5,108.5,145.0,6.0),(3111,20,64,9191373,149.0,149.0,186.0,149.0,112.0,112.0,149.0,6.0),(3112,20,65,9996877,153.0,153.0,190.5,153.0,115.5,115.5,153.0,6.0),(3113,20,66,10856063,157.0,157.0,195.0,157.0,119.0,119.0,157.0,6.0),(3114,20,67,11776662,161.0,161.0,199.5,161.0,122.5,122.5,161.0,6.0),(3115,20,68,12754651,165.0,165.0,204.0,165.0,126.0,126.0,165.0,6.0),(3116,20,69,13798175,169.0,169.0,208.5,169.0,129.5,129.5,169.0,6.0),(3117,20,70,14902797,173.0,173.0,213.0,173.0,133.0,133.0,173.0,6.0),(3118,20,71,16077076,177.0,177.0,217.5,177.0,136.5,136.5,177.0,6.0),(3119,20,72,17316161,181.0,181.0,222.0,181.0,140.0,140.0,181.0,6.0),(3120,20,73,18629025,185.0,185.0,226.5,185.0,143.5,143.5,185.0,6.0),(3121,20,74,20010403,189.0,189.0,231.0,189.0,147.0,147.0,189.0,6.0),(3122,21,0,0,5.0,5.0,14.0,14.0,6.0,12.0,10.0,2.0),(3123,21,1,674,5.5,5.5,15.4,15.4,6.6,13.2,11.0,2.0),(3124,21,2,1396,6.0,6.0,16.8,16.8,7.2,14.4,12.0,2.0),(3125,21,3,2202,6.5,6.5,18.2,18.2,7.8,15.6,13.0,2.0),(3126,21,4,3080,7.0,7.0,19.6,19.6,8.4,16.8,14.0,2.0),(3127,21,5,4042,7.5,7.5,21.0,21.0,9.0,18.0,15.0,2.0),(3128,21,6,5052,8.0,8.0,22.4,22.4,9.6,19.2,16.0,2.0),(3129,21,7,6182,8.5,8.5,23.8,23.8,10.2,20.4,17.0,2.0),(3130,21,8,7372,9.0,9.0,25.2,25.2,10.8,21.6,18.0,2.0),(3131,21,9,8658,9.5,9.5,26.6,26.6,11.4,22.8,19.0,2.0),(3132,21,10,10004,10.0,10.0,28.0,28.0,12.0,24.0,20.0,4.0),(3133,21,11,11438,10.5,10.5,29.4,29.4,12.6,25.2,21.0,4.0),(3134,21,12,12968,11.0,11.0,30.8,30.8,13.2,26.4,22.0,4.0),(3135,21,13,14582,11.5,11.5,32.2,32.2,13.8,27.6,23.0,4.0),(3136,21,14,16268,12.0,12.0,33.6,33.6,14.4,28.8,24.0,4.0),(3137,21,15,18038,12.5,12.5,35.0,35.0,15.0,30.0,25.0,4.0),(3138,21,16,19848,13.0,13.0,36.4,36.4,15.6,31.2,26.0,4.0),(3139,21,17,21850,13.5,13.5,37.8,37.8,16.2,32.4,27.0,4.0),(3140,21,18,24002,14.0,14.0,39.2,39.2,16.8,33.6,28.0,4.0),(3141,21,19,26538,14.5,14.5,40.6,40.6,17.4,34.8,29.0,4.0),(3142,21,20,29328,16.0,16.0,43.0,43.0,19.0,37.0,31.0,4.0),(3143,21,21,32883,17.5,17.5,45.4,45.4,20.6,39.2,33.0,4.0),(3144,21,22,37764,19.0,19.0,47.8,47.8,22.2,41.4,35.0,4.0),(3145,21,23,43898,20.5,20.5,50.2,50.2,23.8,43.6,37.0,4.0),(3146,21,24,52114,22.0,22.0,52.6,52.6,25.4,45.8,39.0,4.0),(3147,21,25,62226,23.5,23.5,55.0,55.0,27.0,48.0,41.0,4.0),(3148,21,26,74753,25.0,25.0,57.4,57.4,28.6,50.2,43.0,4.0),(3149,21,27,90610,26.5,26.5,59.8,59.8,30.2,52.4,45.0,4.0),(3150,21,28,109311,28.0,28.0,62.2,62.2,31.8,54.6,47.0,4.0),(3151,21,29,132170,29.5,29.5,64.6,64.6,33.4,56.8,49.0,4.0),(3152,21,30,158521,31.0,31.0,67.0,67.0,35.0,59.0,51.0,4.0),(3153,21,31,189134,32.5,32.5,69.4,69.4,36.6,61.2,53.0,4.0),(3154,21,32,225132,34.0,34.0,71.8,71.8,38.2,63.4,55.0,4.0),(3155,21,33,265718,35.5,35.5,74.2,74.2,39.8,65.6,57.0,4.0),(3156,21,34,312589,37.0,37.0,76.6,76.6,41.4,67.8,59.0,4.0),(3157,21,35,364956,38.5,38.5,79.0,79.0,43.0,70.0,61.0,4.0),(3158,21,36,425414,40.0,40.0,81.4,81.4,44.6,72.2,63.0,4.0),(3159,21,37,492211,41.5,41.5,83.8,83.8,46.2,74.4,65.0,4.0),(3160,21,38,565722,43.0,43.0,86.2,86.2,47.8,76.6,67.0,4.0),(3161,21,39,648296,44.5,44.5,88.6,88.6,49.4,78.8,69.0,4.0),(3162,21,40,738448,47.0,47.0,92.0,92.0,52.0,82.0,72.0,4.0),(3163,21,41,844368,49.5,49.5,95.4,95.4,54.6,85.2,75.0,4.0),(3164,21,42,963428,52.0,52.0,98.8,98.8,57.2,88.4,78.0,4.0),(3165,21,43,1097563,54.5,54.5,102.2,102.2,59.8,91.6,81.0,4.0),(3166,21,44,1249128,57.0,57.0,105.6,105.6,62.4,94.8,84.0,4.0),(3167,21,45,1417982,59.5,59.5,109.0,109.0,65.0,98.0,87.0,4.0),(3168,21,46,1608178,62.0,62.0,112.4,112.4,67.6,101.2,90.0,4.0),(3169,21,47,1817370,64.5,64.5,115.8,115.8,70.2,104.4,93.0,4.0),(3170,21,48,2046131,67.0,67.0,119.2,119.2,72.8,107.6,96.0,4.0),(3171,21,49,2298970,69.5,69.5,122.6,122.6,75.4,110.8,99.0,4.0),(3172,21,50,2573412,72.0,72.0,126.0,126.0,78.0,114.0,102.0,4.0),(3173,21,51,2876546,74.5,74.5,129.4,129.4,80.6,117.2,105.0,4.0),(3174,21,52,3202576,77.0,77.0,132.8,132.8,83.2,120.4,108.0,4.0),(3175,21,53,3554805,79.5,79.5,136.2,136.2,85.8,123.6,111.0,4.0),(3176,21,54,3935444,82.0,82.0,139.6,139.6,88.4,126.8,114.0,4.0),(3177,21,55,4344496,84.5,84.5,143.0,143.0,91.0,130.0,117.0,4.0),(3178,21,56,4785885,87.0,87.0,146.4,146.4,93.6,133.2,120.0,4.0),(3179,21,57,5257955,89.5,89.5,149.8,149.8,96.2,136.4,123.0,4.0),(3180,21,58,5759818,92.0,92.0,153.2,153.2,98.8,139.6,126.0,4.0),(3181,21,59,6297639,94.5,94.5,156.6,156.6,101.4,142.8,129.0,4.0),(3182,21,60,6867287,98.0,98.0,161.0,161.0,105.0,147.0,133.0,4.0),(3183,21,61,7489261,101.5,101.5,165.4,165.4,108.6,151.2,137.0,4.0),(3184,21,62,8157933,105.0,105.0,169.8,169.8,112.2,155.4,141.0,4.0),(3185,21,63,8877629,108.5,108.5,174.2,174.2,115.8,159.6,145.0,4.0),(3186,21,64,9651226,112.0,112.0,178.6,178.6,119.4,163.8,149.0,4.0),(3187,21,65,10479807,115.5,115.5,183.0,183.0,123.0,168.0,153.0,4.0),(3188,21,66,11366195,119.0,119.0,187.4,187.4,126.6,172.2,157.0,4.0),(3189,21,67,12314014,122.5,122.5,191.8,191.8,130.2,176.4,161.0,4.0),(3190,21,68,13319655,126.0,126.0,196.2,196.2,133.8,180.6,165.0,4.0),(3191,21,69,14392235,129.5,129.5,200.6,200.6,137.4,184.8,169.0,4.0),(3192,21,70,15526345,133.0,133.0,205.0,205.0,141.0,189.0,173.0,4.0),(3193,21,71,16731552,136.5,136.5,209.4,209.4,144.6,193.2,177.0,4.0),(3194,21,72,18004862,140.0,140.0,213.8,213.8,148.2,197.4,181.0,4.0),(3195,21,73,19349068,143.5,143.5,218.2,218.2,151.8,201.6,185.0,4.0),(3196,21,74,20766723,147.0,147.0,222.6,222.6,155.4,205.8,189.0,4.0);

UNLOCK TABLES;

/*Table structure for table `races` */

DROP TABLE IF EXISTS `races`;

CREATE TABLE `races` (
  `id` int(11) NOT NULL auto_increment COMMENT 'Race id',
  `name` varchar(32) NOT NULL COMMENT 'name of the race',
  `description` varchar(256) default NULL COMMENT 'description of the race',
  `kingdom_id` int(11) default NULL COMMENT 'Default home of the race. Kingdom zero means the race is found everywhere. Otherwise, this is the kingdom where the player_character character starts, their house is here, but the player_character is not necessarily bound to remain at that kingdom.',
  `race_body_type` int(3) NOT NULL COMMENT 'Type of body the race has, ie humanoid, gaint, tentacle monster, etc.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `name` (`name`),
  CONSTRAINT `FK_kingdoms_races` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `races` */

LOCK TABLES `races` WRITE;

insert  into `races`(`id`,`name`,`description`,`kingdom_id`,`race_body_type`) values (1,'Human','A ergular human.',0,1),(2,'Dwarf','What game could go without one of these short persons',0,1),(3,'Communist','In soviet russia, game plays you',0,1),(16,'Merdudes','Catchin a wave onto the land bro!',0,3),(20,'Ant People','People made of ants',0,2),(21,'Octopoid','Unknown origin, possibly japan',0,3);

UNLOCK TABLES;

/*Table structure for table `schema_migrations` */

DROP TABLE IF EXISTS `schema_migrations`;

CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL,
  UNIQUE KEY `unique_schema_migrations` (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `schema_migrations` */

LOCK TABLES `schema_migrations` WRITE;

insert  into `schema_migrations`(`version`) values ('0'),('20100110051615'),('20100110051616'),('20100112051615'),('20100116051615');

UNLOCK TABLES;

/*Table structure for table `sessions` */

DROP TABLE IF EXISTS `sessions`;

CREATE TABLE `sessions` (
  `id` int(11) NOT NULL auto_increment,
  `session_id` varchar(255) NOT NULL,
  `data` longtext,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_sessions_on_session_id` (`session_id`),
  KEY `index_sessions_on_updated_at` (`updated_at`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sessions` */

LOCK TABLES `sessions` WRITE;

UNLOCK TABLES;

/*Table structure for table `system_statuses` */

DROP TABLE IF EXISTS `system_statuses`;

CREATE TABLE `system_statuses` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the system. 1 is the all system',
  `status` int(1) default NULL COMMENT 'indicates the system status. 1=Users can sign on, 0=system maintenence (users cannot access game)',
  `days` int(20) default NULL COMMENT 'simple counter accumulating days since the game started',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

/*Data for the table `system_statuses` */

LOCK TABLES `system_statuses` WRITE;

insert  into `system_statuses`(`id`,`status`,`days`) values (1,1,0);

UNLOCK TABLES;

/*Table structure for table `table_locks` */

DROP TABLE IF EXISTS `table_locks`;

CREATE TABLE `table_locks` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(255) NOT NULL,
  `locked` tinyint(1) default '0',
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_table_locks_on_name` (`name`),
  KEY `index_table_locks_on_updated_at` (`updated_at`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `table_locks` */

LOCK TABLES `table_locks` WRITE;

insert  into `table_locks`(`id`,`name`,`locked`,`created_at`,`updated_at`) values (1,'attack_spells',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(2,'base_items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(3,'blacksmith_skills',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(4,'c_class_levels',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(5,'c_classes',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(6,'creature_kills',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(7,'creatures',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(8,'diseases',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(9,'done_events',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(10,'done_quests',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(11,'event_creatures',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(12,'event_diseases',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(13,'event_items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(14,'event_moves',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(15,'event_npcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(16,'event_player_characters',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(17,'event_quests',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(18,'event_stats',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(19,'event_storm_gates',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(20,'events',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(21,'feature_events',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(22,'features',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(23,'forum_nodes',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(24,'forum_restrictions',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(25,'genocides',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(26,'healer_skills',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(27,'healing_spells',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(28,'images',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(29,'infections',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(30,'items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(31,'kingdom_bans',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(32,'kingdom_empty_shops',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(33,'kingdom_entries',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(34,'kingdom_items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(35,'kingdom_notices',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(36,'kingdoms',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(37,'level_maps',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(38,'levels',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(39,'lock_tables',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(40,'log_quest_creature_kills',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(41,'log_quest_explores',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(42,'log_quest_kill_n_npcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(43,'log_quest_kill_pcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(44,'log_quest_kill_s_npcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(45,'log_quests',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(46,'name_surfixes',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(47,'name_titles',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(48,'names',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(49,'nonplayer_character_killers',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(50,'npc_blacksmith_items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(51,'npc_diseases',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(52,'npc_merchants',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(53,'npc_stocks',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(54,'npcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(55,'pandemics',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(56,'player_character_equip_locs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(57,'player_character_items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(58,'player_character_killers',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(59,'player_characters',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(60,'players',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(61,'pref_lists',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(62,'quest_creature_kills',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(63,'quest_explores',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(64,'quest_items',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(65,'quest_kill_n_npcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(66,'quest_kill_pcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(67,'quest_kill_s_npcs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(68,'quests',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(69,'race_equip_locs',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(70,'race_levels',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(71,'races',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(72,'schema_migrations',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(73,'sessions',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(74,'special_codes',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(75,'system_statuses',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(76,'table_locks',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(77,'trainer_skills',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(78,'world_maps',0,'2010-01-16 13:49:35','2010-01-16 13:49:35'),(79,'worlds',0,'2010-01-16 13:49:35','2010-01-16 13:49:35');

UNLOCK TABLES;

/*Table structure for table `trainer_skills` */

DROP TABLE IF EXISTS `trainer_skills`;

CREATE TABLE `trainer_skills` (
  `id` int(11) NOT NULL auto_increment,
  `max_skill_taught` float NOT NULL COMMENT '% the trainer can raise the attributes they specialize in above the c_class/race standard',
  `min_sales` int(20) NOT NULL COMMENT 'min sales needed to raise player_character base skill to this % above the norm for c_class/race',
  PRIMARY KEY  (`id`),
  KEY `min_sales` (`min_sales`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `trainer_skills` */

LOCK TABLES `trainer_skills` WRITE;

insert  into `trainer_skills`(`id`,`max_skill_taught`,`min_sales`) values (1,11,0),(2,25,1000),(3,30,10000),(4,45,100000),(5,55,500000),(6,70,2500000),(7,80,12500000),(8,90,50000000),(9,100,500000000),(10,125,2000000000);

UNLOCK TABLES;

/*Table structure for table `world_maps` */

DROP TABLE IF EXISTS `world_maps`;

CREATE TABLE `world_maps` (
  `id` int(11) NOT NULL auto_increment,
  `world_id` int(11) NOT NULL COMMENT 'ID of the world represented by this big world',
  `xpos` int(2) NOT NULL COMMENT 'The x position of the item in the mapsquare',
  `ypos` int(2) NOT NULL COMMENT 'The y position of the feature in the big map square',
  `bigxpos` int(2) NOT NULL COMMENT 'The bigmap square relative x position',
  `bigypos` int(2) NOT NULL COMMENT 'The bigmap square y relative position. The world is made up of large "level" maps esentially, laid side by side, and each has assorted features, whose locations are represented by the xpos and ypos',
  `feature_id` int(11) default NULL COMMENT 'The feature at this location',
  PRIMARY KEY  (`id`),
  KEY `world_id` (`world_id`),
  KEY `world_bixs_bigy_x_y_id` (`world_id`,`bigxpos`,`bigypos`,`xpos`,`ypos`),
  KEY `feature_id` (`feature_id`),
  KEY `world_id_bigxpos_bigypos` (`world_id`,`bigxpos`,`bigypos`),
  CONSTRAINT `FK_features_world_maps` FOREIGN KEY (`feature_id`) REFERENCES `features` (`id`),
  CONSTRAINT `FK_worlds_world_maps` FOREIGN KEY (`world_id`) REFERENCES `worlds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `world_maps` */

LOCK TABLES `world_maps` WRITE;

insert  into `world_maps`(`id`,`world_id`,`xpos`,`ypos`,`bigxpos`,`bigypos`,`feature_id`) values (1,1,1,1,0,0,NULL),(2,1,2,1,0,0,NULL),(3,1,3,1,0,0,NULL),(4,1,4,1,0,0,NULL),(5,1,5,1,0,0,NULL),(6,1,6,1,0,0,NULL),(7,1,1,2,0,0,NULL),(8,1,2,2,0,0,NULL),(9,1,3,2,0,0,NULL),(10,1,4,2,0,0,NULL),(11,1,5,2,0,0,NULL),(12,1,6,2,0,0,NULL),(13,1,1,3,0,0,NULL),(14,1,2,3,0,0,NULL),(15,1,3,3,0,0,NULL),(16,1,4,3,0,0,NULL),(17,1,5,3,0,0,NULL),(18,1,6,3,0,0,NULL),(19,1,1,4,0,0,NULL),(20,1,2,4,0,0,NULL),(21,1,3,4,0,0,NULL),(22,1,4,4,0,0,NULL),(23,1,5,4,0,0,NULL),(24,1,6,4,0,0,NULL),(25,1,1,5,0,0,NULL),(26,1,2,5,0,0,NULL),(27,1,3,5,0,0,NULL),(28,1,4,5,0,0,NULL),(29,1,5,5,0,0,NULL),(30,1,6,5,0,0,NULL),(31,1,1,6,0,0,NULL),(32,1,2,6,0,0,NULL),(33,1,3,6,0,0,NULL),(34,1,4,6,0,0,NULL),(35,1,5,6,0,0,NULL),(36,1,6,6,0,0,NULL),(37,1,3,2,0,0,17),(38,1,4,2,0,0,17),(39,1,5,2,0,0,17),(40,1,3,3,0,0,17),(41,1,4,3,0,0,25),(42,1,5,3,0,0,17),(43,1,3,4,0,0,17),(44,1,4,4,0,0,17),(45,1,5,4,0,0,17),(46,1,1,1,0,0,15),(47,1,2,1,0,0,15),(48,1,3,1,0,0,15),(49,1,4,1,0,0,17),(50,1,5,1,0,0,57),(51,1,6,1,0,0,20),(52,1,1,2,0,0,16),(53,1,2,2,0,0,15),(54,1,6,2,0,0,19),(55,1,1,3,0,0,16),(56,1,2,3,0,0,15),(57,1,6,3,0,0,19),(58,1,1,4,0,0,15),(59,1,2,4,0,0,15),(60,1,6,4,0,0,15),(61,1,1,5,0,0,19),(62,1,2,5,0,0,19),(63,1,3,5,0,0,17),(64,1,4,5,0,0,22),(65,1,5,5,0,0,22),(66,1,6,5,0,0,15),(67,1,1,6,0,0,19),(68,1,2,6,0,0,58),(69,1,3,6,0,0,19),(70,1,4,6,0,0,17),(71,1,5,6,0,0,15),(72,1,6,6,0,0,21),(73,1,3,6,0,0,18),(74,1,4,6,0,0,60),(75,1,1,1,1,0,NULL),(76,1,2,1,1,0,NULL),(77,1,3,1,1,0,NULL),(78,1,4,1,1,0,NULL),(79,1,5,1,1,0,NULL),(80,1,6,1,1,0,NULL),(81,1,1,2,1,0,NULL),(82,1,2,2,1,0,NULL),(83,1,3,2,1,0,NULL),(84,1,4,2,1,0,NULL),(85,1,5,2,1,0,NULL),(86,1,6,2,1,0,NULL),(87,1,1,3,1,0,NULL),(88,1,2,3,1,0,NULL),(89,1,3,3,1,0,NULL),(90,1,4,3,1,0,NULL),(91,1,5,3,1,0,NULL),(92,1,6,3,1,0,NULL),(93,1,1,4,1,0,NULL),(94,1,2,4,1,0,NULL),(95,1,3,4,1,0,NULL),(96,1,4,4,1,0,NULL),(97,1,5,4,1,0,NULL),(98,1,6,4,1,0,NULL),(99,1,1,5,1,0,NULL),(100,1,2,5,1,0,NULL),(101,1,3,5,1,0,NULL),(102,1,4,5,1,0,NULL),(103,1,5,5,1,0,NULL),(104,1,6,5,1,0,NULL),(105,1,1,6,1,0,NULL),(106,1,2,6,1,0,NULL),(107,1,3,6,1,0,NULL),(108,1,4,6,1,0,NULL),(109,1,5,6,1,0,NULL),(110,1,6,6,1,0,NULL),(111,1,1,1,0,-1,NULL),(112,1,2,1,0,-1,NULL),(113,1,3,1,0,-1,NULL),(114,1,4,1,0,-1,NULL),(115,1,5,1,0,-1,NULL),(116,1,6,1,0,-1,NULL),(117,1,1,2,0,-1,NULL),(118,1,2,2,0,-1,NULL),(119,1,3,2,0,-1,NULL),(120,1,4,2,0,-1,NULL),(121,1,5,2,0,-1,NULL),(122,1,6,2,0,-1,NULL),(123,1,1,3,0,-1,NULL),(124,1,2,3,0,-1,NULL),(125,1,3,3,0,-1,NULL),(126,1,4,3,0,-1,NULL),(127,1,5,3,0,-1,NULL),(128,1,6,3,0,-1,NULL),(129,1,1,4,0,-1,NULL),(130,1,2,4,0,-1,NULL),(131,1,3,4,0,-1,NULL),(132,1,4,4,0,-1,NULL),(133,1,5,4,0,-1,NULL),(134,1,6,4,0,-1,NULL),(135,1,1,5,0,-1,NULL),(136,1,2,5,0,-1,NULL),(137,1,3,5,0,-1,NULL),(138,1,4,5,0,-1,NULL),(139,1,5,5,0,-1,NULL),(140,1,6,5,0,-1,NULL),(141,1,1,6,0,-1,NULL),(142,1,2,6,0,-1,NULL),(143,1,3,6,0,-1,NULL),(144,1,4,6,0,-1,NULL),(145,1,5,6,0,-1,NULL),(146,1,6,6,0,-1,NULL),(147,1,1,1,-1,0,NULL),(148,1,2,1,-1,0,NULL),(149,1,3,1,-1,0,NULL),(150,1,4,1,-1,0,NULL),(151,1,5,1,-1,0,NULL),(152,1,6,1,-1,0,NULL),(153,1,1,2,-1,0,NULL),(154,1,2,2,-1,0,NULL),(155,1,3,2,-1,0,NULL),(156,1,4,2,-1,0,NULL),(157,1,5,2,-1,0,NULL),(158,1,6,2,-1,0,NULL),(159,1,1,3,-1,0,NULL),(160,1,2,3,-1,0,NULL),(161,1,3,3,-1,0,NULL),(162,1,4,3,-1,0,NULL),(163,1,5,3,-1,0,NULL),(164,1,6,3,-1,0,NULL),(165,1,1,4,-1,0,NULL),(166,1,2,4,-1,0,NULL),(167,1,3,4,-1,0,NULL),(168,1,4,4,-1,0,NULL),(169,1,5,4,-1,0,NULL),(170,1,6,4,-1,0,NULL),(171,1,1,5,-1,0,NULL),(172,1,2,5,-1,0,NULL),(173,1,3,5,-1,0,NULL),(174,1,4,5,-1,0,NULL),(175,1,5,5,-1,0,NULL),(176,1,6,5,-1,0,NULL),(177,1,1,6,-1,0,NULL),(178,1,2,6,-1,0,NULL),(179,1,3,6,-1,0,NULL),(180,1,4,6,-1,0,NULL),(181,1,5,6,-1,0,NULL),(182,1,6,6,-1,0,NULL),(183,1,1,1,0,1,NULL),(184,1,2,1,0,1,NULL),(185,1,3,1,0,1,NULL),(186,1,4,1,0,1,NULL),(187,1,5,1,0,1,NULL),(188,1,6,1,0,1,NULL),(189,1,1,2,0,1,NULL),(190,1,2,2,0,1,NULL),(191,1,3,2,0,1,NULL),(192,1,4,2,0,1,NULL),(193,1,5,2,0,1,NULL),(194,1,6,2,0,1,NULL),(195,1,1,3,0,1,NULL),(196,1,2,3,0,1,NULL),(197,1,3,3,0,1,NULL),(198,1,4,3,0,1,NULL),(199,1,5,3,0,1,NULL),(200,1,6,3,0,1,NULL),(201,1,1,4,0,1,NULL),(202,1,2,4,0,1,NULL),(203,1,3,4,0,1,NULL),(204,1,4,4,0,1,NULL),(205,1,5,4,0,1,NULL),(206,1,6,4,0,1,NULL),(207,1,1,5,0,1,NULL),(208,1,2,5,0,1,NULL),(209,1,3,5,0,1,NULL),(210,1,4,5,0,1,NULL),(211,1,5,5,0,1,NULL),(212,1,6,5,0,1,NULL),(213,1,1,6,0,1,NULL),(214,1,2,6,0,1,NULL),(215,1,3,6,0,1,NULL),(216,1,4,6,0,1,NULL),(217,1,5,6,0,1,NULL),(218,1,6,6,0,1,NULL),(219,1,1,1,1,-1,NULL),(220,1,2,1,1,-1,NULL),(221,1,3,1,1,-1,NULL),(222,1,4,1,1,-1,NULL),(223,1,5,1,1,-1,NULL),(224,1,6,1,1,-1,NULL),(225,1,1,2,1,-1,NULL),(226,1,2,2,1,-1,NULL),(227,1,3,2,1,-1,NULL),(228,1,4,2,1,-1,NULL),(229,1,5,2,1,-1,NULL),(230,1,6,2,1,-1,NULL),(231,1,1,3,1,-1,NULL),(232,1,2,3,1,-1,NULL),(233,1,3,3,1,-1,NULL),(234,1,4,3,1,-1,NULL),(235,1,5,3,1,-1,NULL),(236,1,6,3,1,-1,NULL),(237,1,1,4,1,-1,NULL),(238,1,2,4,1,-1,NULL),(239,1,3,4,1,-1,NULL),(240,1,4,4,1,-1,NULL),(241,1,5,4,1,-1,NULL),(242,1,6,4,1,-1,NULL),(243,1,1,5,1,-1,NULL),(244,1,2,5,1,-1,NULL),(245,1,3,5,1,-1,NULL),(246,1,4,5,1,-1,NULL),(247,1,5,5,1,-1,NULL),(248,1,6,5,1,-1,NULL),(249,1,1,6,1,-1,NULL),(250,1,2,6,1,-1,NULL),(251,1,3,6,1,-1,NULL),(252,1,4,6,1,-1,NULL),(253,1,5,6,1,-1,NULL),(254,1,6,6,1,-1,NULL),(255,1,1,1,1,1,NULL),(256,1,2,1,1,1,NULL),(257,1,3,1,1,1,NULL),(258,1,4,1,1,1,NULL),(259,1,5,1,1,1,NULL),(260,1,6,1,1,1,NULL),(261,1,1,2,1,1,NULL),(262,1,2,2,1,1,NULL),(263,1,3,2,1,1,NULL),(264,1,4,2,1,1,NULL),(265,1,5,2,1,1,NULL),(266,1,6,2,1,1,NULL),(267,1,1,3,1,1,NULL),(268,1,2,3,1,1,NULL),(269,1,3,3,1,1,NULL),(270,1,4,3,1,1,NULL),(271,1,5,3,1,1,NULL),(272,1,6,3,1,1,NULL),(273,1,1,4,1,1,NULL),(274,1,2,4,1,1,NULL),(275,1,3,4,1,1,NULL),(276,1,4,4,1,1,NULL),(277,1,5,4,1,1,NULL),(278,1,6,4,1,1,NULL),(279,1,1,5,1,1,NULL),(280,1,2,5,1,1,NULL),(281,1,3,5,1,1,NULL),(282,1,4,5,1,1,NULL),(283,1,5,5,1,1,NULL),(284,1,6,5,1,1,NULL),(285,1,1,6,1,1,NULL),(286,1,2,6,1,1,NULL),(287,1,3,6,1,1,NULL),(288,1,4,6,1,1,NULL),(289,1,5,6,1,1,NULL),(290,1,6,6,1,1,NULL),(291,1,1,1,-1,1,NULL),(292,1,2,1,-1,1,NULL),(293,1,3,1,-1,1,NULL),(294,1,4,1,-1,1,NULL),(295,1,5,1,-1,1,NULL),(296,1,6,1,-1,1,NULL),(297,1,1,2,-1,1,NULL),(298,1,2,2,-1,1,NULL),(299,1,3,2,-1,1,NULL),(300,1,4,2,-1,1,NULL),(301,1,5,2,-1,1,NULL),(302,1,6,2,-1,1,NULL),(303,1,1,3,-1,1,NULL),(304,1,2,3,-1,1,NULL),(305,1,3,3,-1,1,NULL),(306,1,4,3,-1,1,NULL),(307,1,5,3,-1,1,NULL),(308,1,6,3,-1,1,NULL),(309,1,1,4,-1,1,NULL),(310,1,2,4,-1,1,NULL),(311,1,3,4,-1,1,NULL),(312,1,4,4,-1,1,NULL),(313,1,5,4,-1,1,NULL),(314,1,6,4,-1,1,NULL),(315,1,1,5,-1,1,NULL),(316,1,2,5,-1,1,NULL),(317,1,3,5,-1,1,NULL),(318,1,4,5,-1,1,NULL),(319,1,5,5,-1,1,NULL),(320,1,6,5,-1,1,NULL),(321,1,1,6,-1,1,NULL),(322,1,2,6,-1,1,NULL),(323,1,3,6,-1,1,NULL),(324,1,4,6,-1,1,NULL),(325,1,5,6,-1,1,NULL),(326,1,6,6,-1,1,NULL),(327,1,1,1,-1,-1,NULL),(328,1,2,1,-1,-1,NULL),(329,1,3,1,-1,-1,NULL),(330,1,4,1,-1,-1,NULL),(331,1,5,1,-1,-1,NULL),(332,1,6,1,-1,-1,NULL),(333,1,1,2,-1,-1,NULL),(334,1,2,2,-1,-1,NULL),(335,1,3,2,-1,-1,NULL),(336,1,4,2,-1,-1,NULL),(337,1,5,2,-1,-1,NULL),(338,1,6,2,-1,-1,NULL),(339,1,1,3,-1,-1,NULL),(340,1,2,3,-1,-1,NULL),(341,1,3,3,-1,-1,NULL),(342,1,4,3,-1,-1,NULL),(343,1,5,3,-1,-1,NULL),(344,1,6,3,-1,-1,NULL),(345,1,1,4,-1,-1,NULL),(346,1,2,4,-1,-1,NULL),(347,1,3,4,-1,-1,NULL),(348,1,4,4,-1,-1,NULL),(349,1,5,4,-1,-1,NULL),(350,1,6,4,-1,-1,NULL),(351,1,1,5,-1,-1,NULL),(352,1,2,5,-1,-1,NULL),(353,1,3,5,-1,-1,NULL),(354,1,4,5,-1,-1,NULL),(355,1,5,5,-1,-1,NULL),(356,1,6,5,-1,-1,NULL),(357,1,1,6,-1,-1,NULL),(358,1,2,6,-1,-1,NULL),(359,1,3,6,-1,-1,NULL),(360,1,4,6,-1,-1,NULL),(361,1,5,6,-1,-1,NULL),(362,1,6,6,-1,-1,NULL),(363,1,1,1,0,0,16),(364,1,1,1,0,-1,60),(365,1,2,1,0,-1,60),(366,1,3,1,0,-1,17),(367,1,4,1,0,-1,18),(368,1,5,1,0,-1,18),(369,1,6,1,0,-1,20),(370,1,1,2,0,-1,60),(371,1,2,2,0,-1,60),(372,1,3,2,0,-1,17),(373,1,4,2,0,-1,18),(374,1,5,2,0,-1,20),(375,1,6,2,0,-1,20),(376,1,1,3,0,-1,15),(377,1,2,3,0,-1,15),(378,1,3,3,0,-1,15),(379,1,4,3,0,-1,55),(380,1,5,3,0,-1,20),(381,1,6,3,0,-1,20),(382,1,1,4,0,-1,57),(383,1,2,4,0,-1,16),(384,1,3,4,0,-1,15),(385,1,4,4,0,-1,20),(386,1,5,4,0,-1,20),(387,1,6,4,0,-1,20),(388,1,1,5,0,-1,16),(389,1,2,5,0,-1,16),(390,1,3,5,0,-1,22),(391,1,4,5,0,-1,15),(392,1,5,5,0,-1,55),(393,1,6,5,0,-1,20),(394,1,1,6,0,-1,16),(395,1,2,6,0,-1,16),(396,1,3,6,0,-1,15),(397,1,4,6,0,-1,15),(398,1,5,6,0,-1,20),(399,1,6,6,0,-1,20),(400,1,1,1,1,-1,20),(401,1,2,1,1,-1,18),(402,1,3,1,1,-1,18),(403,1,4,1,1,-1,57),(404,1,5,1,1,-1,17),(405,1,6,1,1,-1,17),(406,1,1,2,1,-1,20),(407,1,2,2,1,-1,20),(408,1,3,2,1,-1,18),(409,1,4,2,1,-1,18),(410,1,5,2,1,-1,18),(411,1,6,2,1,-1,17),(412,1,1,3,1,-1,55),(413,1,2,3,1,-1,20),(414,1,3,3,1,-1,56),(415,1,4,3,1,-1,16),(416,1,5,3,1,-1,16),(417,1,6,3,1,-1,16),(418,1,1,4,1,-1,20),(419,1,2,4,1,-1,20),(420,1,3,4,1,-1,55),(421,1,4,4,1,-1,20),(422,1,5,4,1,-1,16),(423,1,6,4,1,-1,16),(424,1,1,5,1,-1,20),(425,1,2,5,1,-1,20),(426,1,3,5,1,-1,20),(427,1,4,5,1,-1,19),(428,1,5,5,1,-1,19),(429,1,6,5,1,-1,19),(430,1,1,6,1,-1,20),(431,1,2,6,1,-1,55),(432,1,3,6,1,-1,20),(433,1,4,6,1,-1,20),(434,1,5,6,1,-1,19),(435,1,6,6,1,-1,19),(436,1,3,2,1,-1,20),(437,1,3,4,1,-1,56),(438,1,3,3,1,-1,20),(439,1,4,3,1,-1,20),(440,1,1,1,1,0,20),(441,1,2,1,1,0,20),(442,1,3,1,1,0,20),(443,1,4,1,1,0,20),(444,1,5,1,1,0,20),(445,1,6,1,1,0,55),(446,1,1,2,1,0,20),(447,1,2,2,1,0,55),(448,1,3,2,1,0,20),(449,1,4,2,1,0,20),(450,1,5,2,1,0,16),(451,1,6,2,1,0,60),(452,1,1,3,1,0,19),(453,1,2,3,1,0,15),(454,1,3,3,1,0,20),(455,1,4,3,1,0,55),(456,1,5,3,1,0,16),(457,1,6,3,1,0,58),(458,1,1,4,1,0,19),(459,1,2,4,1,0,15),(460,1,3,4,1,0,15),(461,1,4,4,1,0,16),(462,1,5,4,1,0,16),(463,1,6,4,1,0,60),(464,1,1,5,1,0,15),(465,1,2,5,1,0,16),(466,1,3,5,1,0,21),(467,1,4,5,1,0,17),(468,1,5,5,1,0,17),(469,1,6,5,1,0,60),(470,1,1,6,1,0,15),(471,1,2,6,1,0,16),(472,1,3,6,1,0,16),(473,1,4,6,1,0,17),(474,1,5,6,1,0,17),(475,1,6,6,1,0,60),(476,1,4,5,1,-1,20),(477,1,1,1,1,1,16),(478,1,2,1,1,1,15),(479,1,3,1,1,1,17),(480,1,4,1,1,1,17),(481,1,5,1,1,1,17),(482,1,6,1,1,1,60),(483,1,1,2,1,1,15),(484,1,2,2,1,1,15),(485,1,3,2,1,1,60),(486,1,4,2,1,1,60),(487,1,5,2,1,1,58),(488,1,6,2,1,1,60),(489,1,1,3,1,1,17),(490,1,2,3,1,1,17),(491,1,3,3,1,1,60),(492,1,4,3,1,1,60),(493,1,5,3,1,1,60),(494,1,6,3,1,1,60),(495,1,1,4,1,1,17),(496,1,2,4,1,1,17),(497,1,3,4,1,1,58),(498,1,4,4,1,1,59),(499,1,5,4,1,1,60),(500,1,6,4,1,1,58),(501,1,1,5,1,1,58),(502,1,2,5,1,1,17),(503,1,3,5,1,1,17),(504,1,4,5,1,1,60),(505,1,5,5,1,1,17),(506,1,6,5,1,1,17),(507,1,1,6,1,1,17),(508,1,2,6,1,1,58),(509,1,3,6,1,1,17),(510,1,4,6,1,1,17),(511,1,5,6,1,1,15),(512,1,6,6,1,1,58),(513,1,1,1,0,1,18),(514,1,2,1,0,1,18),(515,1,3,1,0,1,18),(516,1,4,1,0,1,17),(517,1,5,1,0,1,15),(518,1,6,1,0,1,15),(519,1,1,2,0,1,18),(520,1,2,2,0,1,18),(521,1,3,2,0,1,17),(522,1,4,2,0,1,17),(523,1,5,2,0,1,17),(524,1,6,2,0,1,15),(525,1,1,3,0,1,20),(526,1,2,3,0,1,58),(527,1,3,3,0,1,17),(528,1,4,3,0,1,60),(529,1,5,3,0,1,17),(530,1,6,3,0,1,17),(531,1,1,4,0,1,18),(532,1,2,4,0,1,18),(533,1,3,4,0,1,17),(534,1,4,4,0,1,60),(535,1,5,4,0,1,60),(536,1,6,4,0,1,60),(537,1,1,5,0,1,57),(538,1,2,5,0,1,57),(539,1,3,5,0,1,60),(540,1,4,5,0,1,60),(541,1,5,5,0,1,60),(542,1,6,5,0,1,60),(543,1,1,6,0,1,18),(544,1,2,6,0,1,18),(545,1,3,6,0,1,60),(546,1,4,6,0,1,60),(547,1,5,6,0,1,60),(548,1,6,6,0,1,58),(549,1,1,1,-1,1,17),(550,1,2,1,-1,1,17),(551,1,3,1,-1,1,18),(552,1,4,1,-1,1,18),(553,1,5,1,-1,1,18),(554,1,6,1,-1,1,18),(555,1,1,2,-1,1,18),(556,1,2,2,-1,1,18),(557,1,3,2,-1,1,18),(558,1,4,2,-1,1,18),(559,1,5,2,-1,1,20),(560,1,6,2,-1,1,18),(561,1,1,3,-1,1,18),(562,1,2,3,-1,1,57),(563,1,3,3,-1,1,18),(564,1,4,3,-1,1,20),(565,1,5,3,-1,1,20),(566,1,6,3,-1,1,20),(567,1,1,4,-1,1,57),(568,1,2,4,-1,1,18),(569,1,3,4,-1,1,18),(570,1,4,4,-1,1,18),(571,1,5,4,-1,1,55),(572,1,6,4,-1,1,18),(573,1,1,5,-1,1,18),(574,1,2,5,-1,1,18),(575,1,3,5,-1,1,57),(576,1,4,5,-1,1,18),(577,1,5,5,-1,1,18),(578,1,6,5,-1,1,18),(579,1,1,6,-1,1,18),(580,1,2,6,-1,1,18),(581,1,3,6,-1,1,18),(582,1,4,6,-1,1,18),(583,1,5,6,-1,1,18),(584,1,6,6,-1,1,18),(585,1,1,1,-1,0,60),(586,1,2,1,-1,0,16),(587,1,3,1,-1,0,15),(588,1,4,1,-1,0,16),(589,1,5,1,-1,0,16),(590,1,6,1,-1,0,16),(591,1,1,2,-1,0,60),(592,1,2,2,-1,0,58),(593,1,3,2,-1,0,15),(594,1,4,2,-1,0,16),(595,1,5,2,-1,0,16),(596,1,6,2,-1,0,15),(597,1,1,3,-1,0,60),(598,1,2,3,-1,0,60),(599,1,3,3,-1,0,17),(600,1,4,3,-1,0,15),(601,1,5,3,-1,0,20),(602,1,6,3,-1,0,15),(603,1,1,4,-1,0,60),(604,1,2,4,-1,0,60),(605,1,3,4,-1,0,17),(606,1,4,4,-1,0,55),(607,1,5,4,-1,0,20),(608,1,6,4,-1,0,15),(609,1,1,5,-1,0,17),(610,1,2,5,-1,0,17),(611,1,3,5,-1,0,17),(612,1,4,5,-1,0,20),(613,1,5,5,-1,0,20),(614,1,6,5,-1,0,19),(615,1,1,6,-1,0,17),(616,1,2,6,-1,0,17),(617,1,3,6,-1,0,17),(618,1,4,6,-1,0,18),(619,1,5,6,-1,0,18),(620,1,6,6,-1,0,19),(621,1,1,1,-1,-1,16),(622,1,2,1,-1,-1,16),(623,1,3,1,-1,-1,16),(624,1,4,1,-1,-1,15),(625,1,5,1,-1,-1,17),(626,1,6,1,-1,-1,60),(627,1,1,2,-1,-1,16),(628,1,2,2,-1,-1,16),(629,1,3,2,-1,-1,16),(630,1,4,2,-1,-1,15),(631,1,5,2,-1,-1,17),(632,1,6,2,-1,-1,60),(633,1,1,3,-1,-1,16),(634,1,2,3,-1,-1,16),(635,1,3,3,-1,-1,16),(636,1,4,3,-1,-1,15),(637,1,5,3,-1,-1,15),(638,1,6,3,-1,-1,17),(639,1,1,4,-1,-1,16),(640,1,2,4,-1,-1,16),(641,1,3,4,-1,-1,16),(642,1,4,4,-1,-1,16),(643,1,5,4,-1,-1,15),(644,1,6,4,-1,-1,15),(645,1,1,5,-1,-1,16),(646,1,2,5,-1,-1,16),(647,1,3,5,-1,-1,16),(648,1,4,5,-1,-1,16),(649,1,5,5,-1,-1,15),(650,1,6,5,-1,-1,15),(651,1,1,6,-1,-1,17),(652,1,2,6,-1,-1,16),(653,1,3,6,-1,-1,16),(654,1,4,6,-1,-1,16),(655,1,5,6,-1,-1,16),(656,1,6,6,-1,-1,15),(657,1,2,2,-1,-1,55),(658,1,3,3,-1,-1,57),(659,1,1,5,-1,-1,15),(660,1,2,5,-1,-1,15),(661,1,2,6,-1,-1,15),(662,1,3,6,-1,-1,15),(664,1,1,1,-2,1,NULL),(665,1,2,1,-2,1,NULL),(666,1,3,1,-2,1,NULL),(667,1,4,1,-2,1,NULL),(668,1,5,1,-2,1,NULL),(669,1,6,1,-2,1,NULL),(670,1,1,2,-2,1,NULL),(671,1,2,2,-2,1,NULL),(672,1,3,2,-2,1,NULL),(673,1,4,2,-2,1,NULL),(674,1,5,2,-2,1,NULL),(675,1,6,2,-2,1,NULL),(676,1,1,3,-2,1,NULL),(677,1,2,3,-2,1,NULL),(678,1,3,3,-2,1,NULL),(679,1,4,3,-2,1,NULL),(680,1,5,3,-2,1,NULL),(681,1,6,3,-2,1,NULL),(682,1,1,4,-2,1,NULL),(683,1,2,4,-2,1,NULL),(684,1,3,4,-2,1,NULL),(685,1,4,4,-2,1,NULL),(686,1,5,4,-2,1,NULL),(687,1,6,4,-2,1,NULL),(688,1,1,5,-2,1,NULL),(689,1,2,5,-2,1,NULL),(690,1,3,5,-2,1,NULL),(691,1,4,5,-2,1,NULL),(692,1,5,5,-2,1,NULL),(693,1,6,5,-2,1,NULL),(694,1,1,6,-2,1,NULL),(695,1,2,6,-2,1,NULL),(696,1,3,6,-2,1,NULL),(697,1,4,6,-2,1,NULL),(698,1,5,6,-2,1,NULL),(699,1,6,6,-2,1,NULL),(700,1,1,1,-2,1,75),(701,1,2,1,-2,1,75),(702,1,3,1,-2,1,75),(703,1,4,1,-2,1,75),(704,1,5,1,-2,1,75),(705,1,6,1,-2,1,18),(706,1,1,2,-2,1,75),(707,1,2,2,-2,1,75),(708,1,3,2,-2,1,75),(709,1,4,2,-2,1,18),(710,1,5,2,-2,1,18),(711,1,6,2,-2,1,18),(712,1,1,3,-2,1,75),(713,1,2,3,-2,1,74),(714,1,3,3,-2,1,75),(715,1,4,3,-2,1,57),(716,1,5,3,-2,1,20),(717,1,6,3,-2,1,18),(718,1,1,4,-2,1,75),(719,1,2,4,-2,1,75),(720,1,3,4,-2,1,75),(721,1,4,4,-2,1,75),(722,1,5,4,-2,1,18),(723,1,6,4,-2,1,18),(724,1,1,5,-2,1,75),(725,1,2,5,-2,1,75),(726,1,3,5,-2,1,18),(727,1,4,5,-2,1,75),(728,1,5,5,-2,1,18),(729,1,6,5,-2,1,18),(730,1,1,6,-2,1,75),(731,1,2,6,-2,1,75),(732,1,3,6,-2,1,75),(733,1,4,6,-2,1,75),(734,1,5,6,-2,1,75),(735,1,6,6,-2,1,75),(736,1,5,3,-1,1,72),(737,1,5,5,0,1,71),(738,1,5,2,1,-1,69),(739,1,3,4,-1,-1,70),(740,1,2,3,-1,0,73),(741,1,4,3,0,0,67);

UNLOCK TABLES;

/*Table structure for table `worlds` */

DROP TABLE IF EXISTS `worlds`;

CREATE TABLE `worlds` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the world',
  `name` varchar(32) NOT NULL COMMENT 'Name of the world',
  `minbigx` int(2) NOT NULL COMMENT 'lowest bigxpos coords',
  `minbigy` int(2) NOT NULL COMMENT 'lowest bigypos coords',
  `maxbigx` int(2) NOT NULL COMMENT 'widest the world map is (in map level squares)',
  `maxbigy` int(2) NOT NULL COMMENT 'Tallest the world can be, in level map squares',
  `maxx` int(2) NOT NULL COMMENT 'The widest each of the bigsquares can be',
  `maxy` int(2) NOT NULL COMMENT 'The talest each of the big squares can be',
  `text` varchar(1000) default NULL COMMENT 'Text. A welcome or description of the world, in 1000 characters or less.',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `worlds` */

LOCK TABLES `worlds` WRITE;

insert  into `worlds`(`id`,`name`,`minbigx`,`minbigy`,`maxbigx`,`maxbigy`,`maxx`,`maxy`,`text`) values (1,'Midguard',-4,-4,4,4,6,6,'Land of the living mortals');

UNLOCK TABLES;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*
SQLyog Community Edition- MySQL GUI v6.16
MySQL - 5.0.27-community : Database - ascii_game_seed_build
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

create database if not exists `ascii_game_seed_build`;

USE `ascii_game_seed_build`;

/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

/*Table structure for table `attack_spells` */

DROP TABLE IF EXISTS `attack_spells`;

CREATE TABLE `attack_spells` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the attack spell',
  `name` varchar(32) NOT NULL COMMENT 'Name of the spell',
  `description` varchar(256) default NULL COMMENT 'Description of the spell',
  `min_level` int(5) NOT NULL COMMENT 'minimum level required to be able to cast the spell',
  `min_dam` int(10) NOT NULL COMMENT 'minimum damage caused by chance from the spell',
  `max_dam` int(10) NOT NULL COMMENT 'maximum damage caused by chance from the spell',
  `dam_from_mag` int(10) NOT NULL COMMENT 'Additional damage caused by number of mag points',
  `dam_from_int` int(10) NOT NULL COMMENT 'Additional damage caused by number of int points',
  `mp_cost` int(10) NOT NULL COMMENT 'mp cost of the spell',
  `hp_cost` int(10) NOT NULL COMMENT 'hp cost of the spell',
  `splash` tinyint(1) NOT NULL COMMENT 'If this spell can naturally target multiple enemies without attenuating. If false, more than one can be targeted, but at a heavy penalty, and damage will only be dealt to one entity in each group (pc, npc creature)',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`),
  KEY `min_level` (`min_level`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `attack_spells` */

LOCK TABLES `attack_spells` WRITE;

insert  into `attack_spells`(`id`,`name`,`description`,`min_level`,`min_dam`,`max_dam`,`dam_from_mag`,`dam_from_int`,`mp_cost`,`hp_cost`,`splash`) values (2,'Burning Pants','Set the enemy\'s pants on fire',10,100,200,1,1,30,0,0),(3,'Magic Missile','To fight the darkness',1,1,15,1,1,3,0,0),(5,'Blood Razor','Razor made from blood.',5,10,20,3,0,5,10,0),(6,'Shockwave','Sonic ripples from the fingertips',7,2,20,2,1,15,0,1),(7,'Blood Storm','torrents of blood strike the enemies',20,20,30,2,1,40,30,1),(8,'Burning Atmosphere','All air ignites',40,40,124,3,3,100,0,1),(9,'Lightning','zap zap zap',15,10,30,4,2,35,0,0),(10,'Death Beam','a beam of deaths',60,500,1000,1,5,350,50,0);

UNLOCK TABLES;

/*Table structure for table `base_items` */

DROP TABLE IF EXISTS `base_items`;

CREATE TABLE `base_items` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the base item',
  `name` varchar(32) NOT NULL COMMENT 'Name of the base item',
  `description` varchar(256) default NULL COMMENT 'description of the item',
  `equip_loc` int(3) NOT NULL COMMENT 'where this item can be equipped. Revisit with how equipable locations are represented',
  `dfn_mod` int(10) NOT NULL COMMENT 'base defense modification',
  `dam_mod` int(10) NOT NULL COMMENT 'base damage modification',
  `price` int(20) NOT NULL COMMENT 'price of the base item.',
  `race_body_type` int(3) default NULL COMMENT 'If null, this can be used by any race. Otherwise, it is restricted to races with this body type.',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`),
  KEY `price` (`price`),
  KEY `race_body_type` (`race_body_type`),
  KEY `price_race_body_type` (`price`,`race_body_type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `base_items` */

LOCK TABLES `base_items` WRITE;

insert  into `base_items`(`id`,`name`,`description`,`equip_loc`,`dfn_mod`,`dam_mod`,`price`,`race_body_type`) values (1,'knife','regular knife',8,0,3,10,NULL),(2,'boots','boots that cover the feet',2,3,0,10,1),(3,'helmet','goes on your head',4,5,0,20,1),(4,'axe','single headed, cuts stuf',1,0,5,15,NULL),(5,'Greaves','Armor for the shins',9,3,0,10,1),(8,'Sword','Along, sharp piece of meta',1,0,10,60,1),(9,'Short Sword','Sword shorter than normal',1,0,6,40,1),(10,'buckler','small hand shield',1,2,1,7,NULL),(11,'shield','Protection',1,8,2,20,NULL),(12,'cape','keeps you warm',7,2,0,9,NULL),(13,'bracers','lower arm protection',8,3,0,5,NULL),(14,'gorget','neck armor',6,2,0,10,1),(15,'t-sheath','tentacle covering',20,5,5,15,3),(16,'flipper','armor for fins',21,3,3,10,3),(17,'metal jaw','a mandible weapon',30,0,10,50,2),(18,'scaled armor','composed of hard scales',31,10,0,35,2),(19,'plate mail','armor for people',3,15,0,75,1),(20,'chitin armor','made from especially thick protien walls',32,20,0,100,2),(21,'nails','hardened points added to the tips of claws',90,0,5,15,2),(22,'rock','a stone can be used as a weapon',1,0,1,2,NULL),(23,'razor kelp','offensive weapon for sea creatures',20,0,9,40,3);

UNLOCK TABLES;

/*Table structure for table `blacksmith_skills` */

DROP TABLE IF EXISTS `blacksmith_skills`;

CREATE TABLE `blacksmith_skills` (
  `id` int(11) NOT NULL auto_increment,
  `base_item_id` int(11) NOT NULL COMMENT 'base item NPC can make at this level with this min sales',
  `min_sales` int(20) NOT NULL COMMENT 'minimum sales for this level and base item',
  `min_mod` int(10) NOT NULL COMMENT 'minimum modification for any statt',
  `max_mod` int(10) NOT NULL COMMENT 'maximum stat modification possible fo a stat.',
  PRIMARY KEY  (`id`),
  KEY `base_item_id` (`base_item_id`),
  KEY `min_sales` (`min_sales`),
  CONSTRAINT `FK_base_items_blacksmith_skills` FOREIGN KEY (`base_item_id`) REFERENCES `base_items` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `blacksmith_skills` */

LOCK TABLES `blacksmith_skills` WRITE;

insert  into `blacksmith_skills`(`id`,`base_item_id`,`min_sales`,`min_mod`,`max_mod`) values (6,1,0,1,3),(7,2,0,1,3),(8,10,30,1,7),(9,3,30,1,4),(10,4,50,1,7),(11,5,10,1,4),(12,8,100,1,5),(13,9,50,1,6),(14,11,100,1,7),(15,12,150,1,5),(16,13,150,1,8),(17,14,200,3,7),(18,15,100,1,6),(19,16,125,1,6),(20,17,125,2,6),(21,18,75,1,6),(22,19,75,1,3),(23,20,75,1,5),(24,21,150,2,7),(25,23,200,3,8),(26,1,1000,5,15),(27,2,1000,5,15),(28,3,1000,5,15),(29,4,1000,5,15),(30,5,1000,5,15),(31,8,1000,5,15),(32,9,1000,5,15),(33,10,1000,5,15),(34,11,1000,5,15),(35,12,1000,5,15),(36,13,1000,5,15),(37,14,1000,5,15),(38,15,1000,5,15),(39,16,1000,5,15),(40,17,1000,5,15),(41,18,1000,5,15),(42,19,1000,5,15),(43,20,1000,5,15),(44,21,1000,5,15),(45,22,1000,5,15),(46,23,1000,5,15),(47,1,5000,20,35),(48,2,5000,20,35),(49,3,5000,20,35),(50,4,5000,20,35),(51,5,5000,20,35),(52,8,5000,20,35),(53,9,5000,20,35),(54,10,5000,20,35),(55,11,5000,20,35),(56,12,5000,20,35),(57,13,5000,20,35),(58,14,5000,20,35),(59,15,5000,20,35),(60,16,5000,20,35),(61,17,5000,20,35),(62,18,5000,20,35),(63,19,5000,20,35),(64,20,5000,20,35),(65,21,5000,20,35),(66,22,5000,20,35),(67,23,5000,20,35),(68,1,100000,30,40),(69,2,100000,30,40),(70,3,100000,30,40),(71,4,100000,30,40),(72,5,100000,30,40),(73,8,100000,30,40),(74,9,100000,30,40),(75,10,100000,30,40),(76,11,100000,30,40),(77,12,100000,30,40),(78,13,100000,30,40),(79,14,100000,30,40),(80,15,100000,30,40),(81,16,100000,30,40),(82,17,100000,30,40),(83,18,100000,30,40),(84,19,100000,30,40),(85,20,100000,30,40),(86,21,100000,30,40),(87,22,100000,30,40),(88,23,100000,30,40),(89,1,500000,50,60),(90,2,500000,50,60),(91,3,500000,50,60),(92,4,500000,50,60),(93,5,500000,50,60),(94,8,500000,50,60),(95,9,500000,50,60),(96,10,500000,50,60),(97,11,500000,50,60),(98,12,500000,50,60),(99,13,500000,50,60),(100,14,500000,50,60),(101,15,500000,50,60),(102,16,500000,50,60),(103,17,500000,50,60),(104,18,500000,50,60),(105,19,500000,50,60),(106,20,500000,50,60),(107,21,500000,50,60),(108,22,500000,50,60),(109,23,500000,50,60),(110,1,2500000,75,100),(111,2,2500000,75,100),(112,3,2500000,75,100),(113,4,2500000,75,100),(114,5,2500000,75,100),(115,8,2500000,75,100),(116,9,2500000,75,100),(117,10,2500000,75,100),(118,11,2500000,75,100),(119,12,2500000,75,100),(120,13,2500000,75,100),(121,14,2500000,75,100),(122,15,2500000,75,100),(123,16,2500000,75,100),(124,17,2500000,75,100),(125,18,2500000,75,100),(126,19,2500000,75,100),(127,20,2500000,75,100),(128,21,2500000,75,100),(129,22,2500000,75,100),(130,23,2500000,75,100),(131,1,12500000,50,150),(132,2,12500000,50,150),(133,3,12500000,50,150),(134,4,12500000,50,150),(135,5,12500000,50,150),(136,8,12500000,50,150),(137,9,12500000,50,150),(138,10,12500000,50,150),(139,11,12500000,50,150),(140,12,12500000,50,150),(141,13,12500000,50,150),(142,14,12500000,50,150),(143,15,12500000,50,150),(144,16,12500000,50,150),(145,17,12500000,50,150),(146,18,12500000,50,150),(147,19,12500000,50,150),(148,20,12500000,50,150),(149,21,12500000,50,150),(150,22,12500000,50,150),(151,23,12500000,50,150),(152,1,62500000,25,300),(153,2,62500000,25,300),(154,3,62500000,25,300),(155,4,62500000,25,300),(156,5,62500000,25,300),(157,8,62500000,25,300),(158,9,62500000,25,300),(159,10,62500000,25,300),(160,11,62500000,25,300),(161,12,62500000,25,300),(162,13,62500000,25,300),(163,14,62500000,25,300),(164,15,62500000,25,300),(165,16,62500000,25,300),(166,17,62500000,25,300),(167,18,62500000,25,300),(168,19,62500000,25,300),(169,20,62500000,25,300),(170,21,62500000,25,300),(171,22,62500000,25,300),(172,23,62500000,25,300),(173,1,200000000,45,600),(174,2,200000000,45,600),(175,3,200000000,45,600),(176,4,200000000,45,600),(177,5,200000000,45,600),(178,8,200000000,45,600),(179,9,200000000,45,600),(180,10,200000000,45,600),(181,11,200000000,45,600),(182,12,200000000,45,600),(183,13,200000000,45,600),(184,14,200000000,45,600),(185,15,200000000,45,600),(186,16,200000000,45,600),(187,17,200000000,45,600),(188,18,200000000,45,600),(189,19,200000000,45,600),(190,20,200000000,45,600),(191,21,200000000,45,600),(192,22,200000000,45,600),(193,23,200000000,45,600);

UNLOCK TABLES;

/*Table structure for table `c_class_levels` */

DROP TABLE IF EXISTS `c_class_levels`;

CREATE TABLE `c_class_levels` (
  `id` int(11) NOT NULL auto_increment,
  `c_class_id` int(11) NOT NULL COMMENT 'c_class ID',
  `level` int(5) NOT NULL,
  `min_xp` int(10) NOT NULL,
  `dam` float(10,1) NOT NULL default '0.0' COMMENT 'damage bonus',
  `dfn` float(10,1) NOT NULL default '0.0' COMMENT 'defense bonus',
  `str` float(10,1) NOT NULL default '0.0' COMMENT 'strength bonus',
  `dex` float(10,1) NOT NULL default '0.0' COMMENT 'dexterity bonus',
  `mag` float(10,1) NOT NULL default '0.0' COMMENT 'magic bonus',
  `int` float(10,1) NOT NULL default '0.0' COMMENT 'intelligence bonus',
  `con` float(10,1) NOT NULL default '0.0' COMMENT 'constitution bonus',
  `freepts` float(2,1) NOT NULL default '0.0' COMMENT 'Bonus stat points player may redistribute freely.',
  PRIMARY KEY  (`id`,`c_class_id`,`level`),
  KEY `c_class_id` (`c_class_id`),
  KEY `level` (`level`),
  KEY `c_class_min_xp` (`c_class_id`,`min_xp`),
  CONSTRAINT `FK_c_classes_c_class_levels` FOREIGN KEY (`c_class_id`) REFERENCES `c_classes` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `c_class_levels` */

LOCK TABLES `c_class_levels` WRITE;

insert  into `c_class_levels`(`id`,`c_class_id`,`level`,`min_xp`,`dam`,`dfn`,`str`,`dex`,`mag`,`int`,`con`,`freepts`) values (5431,1,0,0,10.0,10.0,15.0,5.0,5.0,5.0,15.0,0.0),(5432,1,1,900,11.0,11.0,16.5,5.5,5.5,5.5,16.5,0.0),(5433,1,2,1864,12.0,12.0,18.0,6.0,6.0,6.0,18.0,0.0),(5434,1,3,2972,13.0,13.0,19.5,6.5,6.5,6.5,19.5,0.0),(5435,1,4,4144,14.0,14.0,21.0,7.0,7.0,7.0,21.0,0.0),(5436,1,5,5460,15.0,15.0,22.5,7.5,7.5,7.5,22.5,0.0),(5437,1,6,6840,16.0,16.0,24.0,8.0,8.0,8.0,24.0,0.0),(5438,1,7,8364,17.0,17.0,25.5,8.5,8.5,8.5,25.5,0.0),(5439,1,8,9952,18.0,18.0,27.0,9.0,9.0,9.0,27.0,0.0),(5440,1,9,11748,19.0,19.0,28.5,9.5,9.5,9.5,28.5,0.0),(5441,1,10,13736,20.0,20.0,30.0,10.0,10.0,10.0,30.0,0.0),(5442,1,11,16316,21.0,21.0,31.5,10.5,10.5,10.5,31.5,0.0),(5443,1,12,19280,22.0,22.0,33.0,11.0,11.0,11.0,33.0,0.0),(5444,1,13,23220,23.0,23.0,34.5,11.5,11.5,11.5,34.5,0.0),(5445,1,14,27736,24.0,24.0,36.0,12.0,12.0,12.0,36.0,0.0),(5446,1,15,33612,25.0,25.0,37.5,12.5,12.5,12.5,37.5,0.0),(5447,1,16,40256,26.0,26.0,39.0,13.0,13.0,13.0,39.0,0.0),(5448,1,17,48644,27.0,27.0,40.5,13.5,13.5,13.5,40.5,0.0),(5449,1,18,58056,28.0,28.0,42.0,14.0,14.0,14.0,42.0,0.0),(5450,1,19,69724,29.0,29.0,43.5,14.5,14.5,14.5,43.5,0.0),(5451,1,20,82736,31.0,31.0,46.0,16.0,16.0,16.0,46.0,0.0),(5452,1,21,100228,33.0,33.0,48.5,17.5,17.5,17.5,48.5,0.0),(5453,1,22,121480,35.0,35.0,51.0,19.0,19.0,19.0,51.0,0.0),(5454,1,23,148684,37.0,37.0,53.5,20.5,20.5,20.5,53.5,0.0),(5455,1,24,180800,39.0,39.0,56.0,22.0,22.0,22.0,56.0,0.0),(5456,1,25,220340,41.0,41.0,58.5,23.5,23.5,23.5,58.5,0.0),(5457,1,26,265944,43.0,43.0,61.0,25.0,25.0,25.0,61.0,0.0),(5458,1,27,320444,45.0,45.0,63.5,26.5,26.5,26.5,63.5,0.0),(5459,1,28,382160,47.0,47.0,66.0,28.0,28.0,28.0,66.0,0.0),(5460,1,29,454532,49.0,49.0,68.5,29.5,29.5,29.5,68.5,0.0),(5461,1,30,535560,51.0,51.0,71.0,31.0,31.0,31.0,71.0,0.0),(5462,1,31,629292,53.0,53.0,73.5,32.5,32.5,32.5,73.5,0.0),(5463,1,32,733120,55.0,55.0,76.0,34.0,34.0,34.0,76.0,0.0),(5464,1,33,851700,57.0,57.0,78.5,35.5,35.5,35.5,78.5,0.0),(5465,1,34,981816,59.0,59.0,81.0,37.0,37.0,37.0,81.0,0.0),(5466,1,35,1128732,61.0,61.0,83.5,38.5,38.5,38.5,83.5,0.0),(5467,1,36,1288624,63.0,63.0,86.0,40.0,40.0,40.0,86.0,0.0),(5468,1,37,1467364,65.0,65.0,88.5,41.5,41.5,41.5,88.5,0.0),(5469,1,38,1660520,67.0,67.0,91.0,43.0,43.0,43.0,91.0,0.0),(5470,1,39,1874572,69.0,69.0,93.5,44.5,44.5,44.5,93.5,0.0),(5471,1,40,2104480,72.0,72.0,97.0,47.0,47.0,47.0,97.0,0.0),(5472,1,41,2366948,75.0,75.0,100.5,49.5,49.5,49.5,100.5,0.0),(5473,1,42,2657256,78.0,78.0,104.0,52.0,52.0,52.0,104.0,0.0),(5474,1,43,2984508,81.0,81.0,107.5,54.5,54.5,54.5,107.5,0.0),(5475,1,44,3343056,84.0,84.0,111.0,57.0,57.0,57.0,111.0,0.0),(5476,1,45,3742932,87.0,87.0,114.5,59.5,59.5,59.5,114.5,0.0),(5477,1,46,4177560,90.0,90.0,118.0,62.0,62.0,62.0,118.0,0.0),(5478,1,47,4657900,93.0,93.0,121.5,64.5,64.5,64.5,121.5,0.0),(5479,1,48,5176448,96.0,96.0,125.0,67.0,67.0,67.0,125.0,0.0),(5480,1,49,5745092,99.0,99.0,128.5,69.5,69.5,69.5,128.5,0.0),(5481,1,50,6355400,102.0,102.0,132.0,72.0,72.0,72.0,132.0,0.0),(5482,1,51,7020188,105.0,105.0,135.5,74.5,74.5,74.5,135.5,0.0),(5483,1,52,7730096,108.0,108.0,139.0,77.0,77.0,77.0,139.0,0.0),(5484,1,53,8498868,111.0,111.0,142.5,79.5,79.5,79.5,142.5,0.0),(5485,1,54,9316216,114.0,114.0,146.0,82.0,82.0,82.0,146.0,0.0),(5486,1,55,10196812,117.0,117.0,149.5,84.5,84.5,84.5,149.5,0.0),(5487,1,56,11129440,120.0,120.0,153.0,87.0,87.0,87.0,153.0,0.0),(5488,1,57,12129700,123.0,123.0,156.5,89.5,89.5,89.5,156.5,0.0),(5489,1,58,13185448,126.0,126.0,160.0,92.0,92.0,92.0,160.0,0.0),(5490,1,59,14313212,129.0,129.0,163.5,94.5,94.5,94.5,163.5,0.0),(5491,1,60,15499920,133.0,133.0,168.0,98.0,98.0,98.0,168.0,0.0),(5492,1,61,16785988,137.0,137.0,172.5,101.5,101.5,101.5,172.5,0.0),(5493,1,62,18158792,141.0,141.0,177.0,105.0,105.0,105.0,177.0,0.0),(5494,1,63,19638572,145.0,145.0,181.5,108.5,108.5,108.5,181.5,0.0),(5495,1,64,21211456,149.0,149.0,186.0,112.0,112.0,112.0,186.0,0.0),(5496,1,65,22898932,153.0,153.0,190.5,115.5,115.5,115.5,190.5,0.0),(5497,1,66,24685880,157.0,157.0,195.0,119.0,119.0,119.0,195.0,0.0),(5498,1,67,26595036,161.0,161.0,199.5,122.5,122.5,122.5,199.5,0.0),(5499,1,68,28610032,165.0,165.0,204.0,126.0,126.0,126.0,204.0,0.0),(5500,1,69,30754852,169.0,169.0,208.5,129.5,129.5,129.5,208.5,0.0),(5501,1,70,33011880,173.0,173.0,213.0,133.0,133.0,133.0,213.0,0.0),(5502,1,71,35406348,177.0,177.0,217.5,136.5,136.5,136.5,217.5,0.0),(5503,1,72,37919392,181.0,181.0,222.0,140.0,140.0,140.0,222.0,0.0),(5504,1,73,40577492,185.0,185.0,226.5,143.5,143.5,143.5,226.5,0.0),(5505,1,74,43360536,189.0,189.0,231.0,147.0,147.0,147.0,231.0,0.0),(5506,2,0,0,20.0,5.0,5.0,5.0,0.0,0.0,10.0,5.0),(5507,2,1,680,22.0,5.5,5.5,5.5,0.0,0.0,11.0,5.0),(5508,2,2,1408,24.0,6.0,6.0,6.0,0.0,0.0,12.0,5.0),(5509,2,3,2232,26.0,6.5,6.5,6.5,0.0,0.0,13.0,5.0),(5510,2,4,3104,28.0,7.0,7.0,7.0,0.0,0.0,14.0,5.0),(5511,2,5,4168,30.0,7.5,7.5,7.5,0.0,0.0,15.0,5.0),(5512,2,6,5504,32.0,8.0,8.0,8.0,0.0,0.0,16.0,5.0),(5513,2,7,7288,34.0,8.5,8.5,8.5,0.0,0.0,17.0,5.0),(5514,2,8,9600,36.0,9.0,9.0,9.0,0.0,0.0,18.0,5.0),(5515,2,9,12616,38.0,9.5,9.5,9.5,0.0,0.0,19.0,5.0),(5516,2,10,16416,40.0,10.0,10.0,10.0,0.0,0.0,20.0,9.9),(5517,2,11,21256,42.0,10.5,10.5,10.5,0.0,0.0,21.0,9.9),(5518,2,12,27136,44.0,11.0,11.0,11.0,0.0,0.0,22.0,9.9),(5519,2,13,34232,46.0,11.5,11.5,11.5,0.0,0.0,23.0,9.9),(5520,2,14,42624,48.0,12.0,12.0,12.0,0.0,0.0,24.0,9.9),(5521,2,15,52488,50.0,12.5,12.5,12.5,0.0,0.0,25.0,9.9),(5522,2,16,63904,52.0,13.0,13.0,13.0,0.0,0.0,26.0,9.9),(5523,2,17,77048,54.0,13.5,13.5,13.5,0.0,0.0,27.0,9.9),(5524,2,18,92032,56.0,14.0,14.0,14.0,0.0,0.0,28.0,9.9),(5525,2,19,109064,58.0,14.5,14.5,14.5,0.0,0.0,29.0,9.9),(5526,2,20,128256,61.0,16.0,16.0,16.0,1.0,1.0,31.0,9.9),(5527,2,21,151192,64.0,17.5,17.5,17.5,2.0,2.0,33.0,9.9),(5528,2,22,178240,67.0,19.0,19.0,19.0,3.0,3.0,35.0,9.9),(5529,2,23,209872,70.0,20.5,20.5,20.5,4.0,4.0,37.0,9.9),(5530,2,24,246464,73.0,22.0,22.0,22.0,5.0,5.0,39.0,9.9),(5531,2,25,288480,76.0,23.5,23.5,23.5,6.0,6.0,41.0,9.9),(5532,2,26,336288,79.0,25.0,25.0,25.0,7.0,7.0,43.0,9.9),(5533,2,27,390352,82.0,26.5,26.5,26.5,8.0,8.0,45.0,9.9),(5534,2,28,451040,85.0,28.0,28.0,28.0,9.0,9.0,47.0,9.9),(5535,2,29,519104,88.0,29.5,29.5,29.5,10.0,10.0,49.0,9.9),(5536,2,30,594912,91.0,31.0,31.0,31.0,11.0,11.0,51.0,9.9),(5537,2,31,679504,94.0,32.5,32.5,32.5,12.0,12.0,53.0,9.9),(5538,2,32,772960,97.0,34.0,34.0,34.0,13.0,13.0,55.0,9.9),(5539,2,33,876608,100.0,35.5,35.5,35.5,14.0,14.0,57.0,9.9),(5540,2,34,990240,103.0,37.0,37.0,37.0,15.0,15.0,59.0,9.9),(5541,2,35,1115472,106.0,38.5,38.5,38.5,16.0,16.0,61.0,9.9),(5542,2,36,1251808,109.0,40.0,40.0,40.0,17.0,17.0,63.0,9.9),(5543,2,37,1401152,112.0,41.5,41.5,41.5,18.0,18.0,65.0,9.9),(5544,2,38,1562720,115.0,43.0,43.0,43.0,19.0,19.0,67.0,9.9),(5545,2,39,1738704,118.0,44.5,44.5,44.5,20.0,20.0,69.0,9.9),(5546,2,40,1928032,122.0,47.0,47.0,47.0,22.0,22.0,72.0,9.9),(5547,2,41,2139856,126.0,49.5,49.5,49.5,24.0,24.0,75.0,9.9),(5548,2,42,2373488,130.0,52.0,52.0,52.0,26.0,26.0,78.0,9.9),(5549,2,43,2632656,134.0,54.5,54.5,54.5,28.0,28.0,81.0,9.9),(5550,2,44,2916384,138.0,57.0,57.0,57.0,30.0,30.0,84.0,9.9),(5551,2,45,3229136,142.0,59.5,59.5,59.5,32.0,32.0,87.0,9.9),(5552,2,46,3569520,146.0,62.0,62.0,62.0,34.0,34.0,90.0,9.9),(5553,2,47,3942480,150.0,64.5,64.5,64.5,36.0,36.0,93.0,9.9),(5554,2,48,4346144,154.0,67.0,67.0,67.0,38.0,38.0,96.0,9.9),(5555,2,49,4785936,158.0,69.5,69.5,69.5,40.0,40.0,99.0,9.9),(5556,2,50,5259504,162.0,72.0,72.0,72.0,42.0,42.0,102.0,9.9),(5557,2,51,5772752,166.0,74.5,74.5,74.5,44.0,44.0,105.0,9.9),(5558,2,52,6322848,170.0,77.0,77.0,77.0,46.0,46.0,108.0,9.9),(5559,2,53,6916176,174.0,79.5,79.5,79.5,48.0,48.0,111.0,9.9),(5560,2,54,7549424,178.0,82.0,82.0,82.0,50.0,50.0,114.0,9.9),(5561,2,55,8229456,182.0,84.5,84.5,84.5,52.0,52.0,117.0,9.9),(5562,2,56,8952480,186.0,87.0,87.0,87.0,54.0,54.0,120.0,9.9),(5563,2,57,9725840,190.0,89.5,89.5,89.5,56.0,56.0,123.0,9.9),(5564,2,58,10545264,194.0,92.0,92.0,92.0,58.0,58.0,126.0,9.9),(5565,2,59,11418576,198.0,94.5,94.5,94.5,60.0,60.0,129.0,9.9),(5566,2,60,12341024,203.0,98.0,98.0,98.0,63.0,63.0,133.0,9.9),(5567,2,61,13339392,208.0,101.5,101.5,101.5,66.0,66.0,137.0,9.9),(5568,2,62,14409760,213.0,105.0,105.0,105.0,69.0,69.0,141.0,9.9),(5569,2,63,15562512,218.0,108.5,108.5,108.5,72.0,72.0,145.0,9.9),(5570,2,64,16793056,223.0,112.0,112.0,112.0,75.0,75.0,149.0,9.9),(5571,2,65,18112448,228.0,115.5,115.5,115.5,78.0,78.0,153.0,9.9),(5572,2,66,19515424,233.0,119.0,119.0,119.0,81.0,81.0,157.0,9.9),(5573,2,67,21013712,238.0,122.5,122.5,122.5,84.0,84.0,161.0,9.9),(5574,2,68,22601376,243.0,126.0,126.0,126.0,87.0,87.0,165.0,9.9),(5575,2,69,24290816,248.0,129.5,129.5,129.5,90.0,90.0,169.0,9.9),(5576,2,70,26075424,253.0,133.0,133.0,133.0,93.0,93.0,173.0,9.9),(5577,2,71,27968272,258.0,136.5,136.5,136.5,96.0,96.0,177.0,9.9),(5578,2,72,29962080,263.0,140.0,140.0,140.0,99.0,99.0,181.0,9.9),(5579,2,73,32070592,268.0,143.5,143.5,143.5,102.0,102.0,185.0,9.9),(5580,2,74,34285856,273.0,147.0,147.0,147.0,105.0,105.0,189.0,9.9),(5581,3,0,0,5.0,10.0,5.0,10.0,10.0,10.0,15.0,5.0),(5582,3,1,960,5.5,11.0,5.5,11.0,11.0,11.0,16.5,5.0),(5583,3,2,2030,6.0,12.0,6.0,12.0,12.0,12.0,18.0,5.0),(5584,3,3,3318,6.5,13.0,6.5,13.0,13.0,13.0,19.5,5.0),(5585,3,4,4836,7.0,14.0,7.0,14.0,14.0,14.0,21.0,5.0),(5586,3,5,6692,7.5,15.0,7.5,15.0,15.0,15.0,22.5,5.0),(5587,3,6,8898,8.0,16.0,8.0,16.0,16.0,16.0,24.0,5.0),(5588,3,7,11562,8.5,17.0,8.5,17.0,17.0,17.0,25.5,5.0),(5589,3,8,14696,9.0,18.0,9.0,18.0,18.0,18.0,27.0,5.0),(5590,3,9,18440,9.5,19.0,9.5,19.0,19.0,19.0,28.5,5.0),(5591,3,10,22838,10.0,20.0,10.0,20.0,20.0,20.0,30.0,9.9),(5592,3,11,28238,10.5,21.0,10.5,21.0,21.0,21.0,31.5,9.9),(5593,3,12,34508,11.0,22.0,11.0,22.0,22.0,22.0,33.0,9.9),(5594,3,13,42012,11.5,23.0,11.5,23.0,23.0,23.0,34.5,9.9),(5595,3,14,50602,12.0,24.0,12.0,24.0,24.0,24.0,36.0,9.9),(5596,3,15,60738,12.5,25.0,12.5,25.0,25.0,25.0,37.5,9.9),(5597,3,16,72176,13.0,26.0,13.0,26.0,26.0,26.0,39.0,9.9),(5598,3,17,85472,13.5,27.0,13.5,27.0,27.0,27.0,40.5,9.9),(5599,3,18,100414,14.0,28.0,14.0,28.0,28.0,28.0,42.0,9.9),(5600,3,19,117782,14.5,29.0,14.5,29.0,29.0,29.0,43.5,9.9),(5601,3,20,137268,16.0,31.0,16.0,31.0,31.0,31.0,46.0,9.9),(5602,3,21,161140,17.5,33.0,17.5,33.0,33.0,33.0,48.5,9.9),(5603,3,22,189474,19.0,35.0,19.0,35.0,35.0,35.0,51.0,9.9),(5604,3,23,223818,20.5,37.0,20.5,37.0,37.0,37.0,53.5,9.9),(5605,3,24,264088,22.0,39.0,22.0,39.0,39.0,39.0,56.0,9.9),(5606,3,25,311992,23.5,41.0,23.5,41.0,41.0,41.0,58.5,9.9),(5607,3,26,367286,25.0,43.0,25.0,43.0,43.0,43.0,61.0,9.9),(5608,3,27,431838,26.5,45.0,26.5,45.0,45.0,45.0,63.5,9.9),(5609,3,28,505244,28.0,47.0,28.0,47.0,47.0,47.0,66.0,9.9),(5610,3,29,589724,29.5,49.0,29.5,49.0,49.0,49.0,68.5,9.9),(5611,3,30,684714,31.0,51.0,31.0,51.0,51.0,51.0,71.0,9.9),(5612,3,31,792786,32.5,53.0,32.5,53.0,53.0,53.0,73.5,9.9),(5613,3,32,913024,34.0,55.0,34.0,55.0,55.0,55.0,76.0,9.9),(5614,3,33,1048352,35.5,57.0,35.5,57.0,57.0,57.0,78.5,9.9),(5615,3,34,1197502,37.0,59.0,37.0,59.0,59.0,59.0,81.0,9.9),(5616,3,35,1363750,38.5,61.0,38.5,61.0,61.0,61.0,83.5,9.9),(5617,3,36,1545476,40.0,63.0,40.0,63.0,63.0,63.0,86.0,9.9),(5618,3,37,1746308,41.5,65.0,41.5,65.0,65.0,65.0,88.5,9.9),(5619,3,38,1964274,43.0,67.0,43.0,67.0,67.0,67.0,91.0,9.9),(5620,3,39,2203354,44.5,69.0,44.5,69.0,69.0,69.0,93.5,9.9),(5621,3,40,2461224,47.0,72.0,47.0,72.0,72.0,72.0,97.0,9.9),(5622,3,41,2751832,49.5,75.0,49.5,75.0,75.0,75.0,100.5,9.9),(5623,3,42,3073494,52.0,78.0,52.0,78.0,78.0,78.0,104.0,9.9),(5624,3,43,3432174,54.5,81.0,54.5,81.0,81.0,81.0,107.5,9.9),(5625,3,44,3825644,57.0,84.0,57.0,84.0,84.0,84.0,111.0,9.9),(5626,3,45,4260412,59.5,87.0,59.5,87.0,87.0,87.0,114.5,9.9),(5627,3,46,4733706,62.0,90.0,62.0,90.0,90.0,90.0,118.0,9.9),(5628,3,47,5252578,64.5,93.0,64.5,93.0,93.0,93.0,121.5,9.9),(5629,3,48,5813712,67.0,96.0,67.0,96.0,96.0,96.0,125.0,9.9),(5630,3,49,6424704,69.5,99.0,69.5,99.0,99.0,99.0,128.5,9.9),(5631,3,50,7081694,72.0,102.0,72.0,102.0,102.0,102.0,132.0,9.9),(5632,3,51,7792822,74.5,105.0,74.5,105.0,105.0,105.0,135.5,9.9),(5633,3,52,8553684,77.0,108.0,77.0,108.0,108.0,108.0,139.0,9.9),(5634,3,53,9372964,79.5,111.0,79.5,111.0,111.0,111.0,142.5,9.9),(5635,3,54,10245714,82.0,114.0,82.0,114.0,114.0,114.0,146.0,9.9),(5636,3,55,11181162,84.5,117.0,84.5,117.0,117.0,117.0,149.5,9.9),(5637,3,56,12173816,87.0,120.0,87.0,120.0,120.0,120.0,153.0,9.9),(5638,3,57,13233448,89.5,123.0,89.5,123.0,123.0,123.0,156.5,9.9),(5639,3,58,14354022,92.0,126.0,92.0,126.0,126.0,126.0,160.0,9.9),(5640,3,59,15545854,94.5,129.0,94.5,129.0,129.0,129.0,163.5,9.9),(5641,3,60,16802364,98.0,133.0,98.0,133.0,133.0,133.0,168.0,9.9),(5642,3,61,18157372,101.5,137.0,101.5,137.0,137.0,137.0,172.5,9.9),(5643,3,62,19605194,105.0,141.0,105.0,141.0,141.0,141.0,177.0,9.9),(5644,3,63,21158962,108.5,145.0,108.5,145.0,145.0,145.0,181.5,9.9),(5645,3,64,22812256,112.0,149.0,112.0,149.0,149.0,149.0,186.0,9.9),(5646,3,65,24578944,115.5,153.0,115.5,153.0,153.0,153.0,190.5,9.9),(5647,3,66,26451870,119.0,157.0,119.0,157.0,157.0,157.0,195.0,9.9),(5648,3,67,28445638,122.5,161.0,122.5,161.0,161.0,161.0,199.5,9.9),(5649,3,68,30552356,126.0,165.0,126.0,165.0,165.0,165.0,204.0,9.9),(5650,3,69,32787364,129.5,169.0,129.5,169.0,169.0,169.0,208.5,9.9),(5651,3,70,35142034,133.0,173.0,133.0,173.0,173.0,173.0,213.0,9.9),(5652,3,71,37632442,136.5,177.0,136.5,177.0,177.0,177.0,217.5,9.9),(5653,3,72,40249224,140.0,181.0,140.0,181.0,181.0,181.0,222.0,9.9),(5654,3,73,43009192,143.5,185.0,143.5,185.0,185.0,185.0,226.5,9.9),(5655,3,74,45902246,147.0,189.0,147.0,189.0,189.0,189.0,231.0,9.9),(5656,4,0,0,5.0,10.0,8.0,15.0,5.0,10.0,10.0,5.0),(5657,4,1,928,5.5,11.0,8.8,16.5,5.5,11.0,11.0,5.0),(5658,4,2,1935,6.0,12.0,9.6,18.0,6.0,12.0,12.0,5.0),(5659,4,3,3115,6.5,13.0,10.4,19.5,6.5,13.0,13.0,5.0),(5660,4,4,4450,7.0,14.0,11.2,21.0,7.0,14.0,14.0,5.0),(5661,4,5,6018,7.5,15.0,12.0,22.5,7.5,15.0,15.0,5.0),(5662,4,6,7801,8.0,16.0,12.8,24.0,8.0,16.0,16.0,5.0),(5663,4,7,9861,8.5,17.0,13.6,25.5,8.5,17.0,17.0,5.0),(5664,4,8,12196,9.0,18.0,14.4,27.0,9.0,18.0,18.0,5.0),(5665,4,9,14916,9.5,19.0,15.2,28.5,9.5,19.0,19.0,5.0),(5666,4,10,18035,10.0,20.0,16.0,30.0,10.0,20.0,20.0,9.9),(5667,4,11,21871,10.5,21.0,16.8,31.5,10.5,21.0,21.0,9.9),(5668,4,12,26246,11.0,22.0,17.6,33.0,11.0,22.0,22.0,9.9),(5669,4,13,31510,11.5,23.0,18.4,34.5,11.5,23.0,23.0,9.9),(5670,4,14,37485,12.0,24.0,19.2,36.0,12.0,24.0,24.0,9.9),(5671,4,15,44601,12.5,25.0,20.0,37.5,12.5,25.0,25.0,9.9),(5672,4,16,52584,13.0,26.0,20.8,39.0,13.0,26.0,26.0,9.9),(5673,4,17,61944,13.5,27.0,21.6,40.5,13.5,27.0,27.0,9.9),(5674,4,18,72423,14.0,28.0,22.4,42.0,14.0,28.0,28.0,9.9),(5675,4,19,84739,14.5,29.0,23.2,43.5,14.5,29.0,29.0,9.9),(5676,4,20,98522,16.0,31.0,25.0,46.0,16.0,31.0,31.0,9.9),(5677,4,21,115818,17.5,33.0,26.8,48.5,17.5,33.0,33.0,9.9),(5678,4,22,136529,19.0,35.0,28.6,51.0,19.0,35.0,35.0,9.9),(5679,4,23,162157,20.5,37.0,30.4,53.5,20.5,37.0,37.0,9.9),(5680,4,24,192588,22.0,39.0,32.2,56.0,22.0,39.0,39.0,9.9),(5681,4,25,229500,23.5,41.0,34.0,58.5,23.5,41.0,41.0,9.9),(5682,4,26,272619,25.0,43.0,35.8,61.0,25.0,43.0,43.0,9.9),(5683,4,27,323447,26.5,45.0,37.6,63.5,26.5,45.0,45.0,9.9),(5684,4,28,381822,28.0,47.0,39.4,66.0,28.0,47.0,47.0,9.9),(5685,4,29,449934,29.5,49.0,41.2,68.5,29.5,49.0,49.0,9.9),(5686,4,30,527189,31.0,51.0,43.0,71.0,31.0,51.0,51.0,9.9),(5687,4,31,616129,32.5,53.0,44.8,73.5,32.5,53.0,53.0,9.9),(5688,4,32,715184,34.0,55.0,46.6,76.0,34.0,55.0,55.0,9.9),(5689,4,33,827808,35.5,57.0,48.4,78.5,35.5,57.0,57.0,9.9),(5690,4,34,952703,37.0,59.0,50.2,81.0,37.0,59.0,59.0,9.9),(5691,4,35,1093115,38.5,61.0,52.0,83.5,38.5,61.0,61.0,9.9),(5692,4,36,1246546,40.0,63.0,53.8,86.0,40.0,63.0,63.0,9.9),(5693,4,37,1417378,41.5,65.0,55.6,88.5,41.5,65.0,65.0,9.9),(5694,4,38,1603609,43.0,67.0,57.4,91.0,43.0,67.0,67.0,9.9),(5695,4,39,1809189,44.5,69.0,59.2,93.5,44.5,69.0,69.0,9.9),(5696,4,40,2031764,47.0,72.0,62.0,97.0,47.0,72.0,72.0,9.9),(5697,4,41,2283764,49.5,75.0,64.8,100.5,49.5,75.0,75.0,9.9),(5698,4,42,2564547,52.0,78.0,67.6,104.0,52.0,78.0,78.0,9.9),(5699,4,43,2880047,54.5,81.0,70.4,107.5,54.5,81.0,81.0,9.9),(5700,4,44,3228006,57.0,84.0,73.2,111.0,57.0,84.0,84.0,9.9),(5701,4,45,3614902,59.5,87.0,76.0,114.5,59.5,87.0,87.0,9.9),(5702,4,46,4036317,62.0,90.0,78.8,118.0,62.0,90.0,90.0,9.9),(5703,4,47,4500793,64.5,93.0,81.6,121.5,64.5,93.0,93.0,9.9),(5704,4,48,5004984,67.0,96.0,84.4,125.0,67.0,96.0,96.0,9.9),(5705,4,49,5556456,69.5,99.0,87.2,128.5,69.5,99.0,99.0,9.9),(5706,4,50,6151319,72.0,102.0,90.0,132.0,72.0,102.0,102.0,9.9),(5707,4,51,6795619,74.5,105.0,92.8,135.5,74.5,105.0,105.0,9.9),(5708,4,52,7486890,77.0,108.0,95.6,139.0,77.0,108.0,108.0,9.9),(5709,4,53,8233786,79.5,111.0,98.4,142.5,79.5,111.0,111.0,9.9),(5710,4,54,9031329,82.0,114.0,101.2,146.0,82.0,114.0,114.0,9.9),(5711,4,55,9888717,84.5,117.0,104.0,149.5,84.5,117.0,117.0,9.9),(5712,4,56,10797916,87.0,120.0,106.8,153.0,87.0,120.0,120.0,9.9),(5713,4,57,11771084,89.5,123.0,109.6,156.5,89.5,123.0,123.0,9.9),(5714,4,58,12802155,92.0,126.0,112.4,160.0,92.0,126.0,126.0,9.9),(5715,4,59,13901415,94.5,129.0,115.2,163.5,94.5,129.0,129.0,9.9),(5716,4,60,15062254,98.0,133.0,119.0,168.0,98.0,133.0,133.0,9.9),(5717,4,61,16315022,101.5,137.0,122.8,172.5,101.5,137.0,137.0,9.9),(5718,4,62,17656869,105.0,141.0,126.6,177.0,105.0,141.0,141.0,9.9),(5719,4,63,19100897,108.5,145.0,130.4,181.5,108.5,145.0,145.0,9.9),(5720,4,64,20640656,112.0,149.0,134.2,186.0,112.0,149.0,149.0,9.9),(5721,4,65,22289984,115.5,153.0,138.0,190.5,115.5,153.0,153.0,9.9),(5722,4,66,24038095,119.0,157.0,141.8,195.0,119.0,157.0,157.0,9.9),(5723,4,67,25903035,122.5,161.0,145.6,199.5,122.5,161.0,161.0,9.9),(5724,4,68,27876882,126.0,165.0,149.4,204.0,126.0,165.0,165.0,9.9),(5725,4,69,29974946,129.5,169.0,153.2,208.5,129.5,169.0,169.0,9.9),(5726,4,70,32188569,133.0,173.0,157.0,213.0,133.0,173.0,173.0,9.9),(5727,4,71,34533797,136.5,177.0,160.8,217.5,136.5,177.0,177.0,9.9),(5728,4,72,36996900,140.0,181.0,164.6,222.0,140.0,181.0,181.0,9.9),(5729,4,73,39598868,143.5,185.0,168.4,226.5,143.5,185.0,185.0,9.9),(5730,4,74,42329571,147.0,189.0,172.2,231.0,147.0,189.0,189.0,9.9),(5806,25,0,0,15.0,15.0,20.0,10.0,0.0,5.0,15.0,0.0),(5807,25,1,1160,16.5,16.5,22.0,11.0,0.0,5.5,16.5,0.0),(5808,25,2,2416,18.0,18.0,24.0,12.0,0.0,6.0,18.0,0.0),(5809,25,3,3832,19.5,19.5,26.0,13.0,0.0,6.5,19.5,0.0),(5810,25,4,5344,21.0,21.0,28.0,14.0,0.0,7.0,21.0,0.0),(5811,25,5,7112,22.5,22.5,30.0,15.0,0.0,7.5,22.5,0.0),(5812,25,6,9200,24.0,24.0,32.0,16.0,0.0,8.0,24.0,0.0),(5813,25,7,11800,25.5,25.5,34.0,17.0,0.0,8.5,25.5,0.0),(5814,25,8,14976,27.0,27.0,36.0,18.0,0.0,9.0,27.0,0.0),(5815,25,9,19016,28.5,28.5,38.0,19.0,0.0,9.5,28.5,0.0),(5816,25,10,24080,30.0,30.0,40.0,20.0,0.0,10.0,30.0,0.0),(5817,25,11,30840,31.5,31.5,42.0,21.0,0.0,10.5,31.5,0.0),(5818,25,12,39168,33.0,33.0,44.0,22.0,0.0,11.0,33.0,0.0),(5819,25,13,50024,34.5,34.5,46.0,23.0,0.0,11.5,34.5,0.0),(5820,25,14,62992,36.0,36.0,48.0,24.0,0.0,12.0,36.0,0.0),(5821,25,15,79320,37.5,37.5,50.0,25.0,0.0,12.5,37.5,0.0),(5822,25,16,98304,39.0,39.0,52.0,26.0,0.0,13.0,39.0,0.0),(5823,25,17,121480,40.5,40.5,54.0,27.0,0.0,13.5,40.5,0.0),(5824,25,18,147888,42.0,42.0,56.0,28.0,0.0,14.0,42.0,0.0),(5825,25,19,179384,43.5,43.5,58.0,29.0,0.0,14.5,43.5,0.0),(5826,25,20,214720,46.0,46.0,61.0,31.0,1.0,16.0,46.0,0.0),(5827,25,21,259344,48.5,48.5,64.0,33.0,2.0,17.5,48.5,0.0),(5828,25,22,312264,51.0,51.0,67.0,35.0,3.0,19.0,51.0,0.0),(5829,25,23,376748,53.5,53.5,70.0,37.0,4.0,20.5,53.5,0.0),(5830,25,24,451328,56.0,56.0,73.0,39.0,5.0,22.0,56.0,0.0),(5831,25,25,539748,58.5,58.5,76.0,41.0,6.0,23.5,58.5,0.0),(5832,25,26,640056,61.0,61.0,79.0,43.0,7.0,25.0,61.0,0.0),(5833,25,27,756476,63.5,63.5,82.0,45.0,8.0,26.5,63.5,0.0),(5834,25,28,886576,66.0,66.0,85.0,47.0,9.0,28.0,66.0,0.0),(5835,25,29,1035156,68.5,68.5,88.0,49.0,10.0,29.5,68.5,0.0),(5836,25,30,1199304,71.0,71.0,91.0,51.0,11.0,31.0,71.0,0.0),(5837,25,31,1384396,73.5,73.5,94.0,53.0,12.0,32.5,73.5,0.0),(5838,25,32,1586944,76.0,76.0,97.0,55.0,13.0,34.0,76.0,0.0),(5839,25,33,1812900,78.5,78.5,100.0,57.0,14.0,35.5,78.5,0.0),(5840,25,34,2058200,81.0,81.0,103.0,59.0,15.0,37.0,81.0,0.0),(5841,25,35,2329372,83.5,83.5,106.0,61.0,16.0,38.5,83.5,0.0),(5842,25,36,2621776,86.0,86.0,109.0,63.0,17.0,40.0,86.0,0.0),(5843,25,37,2942516,88.5,88.5,112.0,65.0,18.0,41.5,88.5,0.0),(5844,25,38,3286376,91.0,91.0,115.0,67.0,19.0,43.0,91.0,0.0),(5845,25,39,3661036,93.5,93.5,118.0,69.0,20.0,44.5,93.5,0.0),(5846,25,40,4060704,97.0,97.0,122.0,72.0,22.0,47.0,97.0,0.0),(5847,25,41,4505780,100.5,100.5,126.0,75.0,24.0,49.5,100.5,0.0),(5848,25,42,4990856,104.0,104.0,130.0,78.0,26.0,52.0,104.0,0.0),(5849,25,43,5526108,107.5,107.5,134.0,81.0,28.0,54.5,107.5,0.0),(5850,25,44,6105392,111.0,111.0,138.0,84.0,30.0,57.0,111.0,0.0),(5851,25,45,6739844,114.5,114.5,142.0,87.0,32.0,59.5,114.5,0.0),(5852,25,46,7422520,118.0,118.0,146.0,90.0,34.0,62.0,118.0,0.0),(5853,25,47,8165388,121.5,121.5,150.0,93.0,36.0,64.5,121.5,0.0),(5854,25,48,8960672,125.0,125.0,154.0,96.0,38.0,67.0,125.0,0.0),(5855,25,49,9821172,128.5,128.5,158.0,99.0,40.0,69.5,128.5,0.0),(5856,25,50,10738280,132.0,132.0,162.0,102.0,42.0,72.0,132.0,0.0),(5857,25,51,11725628,135.5,135.5,166.0,105.0,44.0,74.5,135.5,0.0),(5858,25,52,12773776,139.0,139.0,170.0,108.0,46.0,77.0,139.0,0.0),(5859,25,53,13897188,142.5,142.5,174.0,111.0,48.0,79.5,142.5,0.0),(5860,25,54,15085592,146.0,146.0,178.0,114.0,50.0,82.0,146.0,0.0),(5861,25,55,16354284,149.5,149.5,182.0,117.0,52.0,84.5,149.5,0.0),(5862,25,56,17692160,153.0,153.0,186.0,120.0,54.0,87.0,153.0,0.0),(5863,25,57,19115348,156.5,156.5,190.0,123.0,56.0,89.5,156.5,0.0),(5864,25,58,20611912,160.0,160.0,194.0,126.0,58.0,92.0,160.0,0.0),(5865,25,59,22198812,163.5,163.5,198.0,129.0,60.0,94.5,163.5,0.0),(5866,25,60,23863280,168.0,168.0,203.0,133.0,63.0,98.0,168.0,0.0),(5867,25,61,25649428,172.5,172.5,208.0,137.0,66.0,101.5,172.5,0.0),(5868,25,62,27545160,177.0,177.0,213.0,141.0,69.0,105.0,177.0,0.0),(5869,25,63,29570988,181.5,181.5,218.0,145.0,72.0,108.5,181.5,0.0),(5870,25,64,31713728,186.0,186.0,223.0,149.0,75.0,112.0,186.0,0.0),(5871,25,65,33994980,190.5,190.5,228.0,153.0,78.0,115.5,190.5,0.0),(5872,25,66,36400472,195.0,195.0,233.0,157.0,81.0,119.0,195.0,0.0),(5873,25,67,38952892,199.5,199.5,238.0,161.0,84.0,122.5,199.5,0.0),(5874,25,68,41636880,204.0,204.0,243.0,165.0,87.0,126.0,204.0,0.0),(5875,25,69,44476212,208.5,208.5,248.0,169.0,90.0,129.5,208.5,0.0),(5876,25,70,47454440,213.0,213.0,253.0,173.0,93.0,133.0,213.0,0.0),(5877,25,71,50596428,217.5,217.5,258.0,177.0,96.0,136.5,217.5,0.0),(5878,25,72,53884640,222.0,222.0,263.0,181.0,99.0,140.0,222.0,0.0),(5879,25,73,57345028,226.5,226.5,268.0,185.0,102.0,143.5,226.5,0.0),(5880,25,74,60958968,231.0,231.0,273.0,189.0,105.0,147.0,231.0,0.0),(5956,14,0,0,5.0,10.0,5.0,10.0,5.0,3.0,1.0,1.0),(5957,14,1,504,5.5,11.0,5.5,11.0,5.5,3.3,1.1,1.0),(5958,14,2,1055,6.0,12.0,6.0,12.0,6.0,3.6,1.2,1.0),(5959,14,3,1731,6.5,13.0,6.5,13.0,6.5,3.9,1.3,1.0),(5960,14,4,2514,7.0,14.0,7.0,14.0,7.0,4.2,1.4,1.0),(5961,14,5,3498,7.5,15.0,7.5,15.0,7.5,4.5,1.5,1.0),(5962,14,6,4649,8.0,16.0,8.0,16.0,8.0,4.8,1.6,1.0),(5963,14,7,6045,8.5,17.0,8.5,17.0,8.5,5.1,1.7,1.0),(5964,14,8,7684,9.0,18.0,9.0,18.0,9.0,5.4,1.8,1.0),(5965,14,9,9628,9.5,19.0,9.5,19.0,9.5,5.7,1.9,1.0),(5966,14,10,11859,10.0,20.0,10.0,20.0,10.0,6.0,2.0,2.0),(5967,14,11,14471,10.5,21.0,10.5,21.0,10.5,6.3,2.1,2.0),(5968,14,12,17446,11.0,22.0,11.0,22.0,11.0,6.6,2.2,2.0),(5969,14,13,20846,11.5,23.0,11.5,23.0,11.5,6.9,2.3,2.0),(5970,14,14,24653,12.0,24.0,12.0,24.0,12.0,7.2,2.4,2.0),(5971,14,15,28961,12.5,25.0,12.5,25.0,12.5,7.5,2.5,2.0),(5972,14,16,33736,13.0,26.0,13.0,26.0,13.0,7.8,2.6,2.0),(5973,14,17,39056,13.5,27.0,13.5,27.0,13.5,8.1,2.7,2.0),(5974,14,18,44983,14.0,28.0,14.0,28.0,14.0,8.4,2.8,2.0),(5975,14,19,51643,14.5,29.0,14.5,29.0,14.5,8.7,2.9,2.0),(5976,14,20,59082,16.0,31.0,16.0,31.0,16.0,10.0,4.0,2.0),(5977,14,21,67902,17.5,33.0,17.5,33.0,17.5,11.3,5.1,2.0),(5978,14,22,78313,19.0,35.0,19.0,35.0,19.0,12.6,6.2,2.0),(5979,14,23,90649,20.5,37.0,20.5,37.0,20.5,13.9,7.3,2.0),(5980,14,24,105148,22.0,39.0,22.0,39.0,22.0,15.2,8.4,2.0),(5981,14,25,122160,23.5,41.0,23.5,41.0,23.5,16.5,9.5,2.0),(5982,14,26,141907,25.0,43.0,25.0,43.0,25.0,17.8,10.6,2.0),(5983,14,27,164723,26.5,45.0,26.5,45.0,26.5,19.1,11.7,2.0),(5984,14,28,190862,28.0,47.0,28.0,47.0,28.0,20.4,12.8,2.0),(5985,14,29,220930,29.5,49.0,29.5,49.0,29.5,21.7,13.9,2.0),(5986,14,30,255165,31.0,51.0,31.0,51.0,31.0,23.0,15.0,2.0),(5987,14,31,294493,32.5,53.0,32.5,53.0,32.5,24.3,16.1,2.0),(5988,14,32,338864,34.0,55.0,34.0,55.0,34.0,25.6,17.2,2.0),(5989,14,33,389460,35.5,57.0,35.5,57.0,35.5,26.9,18.3,2.0),(5990,14,34,445943,37.0,59.0,37.0,59.0,37.0,28.2,19.4,2.0),(5991,14,35,509911,38.5,61.0,38.5,61.0,38.5,29.5,20.5,2.0),(5992,14,36,580722,40.0,63.0,40.0,63.0,40.0,30.8,21.6,2.0),(5993,14,37,660182,41.5,65.0,41.5,65.0,41.5,32.1,22.7,2.0),(5994,14,38,747617,43.0,67.0,43.0,67.0,43.0,33.4,23.8,2.0),(5995,14,39,844945,44.5,69.0,44.5,69.0,44.5,34.7,24.9,2.0),(5996,14,40,950996,47.0,72.0,47.0,72.0,47.0,37.0,27.0,2.0),(5997,14,41,1073960,49.5,75.0,49.5,75.0,49.5,39.3,29.1,2.0),(5998,14,42,1212891,52.0,78.0,52.0,78.0,52.0,41.6,31.2,2.0),(5999,14,43,1371579,54.5,81.0,54.5,81.0,54.5,43.9,33.3,2.0),(6000,14,44,1548918,57.0,84.0,57.0,84.0,57.0,46.2,35.4,2.0),(6001,14,45,1749834,59.5,87.0,59.5,87.0,59.5,48.5,37.5,2.0),(6002,14,46,1972149,62.0,90.0,62.0,90.0,62.0,50.8,39.6,2.0),(6003,14,47,2220613,64.5,93.0,64.5,93.0,64.5,53.1,41.7,2.0),(6004,14,48,2494040,67.0,96.0,67.0,96.0,67.0,55.4,43.8,2.0),(6005,14,49,2796844,69.5,99.0,69.5,99.0,69.5,57.7,45.9,2.0),(6006,14,50,3126479,72.0,102.0,72.0,102.0,72.0,60.0,48.0,2.0),(6007,14,51,3489375,74.5,105.0,74.5,105.0,74.5,62.3,50.1,2.0),(6008,14,52,3883018,77.0,108.0,77.0,108.0,77.0,64.6,52.2,2.0),(6009,14,53,4312494,79.5,111.0,79.5,111.0,79.5,66.9,54.3,2.0),(6010,14,54,4774297,82.0,114.0,82.0,114.0,82.0,69.2,56.4,2.0),(6011,14,55,5276489,84.5,117.0,84.5,117.0,84.5,71.5,58.5,2.0),(6012,14,56,5813756,87.0,120.0,87.0,120.0,87.0,73.8,60.6,2.0),(6013,14,57,6393248,89.5,123.0,89.5,123.0,89.5,76.1,62.7,2.0),(6014,14,58,7012115,92.0,126.0,92.0,126.0,92.0,78.4,64.8,2.0),(6015,14,59,7676435,94.5,129.0,94.5,129.0,94.5,80.7,66.9,2.0),(6016,14,60,8381262,98.0,133.0,98.0,133.0,98.0,84.0,70.0,2.0),(6017,14,61,9153202,101.5,137.0,101.5,137.0,101.5,87.3,73.1,2.0),(6018,14,62,9988717,105.0,141.0,105.0,141.0,105.0,90.6,76.2,2.0),(6019,14,63,10896061,108.5,145.0,108.5,145.0,108.5,93.9,79.3,2.0),(6020,14,64,11870384,112.0,149.0,112.0,149.0,112.0,97.2,82.4,2.0),(6021,14,65,12924772,115.5,153.0,115.5,153.0,115.5,100.5,85.5,2.0),(6022,14,66,14051511,119.0,157.0,119.0,157.0,119.0,103.8,88.6,2.0),(6023,14,67,15262071,122.5,161.0,122.5,161.0,122.5,107.1,91.7,2.0),(6024,14,68,16552866,126.0,165.0,126.0,165.0,126.0,110.4,94.8,2.0),(6025,14,69,17933526,129.5,169.0,129.5,169.0,129.5,113.7,97.9,2.0),(6026,14,70,19397185,133.0,173.0,133.0,173.0,133.0,117.0,101.0,2.0),(6027,14,71,20956657,136.5,177.0,136.5,177.0,136.5,120.3,104.1,2.0),(6028,14,72,22609940,140.0,181.0,140.0,181.0,140.0,123.6,107.2,2.0),(6029,14,73,24365176,143.5,185.0,143.5,185.0,143.5,126.9,110.3,2.0),(6030,14,74,26214155,147.0,189.0,147.0,189.0,147.0,130.2,113.4,2.0);

UNLOCK TABLES;

/*Table structure for table `c_classes` */

DROP TABLE IF EXISTS `c_classes`;

CREATE TABLE `c_classes` (
  `id` int(11) NOT NULL auto_increment COMMENT 'c_class id',
  `name` varchar(32) NOT NULL COMMENT 'Name of the c_class',
  `description` varchar(256) default NULL COMMENT 'description of the c_class',
  `attack_spells` tinyint(1) default NULL COMMENT 'If true, this c_class can use attack spells',
  `healing_spells` tinyint(1) default NULL COMMENT 'If true, this c_class can use healing spells',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `c_classes` */

LOCK TABLES `c_classes` WRITE;

insert  into `c_classes`(`id`,`name`,`description`,`attack_spells`,`healing_spells`) values (1,'Bartender','Tends the bars',0,0),(2,'Therapist','Gives consultations, and etc',0,0),(3,'Electrician','Zap zap zap',1,1),(4,'Medic','Heals stuff',0,1),(14,'Pyro','Burns things',1,0),(25,'Bad Dude','badd',0,0);

UNLOCK TABLES;

/*Table structure for table `creature_kills` */

DROP TABLE IF EXISTS `creature_kills`;

CREATE TABLE `creature_kills` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who killed this creature',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the creature killed',
  `number` int(10) NOT NULL default '0' COMMENT 'Number of this type of creatures killed',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `creature_id` (`creature_id`),
  KEY `player_character_creature_id` (`player_character_id`,`creature_id`),
  CONSTRAINT `FK_creatures_creature_kills` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_player_characters_creature_kills` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `creature_kills` */

LOCK TABLES `creature_kills` WRITE;

UNLOCK TABLES;

/*Table structure for table `creatures` */

DROP TABLE IF EXISTS `creatures`;

CREATE TABLE `creatures` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) NOT NULL COMMENT 'name of the creature',
  `description` varchar(256) default NULL COMMENT 'description of the creature',
  `experience` int(10) NOT NULL COMMENT 'Base experience awarded',
  `HP` int(10) NOT NULL COMMENT 'Base HP',
  `str` int(10) NOT NULL COMMENT 'strength',
  `dex` int(10) NOT NULL COMMENT 'dexterity',
  `dam` int(10) NOT NULL COMMENT 'base damage dealt',
  `dfn` int(10) NOT NULL COMMENT 'base defense',
  `int` int(10) NOT NULL COMMENT 'base intelligence',
  `mag` int(10) NOT NULL COMMENT 'base magic',
  `gold` int(20) NOT NULL COMMENT 'base gold awarded',
  `image_id` int(11) NOT NULL COMMENT 'image id of the creature',
  `player_id` int(11) NOT NULL COMMENT 'user id of the maker of the creature',
  `public` tinyint(1) NOT NULL default '0' COMMENT 'if true, this creature can be found in the world and can be assigned to other kingdoms',
  `kingdom_id` int(11) NOT NULL COMMENT 'Home kingdom of where the creature is found',
  `number_alive` int(10) NOT NULL COMMENT 'The number of these creatures that exist. 0 indicates that this creature is extinct, a positive number is the number left, and each time one is killed,this number is decremented. negative one indicates that there are an infinite number of this creature, o',
  `fecundity` float NOT NULL COMMENT 'This is how many new creatures are born/spawned each day. This helps creatures from being completely killed off, and allows their numbers to regrow overtime if they are hunted exclusively. Does nothing for infinite creature population and extinct creature',
  `disease_id` int(11) default NULL COMMENT 'The disease the creature carries. If null, creature doesn''t carry a disease typically.',
  `armed` tinyint(1) default '0' COMMENT 'Indicates if the creature has been amde available for use in the game. If true, then it can be used for things like events. Also, it may not be edited or destroyed.',
  `being_fought` int(10) default '0' COMMENT 'The number of creatures that are being fought by players. Mainly used to prevent creatures from beign fought, not all killed, and being marked as extinct when they shouldn''t be.',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `name` (`name`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `experience` (`experience`),
  KEY `FK_creatures_images` (`image_id`),
  KEY `disease_id` (`disease_id`),
  KEY `public` (`public`),
  CONSTRAINT `FK_diseases_creatures` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`),
  CONSTRAINT `FK_images_creatures` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`),
  CONSTRAINT `FK_kingdoms_creatures` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_creatures` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `creatures` */

LOCK TABLES `creatures` WRITE;

insert  into `creatures`(`id`,`name`,`description`,`experience`,`HP`,`str`,`dex`,`dam`,`dfn`,`int`,`mag`,`gold`,`image_id`,`player_id`,`public`,`kingdom_id`,`number_alive`,`fecundity`,`disease_id`,`armed`,`being_fought`) values (1,'monkey','ghgh',18,13,5,7,5,4,10,0,0,175,1,1,1,10000,33,NULL,1,0),(3,'Leper','like a zombie, but still alive',6,1,1,7,3,2,0,0,1,171,1,1,1,9001,3,1,1,0),(10,'Superfly','OH NO A SUPERFLY!!!',762,500,1,7,100,100,0,0,40,42,1,0,1,99932,200,NULL,1,0),(12,'Peasant','Poor living conditions and hard work. That\'s how they roll.',50,10,10,10,10,10,0,0,1,172,-1,0,-1,-1,0,5,1,0),(13,'Squirrel','',2,5,1,7,5,5,0,0,0,93,1,1,1,9969,10,NULL,1,0),(14,'Slime','gross',28,20,1,7,10,4,0,0,3,94,1,1,1,9000,100,NULL,1,0),(15,'cactus','Has sharp pointy spines',120,20,1,7,20,20,0,0,0,95,1,1,1,1000,25,NULL,1,0),(16,'Goat','OMFG a GOAT',9,40,1,60,30,15,10,10,10,96,1,1,1,-1,10,NULL,1,0),(17,'Rabid Tree','Tree with rabies',184,50,15,15,30,25,5,5,2,176,1,0,1,10000,10,13,1,0),(18,'Rat','Rodent',50,20,5,20,10,5,10,1,1,177,1,1,1,-1,0,8,1,0),(19,'Bat','Flying rodent',36,25,7,15,8,10,8,8,0,178,1,1,1,100000,25,NULL,1,0),(20,'Sludge','Don\'t ask where it came from. You don\'t want to know.',161,70,13,13,25,25,10,10,5,179,1,1,1,666,50,NULL,1,0),(21,'Goblin','Troublesome creature.',40,20,8,10,10,10,7,2,3,180,1,1,1,9001,100,NULL,1,0),(22,'Cube','Geometry',209,100,30,30,30,30,30,30,10,181,1,0,1,30000,10,NULL,1,0),(23,'Ghost','Not much of a body left.',375,75,10,30,25,60,25,25,8,182,1,1,1,-1,0,NULL,1,0),(24,'Bear','Mammal.',313,200,50,20,45,35,17,10,0,183,1,1,1,1000,5,NULL,1,0),(25,'Walrus','Aquatic Mammal.',278,200,35,15,35,40,25,15,13,184,1,0,1,700,10,NULL,1,0),(26,'Manatee','Sea cow.',290,175,30,20,30,50,30,10,8,185,1,0,1,1200,15,NULL,1,0),(27,'Serpent','Slithers on the ground.',160,80,15,40,25,25,30,18,9,186,1,1,1,1000,200,NULL,1,0),(28,'Lion','Get in the car.',264,130,45,45,45,30,15,15,5,187,1,1,1,1999,30,NULL,1,0),(29,'Stone','A rock.',200,500,30,10,30,80,0,0,3,188,1,0,1,100000,1,NULL,1,0),(30,'Giant','A big person.',298,350,50,30,40,35,30,10,7,189,1,1,1,3000,8,NULL,1,0),(31,'Tentacle','Attack in groups. Who knows what they might be up to.',147,80,30,30,30,15,15,15,1,190,1,1,1,50000,10,NULL,1,0),(32,'Telephone','Someone is calling.',104,150,40,20,15,20,40,40,10,191,1,0,1,4500,33,NULL,1,0),(33,'Wherewolf','Doesn\'t know where he is.',354,300,50,45,60,35,30,30,16,192,1,1,1,700,20,NULL,1,0),(34,'Zombie','Like a leper, but more dead and animated.',280,100,80,20,50,30,0,0,0,193,1,1,1,500,400,NULL,1,0),(35,'Skeleton','Just bones wandering the earth.',273,50,50,30,45,33,0,4,0,194,1,1,1,5000,25,NULL,1,0),(36,'Mystery Box','Anything could be inside.',298,265,67,56,45,34,23,12,30,195,1,0,1,314159,11,NULL,1,0),(37,'Dragon','Breathes fire and other cliched things.',1265,500,100,76,120,95,70,70,100,196,1,0,1,9001,3,NULL,1,0),(38,'Filth','Its everywhere. This is the internet afterall.',320,187,20,70,50,40,10,25,20,197,1,1,1,5000,200,9,1,0),(39,'Vampire','Sucks your blood.',385,275,35,60,65,30,40,40,60,198,1,1,1,500,5,10,1,0),(40,'Lawyer','Sucks your moneys.',374,666,50,50,50,50,50,50,500,199,1,0,1,50000,45,15,1,0),(41,'Gazebo','',32278,1000,203,133,133,273,63,63,63,200,1,0,1,300,1,NULL,1,0),(42,'Rotting Corpse','',10574,300,180,180,170,170,30,30,30,201,1,1,1,7000,20,9,1,0),(43,'Change','',323760,3000,500,500,500,500,500,500,500,202,1,0,1,100,0,6,1,0);

UNLOCK TABLES;

/*Table structure for table `diseases` */

DROP TABLE IF EXISTS `diseases`;

CREATE TABLE `diseases` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the disease',
  `name` varchar(32) NOT NULL COMMENT 'Name of the disease',
  `description` varchar(256) default NULL COMMENT 'Description of the disease',
  `virility` float NOT NULL COMMENT '% chance that the disease will be transmitted to an uninfected if they come into contact with the tranmission method',
  `trans_method` int(3) NOT NULL COMMENT 'The method that the disease may be transmitted',
  `dam` int(10) default NULL COMMENT 'damage penalty for those infected',
  `dfn` int(10) default NULL COMMENT 'defense penalty',
  `str` int(10) default NULL COMMENT 'strength penalty',
  `dex` int(10) default NULL COMMENT 'dexterity penalty',
  `mag` int(10) default NULL COMMENT 'magic penalty',
  `int` int(10) default NULL COMMENT 'intelligence penalty',
  `con` int(10) default NULL COMMENT 'constitution penalty',
  `HP_per_turn` int(10) default NULL COMMENT 'HP lost per turn infected',
  `MP_per_turn` int(10) default NULL COMMENT 'MP lost per turn while infected',
  `NPC_fatal` tinyint(1) default NULL COMMENT 'If true, an NPC who is in an infected kingdom has a chance of being killed by the disease',
  `peasant_fatality` float default NULL COMMENT '% of peasants in the kingdom killed each day by the disease if a kingdom has an outbreak',
  `min_peasants` int(10) NOT NULL COMMENT 'Minimum number of peasants for the disease to continue to infect a kingdom',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `diseases` */

LOCK TABLES `diseases` WRITE;

insert  into `diseases`(`id`,`name`,`description`,`virility`,`trans_method`,`dam`,`dfn`,`str`,`dex`,`mag`,`int`,`con`,`HP_per_turn`,`MP_per_turn`,`NPC_fatal`,`peasant_fatality`,`min_peasants`) values (1,'leprosy','not pleasant',3,1,4,4,4,4,4,4,4,4,4,0,3,3003),(2,'AIDS','you went in the pool, didn\'t you?',100,2,0,0,0,0,10,10,10,20,0,1,30,100),(5,'Cooties','worse than you think it might be',50,2,0,10,5,5,5,5,5,1,1,0,3,50),(6,'The Shakes','I can\'t stop my leg',100,1,10,10,0,10,0,0,0,5,0,0,10,100),(7,'Hemmorhagitis','blood everywhere',75,3,0,0,15,0,15,15,15,20,10,1,25,69),(8,'Pustulent Corpuscles','gross',30,3,0,20,0,0,0,20,25,15,9,1,13,10),(9,'Rotting Fever','Burning apart',60,1,15,15,15,15,15,15,15,15,15,1,40,600),(10,'Soul Plague','deep infestation of the soul',100,1,30,0,30,0,30,30,0,0,20,0,0,75),(11,'Reefer Madness','i was crazy once . . .',75,1,-25,0,0,0,5,10,5,0,0,1,10,1000),(12,'Cholera','when youve got the runs',80,3,0,0,20,0,0,10,20,10,0,1,35,750),(13,'Rabies','foaming at the mouth',65,3,-5,5,5,5,0,10,5,5,0,1,15,900),(14,'Brain Pox','Pox upon your brain',40,1,0,0,0,0,30,30,5,0,50,0,3,1200),(15,'Mondays','You dont want to get a case of thses.',100,1,8,5,8,15,5,15,20,10,10,1,42,5000);

UNLOCK TABLES;

/*Table structure for table `done_events` */

DROP TABLE IF EXISTS `done_events`;

CREATE TABLE `done_events` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event that has happened',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who has completed this event. IE, if the event was a one time monster, and the player_character killed the monster, then the player_character has completed this event. If the player_character fails to kill the monster, then the ',
  `datetime` datetime NOT NULL COMMENT 'When this event was done. Useful if events exist that a player_character can use every so often. Decide later if its ok to purge events with time limit expiratins.',
  `level_map_id` int(11) default NULL COMMENT 'Where this even occurred. Note that an event that occurs at once spot willl be recorded as having happened there, even if the feature changes. ',
  `world_map_id` int(11) default NULL COMMENT 'World map where this was completed. Null if this event was completed in a kingdom level ',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `event_id_player_character_id` (`event_id`,`player_character_id`),
  KEY `level_map_id` (`level_map_id`),
  KEY `event_id_player_id_level_map_id` (`event_id`,`player_character_id`,`level_map_id`),
  KEY `world_map_id` (`world_map_id`),
  KEY `player_character_id_world_map_id` (`player_character_id`,`world_map_id`),
  CONSTRAINT `FK_events_done_events` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_level_maps_done_events` FOREIGN KEY (`level_map_id`) REFERENCES `level_maps` (`id`),
  CONSTRAINT `FK_player_characters_done_events` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_world_maps_done_events` FOREIGN KEY (`world_map_id`) REFERENCES `world_maps` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `done_events` */

LOCK TABLES `done_events` WRITE;

insert  into `done_events`(`id`,`event_id`,`player_character_id`,`datetime`,`level_map_id`,`world_map_id`) values (2,46,1,'2008-11-08 12:42:14',NULL,41);

UNLOCK TABLES;

/*Table structure for table `done_quests` */

DROP TABLE IF EXISTS `done_quests`;

CREATE TABLE `done_quests` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who has completed this quest',
  `date` datetime NOT NULL COMMENT 'When this player_character completed this quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `quest_id_player_character_id` (`quest_id`,`player_character_id`),
  CONSTRAINT `FK_player_characters_done_quests` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_quests_done_quests` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `done_quests` */

LOCK TABLES `done_quests` WRITE;

UNLOCK TABLES;

/*Table structure for table `event_creatures` */

DROP TABLE IF EXISTS `event_creatures`;

CREATE TABLE `event_creatures` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the creature',
  `low` int(2) NOT NULL default '1' COMMENT 'the smalest number of this creature that might appear',
  `high` int(2) NOT NULL default '1' COMMENT 'The largets number of this creatures taht might appear',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `creature_id` (`creature_id`),
  CONSTRAINT `FK_creatures_event_creatures` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_events_event_creatures` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_creatures` */

LOCK TABLES `event_creatures` WRITE;

insert  into `event_creatures`(`id`,`event_id`,`creature_id`,`low`,`high`) values (1,1,29,1,5),(2,3,13,3,5),(3,5,19,1,4),(4,6,19,3,8),(5,7,24,1,3),(6,8,24,1,2),(7,9,15,2,5),(8,10,43,1,1),(9,11,22,1,3),(10,12,37,1,1),(11,13,38,1,10),(12,14,41,1,1),(13,15,38,3,7),(14,16,23,2,4),(15,17,30,1,4),(16,18,16,4,8),(17,19,21,2,12),(18,20,40,2,4),(19,21,3,1,3),(20,22,28,1,2),(21,23,26,2,3),(22,24,1,1,20),(23,25,36,1,3),(24,26,12,1,6),(25,27,17,3,8),(26,28,17,1,3),(27,29,18,5,15),(28,30,42,1,3),(29,31,27,2,5),(30,32,35,1,8),(31,33,14,3,6),(32,34,20,2,9),(33,35,29,5,13),(34,36,10,3,3),(35,37,32,1,1),(36,38,31,9,25),(37,39,31,20,30),(38,40,39,1,1),(39,41,25,1,4),(40,42,33,1,1),(41,43,34,2,10),(42,44,12,1,30),(43,45,12,1,100),(44,65,20,20,20),(45,69,38,30,30);

UNLOCK TABLES;

/*Table structure for table `event_diseases` */

DROP TABLE IF EXISTS `event_diseases`;

CREATE TABLE `event_diseases` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event where pesants are encountered at home',
  `disease_id` int(11) NOT NULL COMMENT 'ID of the disease associated with this event',
  `cures?` tinyint(1) NOT NULL COMMENT 'If true, this event cures the player_character of this disease. Otherwise, it gives the player_character this disease.',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_diseases_event_diseases` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`),
  CONSTRAINT `FK_events_event_diseases` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_diseases` */

LOCK TABLES `event_diseases` WRITE;

insert  into `event_diseases`(`id`,`event_id`,`disease_id`,`cures?`) values (1,51,11,0),(2,52,11,1),(3,53,10,1),(4,54,8,0),(5,55,12,0);

UNLOCK TABLES;

/*Table structure for table `event_items` */

DROP TABLE IF EXISTS `event_items`;

CREATE TABLE `event_items` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item',
  `number` int(5) NOT NULL default '0' COMMENT 'Number of this item given',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `item_id` (`item_id`),
  CONSTRAINT `FK_events_event_items` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_items_event_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_items` */

LOCK TABLES `event_items` WRITE;

insert  into `event_items`(`id`,`event_id`,`item_id`,`number`) values (1,47,1,1),(2,48,6,1),(3,49,7,1),(4,50,5,1),(5,60,2,1);

UNLOCK TABLES;

/*Table structure for table `event_moves` */

DROP TABLE IF EXISTS `event_moves`;

CREATE TABLE `event_moves` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `move_type` int(3) NOT NULL COMMENT 'Type of movement, ie enter a knigdom, enter kingdom 0 (the world), move to a different region in the world, move to a different level in a kingdom, etc',
  `move_id` int(11) NOT NULL COMMENT 'ID of the new location. This will vary, depending on where one is moving. Might have been  good idea to break this into different tables, a different table for kingdom levels, kingdoms, world, etc. the ID here will be directly related to a location table ',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `move_type_move_id` (`move_type`,`move_id`),
  CONSTRAINT `FK_events_event_moves` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_moves` */

LOCK TABLES `event_moves` WRITE;

insert  into `event_moves`(`id`,`event_id`,`move_type`,`move_id`) values (2,67,3,-1),(4,77,3,1),(5,81,1,1),(6,83,1,3);

UNLOCK TABLES;

/*Table structure for table `event_npcs` */

DROP TABLE IF EXISTS `event_npcs`;

CREATE TABLE `event_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event for the housecall.',
  `npc_id` int(11) default NULL COMMENT 'ID of the NPC encountered by this event.',
  `level_map_id` int(11) default NULL COMMENT 'The actual square where this event will be occurring. This is set when a feature is built on the map.',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `npc_id` (`npc_id`),
  KEY `level_map_id` (`level_map_id`),
  CONSTRAINT `FK_events_event_npcs` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_event_npcs` FOREIGN KEY (`level_map_id`) REFERENCES `level_maps` (`id`),
  CONSTRAINT `FK_npcs_event_npcs` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_npcs` */

LOCK TABLES `event_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `event_player_characters` */

DROP TABLE IF EXISTS `event_player_characters`;

CREATE TABLE `event_player_characters` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character that is encountered.',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `player_character_id` (`player_character_id`),
  CONSTRAINT `FK_events_event_player_characters` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_player_characters_event_player_characters` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_player_characters` */

LOCK TABLES `event_player_characters` WRITE;

UNLOCK TABLES;

/*Table structure for table `event_quests` */

DROP TABLE IF EXISTS `event_quests`;

CREATE TABLE `event_quests` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `text` text COMMENT 'Flavor text. Go wild. No point to have it, no poitn to not ahve it. Really no point until i figure out how i want this thing to work :(',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  CONSTRAINT `FK_events_event_quests` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_quests` */

LOCK TABLES `event_quests` WRITE;

insert  into `event_quests`(`id`,`event_id`,`text`) values (1,2,'You stand before the planet rock. It\r\ndoesn\'t seem as impressive up close.'),(2,4,'Here, the roots of the mighty oak,\r\ntowering above.'),(3,66,'The sludge has been defeated. Your path \r\nis no longer obstructed.'),(4,70,'You have defeated the dragon. The \r\nvillagers are grateful for your \r\nvalliant acts.'),(5,71,'You have saved the foresters from the \r\ndread gazebo. They are forever in your \r\ndebt.'),(6,72,'You fought change, and have defeated \r\nit. The hamleteers are prepared to \r\nreward you handsomely.'),(7,73,'You have defeated the bear overlords. \r\nThe cave people are prepared to follow \r\nyou to the end of the times.'),(8,74,'The rotting corpses are defeated. The \r\nliving inhabitants can now roam the \r\nstreets.'),(9,75,'the filth has been defeated. The water \r\nis no longer murky.'),(10,76,'You hack away at the sludge obstructing \r\nyour path.'),(11,78,'Not a very comfortable bed, but you \r\nhave found the bed rock, far beneath \r\nthe surface.');

UNLOCK TABLES;

/*Table structure for table `event_stats` */

DROP TABLE IF EXISTS `event_stats`;

CREATE TABLE `event_stats` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `str` int(10) default '0' COMMENT 'Attributes. The values can be positive or negative.',
  `dex` int(10) default '0',
  `int` int(10) default '0',
  `mag` int(10) default '0',
  `con` int(10) default '0',
  `dam` int(10) default '0',
  `dfn` int(10) default '0',
  `gold` int(20) default '0',
  `experience` int(10) default '0',
  `text` text COMMENT 'Description of the event. Adds more flavor than "You lost 10 eperience"',
  `HP` int(10) default '0' COMMENT 'The amound of HP lost (this is taken from current HP)',
  `MP` int(10) default '0' COMMENT 'The amound of MP lost (this is taken from current MP)',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  CONSTRAINT `FK_events_event_stats` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_stats` */

LOCK TABLES `event_stats` WRITE;

insert  into `event_stats`(`id`,`event_id`,`str`,`dex`,`int`,`mag`,`con`,`dam`,`dfn`,`gold`,`experience`,`text`,`HP`,`MP`) values (1,57,-10,0,0,0,0,0,0,0,0,'you feel weaker',0,0),(2,58,-5,0,0,0,-5,0,0,0,0,'A blight upon your health!',-15,0),(3,59,5,5,5,5,5,5,5,5,5,'You feel embiggened',5,5);

UNLOCK TABLES;

/*Table structure for table `event_storm_gates` */

DROP TABLE IF EXISTS `event_storm_gates`;

CREATE TABLE `event_storm_gates` (
  `id` int(11) NOT NULL auto_increment,
  `event_id` int(11) NOT NULL COMMENT 'Parent event',
  `level_id` int(11) NOT NULL COMMENT 'Level ID that will be broken into',
  PRIMARY KEY  (`id`),
  KEY `event_id` (`event_id`),
  KEY `level_id` (`level_id`),
  CONSTRAINT `FK_events_event_storm_gate` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_levels_event_storm_gate` FOREIGN KEY (`level_id`) REFERENCES `levels` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `event_storm_gates` */

LOCK TABLES `event_storm_gates` WRITE;

insert  into `event_storm_gates`(`id`,`event_id`,`level_id`) values (2,82,1);

UNLOCK TABLES;

/*Table structure for table `events` */

DROP TABLE IF EXISTS `events`;

CREATE TABLE `events` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the event',
  `kingdom_id` int(11) NOT NULL COMMENT 'Kingdom where the event may be used.',
  `player_id` int(11) NOT NULL COMMENT 'Player who created the event.',
  `event_rep_type` int(3) NOT NULL COMMENT 'The limit of this type of event that can happen. IE, this event can happen only X number of times, each player_character can only do this event X numer of times, only allied player_characters can do this event X times, etc. If null, then no limit, and it ',
  `event_reps` int(10) default NULL COMMENT 'The number of times. If null, no limits, and the completion of these events will not happen.',
  `name` varchar(32) NOT NULL COMMENT 'The name of the event. This is for reference for the players who make events, such as "wandering moster X", "Dangerous trap Y", etc',
  `event_type` int(3) NOT NULL COMMENT 'The type of event this is, ie creature event, item event, disease event, stat event, etc',
  `armed` tinyint(1) default '0' COMMENT 'This is true if the event has been activated and made available for use in the game. Once active, the event will not be able to be deleted or edited, as the event might be in use somewhere, esp. if it is made public.',
  `cost` int(20) NOT NULL COMMENT 'How much this event costs',
  `text` varchar(255) default NULL COMMENT 'This is what is displayed to player if they have option of picking this event',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `player_id` (`player_id`),
  KEY `event_type` (`event_type`),
  KEY `armed_player_id` (`armed`,`player_id`),
  KEY `armed_kingdom_id` (`armed`,`kingdom_id`),
  KEY `armed_event_type_name` (`armed`,`event_type`,`name`),
  CONSTRAINT `FK_kingdoms_events` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_events` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `events` */

LOCK TABLES `events` WRITE;

insert  into `events`(`id`,`kingdom_id`,`player_id`,`event_rep_type`,`event_reps`,`name`,`event_type`,`armed`,`cost`,`text`) values (1,1,1,1,NULL,'1-5 stone attack',1,1,135500,NULL),(2,1,1,1,NULL,'planet rock',7,1,500,NULL),(3,1,1,1,NULL,'3-5 squirell attack',1,1,500,NULL),(4,1,1,1,NULL,'roots of oak',7,1,500,NULL),(5,1,1,1,NULL,'1-4 bats attack',1,1,500,NULL),(6,1,1,1,NULL,'3-8 bats attack',1,1,500,NULL),(7,1,1,2,5,'1-3 bear attacks',1,1,500,NULL),(8,1,1,1,NULL,'1-2 bear attack',1,1,500,NULL),(9,1,1,2,1,'2-5 cactus encounter',1,1,500,NULL),(10,1,1,3,1,'1 change attack',1,1,7666,NULL),(11,1,1,1,NULL,'1-3 cube attack',1,1,270500,NULL),(12,1,1,2,1,'1 dragon attack',1,1,1000,NULL),(13,1,1,1,NULL,'1-10 filth attack',1,1,1800500,NULL),(14,1,1,2,1,'1 gazebo attacks',1,1,1340,NULL),(15,1,1,2,5,'3-7 filth attack lpc 5',1,1,3000,NULL),(16,1,1,1,NULL,'2-4 ghost attack',1,1,2727500,NULL),(17,1,1,1,NULL,'1-4 giants attack',1,1,252500,NULL),(18,1,1,1,NULL,'4-8 goats attack',1,1,540500,NULL),(19,1,1,1,NULL,'2-12 goblins attack',1,1,297500,NULL),(20,1,1,2,5,'2-4 lawyers attack',1,1,38000,NULL),(21,1,1,1,NULL,'1-3 lepers attack',1,1,27500,NULL),(22,1,1,1,NULL,'1-2 lions attack',1,1,90500,NULL),(23,1,1,2,4,'2-3 manatee attack',1,1,820,NULL),(24,1,1,1,NULL,'1-20 mokeys attack',1,1,500,NULL),(25,1,1,2,1,'1-3 mystery box attack',1,1,950,NULL),(26,1,1,1,NULL,'1-6 peasants attack',1,1,702500,NULL),(27,1,1,2,10,'3-8 rabid trees attaack lpc 10',1,1,1100,NULL),(28,1,1,1,NULL,'1-3 rabid trees',1,1,54500,NULL),(29,1,1,1,NULL,'5-15 rats attack',1,1,1287500,NULL),(30,1,1,2,1,'1-3 rotting corpses attack',1,1,965,NULL),(31,1,1,1,NULL,'2-5 serpents attack',1,1,324500,NULL),(32,1,1,1,NULL,'1-8 skeletons attack',1,1,500,NULL),(33,1,1,1,NULL,'3-6 slime attack',1,1,108500,NULL),(34,1,1,1,NULL,'2-9 sludge attack',1,1,360500,NULL),(35,1,1,1,NULL,'5-13 squirrell attacks',1,1,243500,NULL),(36,1,1,2,4,'3 superfly attack',1,1,1300,NULL),(37,1,1,1,NULL,'1 telephone attack',1,1,90500,NULL),(38,1,1,1,NULL,'9-25 tentacles attack',1,1,153500,NULL),(39,1,1,2,1,'20-30 blocking tentacles (lpc 1)',1,1,555,NULL),(40,1,1,2,1,'1 vampire lpc 1',1,1,800,NULL),(41,1,1,1,NULL,'1-4 walrus attack',1,1,468500,NULL),(42,1,1,2,1,'1 wherewolf attack lpc 1',1,1,580,NULL),(43,1,1,1,NULL,'2-10 zombies attack',1,1,500,NULL),(44,-1,-1,1,NULL,'\nSYSTEM GENERATED',1,1,0,NULL),(45,-1,-1,1,NULL,'\nSYSTEM GENERATED',1,1,0,NULL),(46,1,1,3,1,'spawn kingdom',11,1,500,NULL),(47,1,1,2,1,'recieve 1 axe of axing lpc 1',3,1,2000,NULL),(48,1,1,2,1,'recieve 1 lead axe lpc 1',3,1,750,NULL),(49,1,1,2,1,'recieev 1 mountain top lpc 1',3,1,2500,NULL),(50,1,1,2,1,'recieve 1 rusty dagger',3,1,550,NULL),(51,1,1,2,1,'catch reefer madness',2,1,500,NULL),(52,1,1,2,1,'cure reefer madness',2,1,17600,NULL),(53,1,1,2,5,'cure soul plague',2,1,354000,NULL),(54,1,1,1,NULL,'catch pustulent corpuscles',2,1,500,NULL),(55,1,1,1,NULL,'catch cholera',2,1,500,NULL),(57,1,1,2,1,'stat s-10',8,1,550,NULL),(58,1,1,1,NULL,'stat hp-15,s-5,c-5',8,1,225500,NULL),(59,1,1,2,1,'stat all+5',8,1,725,NULL),(60,1,1,2,1,'recieve 1 good knife',3,1,650,NULL),(65,1,1,2,1,'20 sludge (lpc )',1,1,525,'Attack the sludge'),(66,1,1,2,1,'sludge defeated',7,1,500,'You have defeated teh sludge blocking the stairway down.'),(67,1,1,1,NULL,'Move down 1 level',4,1,500,'Move down one level'),(69,1,1,2,1,'filth attack 30',1,1,600,'Fight the filth'),(70,1,1,2,1,'defeat dragon, become king',7,1,500,'The dragon has been defeated'),(71,1,1,2,1,'defeat gazebo, become king',7,1,500,'You have defeated the Gazebo'),(72,1,1,2,1,'defeat change, become king',7,1,500,'You have defeated change'),(73,1,1,2,1,'defeat bears, become kign of cav',7,1,500,'The bears have been defeated'),(74,1,1,2,1,'defeat rotting corpses, become k',7,1,500,'The rotting corpses are defeated'),(75,1,1,2,1,'defeat filth, become king',7,1,500,'Filth defeated'),(76,1,1,2,1,'20 blocking sludge defeated',7,1,500,'The sludeg is defeated'),(77,1,1,1,NULL,'move up one level',4,1,500,'Take stairs up'),(78,1,1,1,NULL,'Bedrock',7,1,500,'A rock bed'),(79,-1,-1,1,NULL,'\nCastle Siseneg event',10,1,0,NULL),(80,-1,-1,1,NULL,'\nThrone Siseneg event',9,1,0,NULL),(81,-1,-1,1,NULL,'\nKingdom Siseneg entrance',4,1,0,NULL),(82,-1,-1,1,NULL,'\nKingdom Siseneg storm event',12,1,0,NULL),(83,-1,-1,1,NULL,'\nSYSTEM GENERATED',4,1,0,NULL);

UNLOCK TABLES;

/*Table structure for table `feature_events` */

DROP TABLE IF EXISTS `feature_events`;

CREATE TABLE `feature_events` (
  `id` int(11) NOT NULL auto_increment,
  `feature_id` int(11) NOT NULL COMMENT 'ID of the feature',
  `event_id` int(11) NOT NULL COMMENT 'ID of the event',
  `chance` float NOT NULL default '100' COMMENT '% chance that this event will happen when the tile is clicked. So if there are multiple events assigned, then all or none of them could likely happen. Nothing special happens if none of the events occur.',
  `priority` int(3) default NULL COMMENT 'The priority this event has. The events will execute from lowest number to highest, so if someone has a certain monster guarding a door, and the player_character runs before defeating it, the "passing through the door" event will not happen. If any events',
  `choice` tinyint(1) default '0' COMMENT 'If true, then the player has the option to select from any of the other events of the same priority that are likely to happen that also hve this as true. This will mean that the player can decline to chose any. If an event of same priority as other events',
  PRIMARY KEY  (`id`),
  KEY `feature_id` (`feature_id`),
  KEY `event_id` (`event_id`),
  KEY `feature_priority_id` (`feature_id`,`priority`),
  KEY `feature_id_priority_choice` (`feature_id`,`priority`,`choice`),
  CONSTRAINT `FK_events_feature_events` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_features_feature_events` FOREIGN KEY (`feature_id`) REFERENCES `features` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `feature_events` */

LOCK TABLES `feature_events` WRITE;

insert  into `feature_events`(`id`,`feature_id`,`event_id`,`chance`,`priority`,`choice`) values (1,59,1,70,1,0),(2,54,44,65,42,1),(3,14,45,65,42,1),(4,16,3,100,1,0),(5,16,8,10,1,0),(6,16,24,10,1,0),(7,16,28,40,1,0),(8,16,27,40,1,0),(9,17,22,100,1,0),(10,17,26,65,1,0),(11,22,50,100,1,0),(12,22,60,100,1,0),(13,22,60,100,1,0),(14,22,50,100,1,0),(15,22,26,75,1,0),(16,19,13,50,1,0),(17,19,21,10,1,0),(18,19,23,33,1,0),(19,19,33,100,1,0),(20,19,54,50,1,0),(21,19,51,50,1,0),(22,18,1,60,1,0),(23,18,9,100,1,0),(24,18,31,100,1,0),(25,21,47,100,1,1),(26,20,1,10,1,0),(27,20,17,70,1,0),(28,20,18,100,1,0),(29,20,57,10,1,0),(30,55,7,70,1,0),(31,55,8,100,1,0),(32,55,18,100,1,0),(33,55,16,40,1,0),(34,55,19,100,1,0),(35,56,11,100,1,0),(36,56,17,100,1,0),(37,56,49,100,2,1),(38,15,14,1,1,1),(39,15,3,100,1,0),(40,15,24,60,1,0),(41,57,1,100,1,0),(42,57,16,100,1,0),(43,58,1,100,1,0),(44,58,58,100,1,0),(45,58,25,100,1,0),(46,59,2,100,2,0),(48,25,46,100,2,1),(49,60,22,100,1,0),(50,60,26,100,1,0),(51,60,36,100,1,0),(56,68,67,100,1,0),(58,69,12,100,1,0),(59,69,46,100,3,1),(60,70,14,100,1,0),(61,70,71,100,2,0),(62,70,46,100,3,1),(63,69,70,100,2,0),(64,71,10,100,1,0),(65,71,72,100,2,0),(66,71,46,100,3,1),(67,72,7,100,1,0),(68,72,8,100,2,0),(69,72,8,100,3,0),(70,72,8,100,5,0),(71,72,7,100,4,0),(72,72,8,100,6,0),(73,72,8,100,7,0),(74,72,8,100,8,0),(75,72,73,100,9,0),(76,72,46,100,10,1),(77,73,30,100,1,0),(78,73,30,100,2,0),(79,73,30,100,3,0),(80,73,74,100,4,0),(81,73,46,100,5,1),(82,74,69,100,1,0),(83,74,69,100,2,0),(84,74,75,100,3,0),(85,74,46,100,4,1),(86,75,38,100,1,0),(87,75,13,50,1,0),(88,75,34,50,1,0),(89,76,65,100,1,0),(90,76,76,100,2,0),(91,76,67,100,3,0),(92,84,48,50,1,1),(93,84,37,20,1,0),(94,84,19,100,1,0),(95,84,50,50,1,1),(96,82,42,100,1,0),(97,82,29,75,1,0),(98,86,6,100,1,0),(99,86,40,60,1,0),(100,79,50,40,1,0),(101,79,6,60,1,0),(102,79,29,50,1,0),(103,79,21,100,1,0),(104,83,50,100,1,0),(105,83,50,100,1,0),(106,83,13,100,1,0),(107,83,29,100,1,0),(108,81,77,100,1,0),(110,78,32,100,1,0),(111,78,43,100,1,0),(112,78,19,10,1,0),(113,78,50,33,1,0),(114,77,34,100,1,0),(115,77,29,100,1,0),(116,77,32,100,1,0),(117,85,78,100,1,0),(118,85,37,100,1,0),(119,80,57,10,1,0),(120,80,55,10,1,0),(121,80,33,100,1,0),(122,80,29,100,1,0),(123,80,38,100,1,0),(124,87,38,100,1,0),(125,88,25,25,1,0),(126,88,16,100,1,0),(127,88,43,100,1,0),(128,88,32,100,1,0),(129,89,4,100,1,0),(130,66,79,100,42,1),(131,66,80,100,42,1),(132,67,81,100,42,1),(133,67,82,100,42,1),(134,66,83,100,42,1);

UNLOCK TABLES;

/*Table structure for table `features` */

DROP TABLE IF EXISTS `features`;

CREATE TABLE `features` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(64) default NULL COMMENT 'Name of the feature',
  `description` varchar(256) default NULL COMMENT 'Description of the feature',
  `action_cost` int(1) default NULL COMMENT 'how many actions will be used if player_character clicks the feature',
  `image_id` int(11) NOT NULL COMMENT 'ID of the image represented by the feature',
  `player_id` int(11) NOT NULL COMMENT 'ID of the user who created the feature',
  `world_feature` tinyint(1) default NULL COMMENT 'True if this is a feature available only in the world (the images have different dimensions)',
  `kingdom_id` int(11) NOT NULL COMMENT 'Kingdom id of the home kingdom where this feature was made, always available to this kingdom',
  `public` tinyint(1) default NULL COMMENT 'True if this feature is available to other kingdoms for use. This is false for all world features',
  `cost` int(20) default NULL COMMENT 'How much it costs the king to build this.',
  `num_occupants` int(10) NOT NULL default '0' COMMENT 'The number of occupants that can live here. Only relevant to housing features. The sum of these for a kingdom is the max number of peasants it can have, regardless of the peasant growth rate',
  `armed` tinyint(1) default '0' COMMENT 'Indicated if the feature has been made available for use int he game. If true, then it cannot be edited or destroyed through the menu.',
  `store_front_size` int(2) default '0' COMMENT 'The number of stores that can be set up. Min 0, max 9.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `name` (`name`),
  KEY `image_id` (`image_id`),
  KEY `player_id` (`player_id`),
  KEY `kingdom_id_public_world` (`world_feature`,`kingdom_id`,`public`),
  KEY `world_feature_kingdom_id` (`world_feature`,`kingdom_id`),
  KEY `world_feature_public` (`world_feature`,`public`),
  KEY `armed_wrold_feature_name` (`armed`,`world_feature`,`name`),
  CONSTRAINT `FK_images_features` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`),
  CONSTRAINT `FK_kingdoms_features` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_features` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `features` */

LOCK TABLES `features` WRITE;

insert  into `features`(`id`,`name`,`description`,`action_cost`,`image_id`,`player_id`,`world_feature`,`kingdom_id`,`public`,`cost`,`num_occupants`,`armed`,`store_front_size`) values (8,'Storefront','A regular store that a marchant can sell shit at',0,58,1,0,1,1,510,0,1,1),(9,'SuperMarket','Has many shops',0,60,1,0,1,1,770,0,1,3),(14,'Section 8 Housing','Peasants and other poor beings live in these run down buildings.',1,84,1,0,1,1,10500,100,1,0),(15,'Light Deciduous Wood','A light wood populated with pine trees and evergreens',1,85,1,1,1,0,1526,0,1,0),(16,'Dense Pine Forest','A dense pine forest, lost of trees, tight together, etc',1,86,1,1,1,0,57380,0,1,0),(17,'Grassland','Lots of grass. Thats about it.',1,87,1,1,1,0,793500,0,1,0),(18,'Desert','A landscape with little water',1,88,1,1,1,0,461500,0,1,0),(19,'Swamp','Mosquitoes and humidity, and bog',1,89,1,1,1,0,1938541,0,1,0),(20,'Mountain','Jagged rocks, dangerous climbing',1,90,1,1,1,0,929110,0,1,0),(21,'The axe tree','A tree that grows axes.',1,91,1,1,1,0,4500,0,1,0),(22,'Field of knives','A field that grows knives occasionally',1,92,1,1,1,0,707800,0,1,0),(25,'Test kingdom spawnination feature','Click here to found a kingdom. This should only be used to found the seed kingdom.',1,208,-1,1,-1,0,1000,0,1,0),(49,'\nEmpty','This is the empty feature. The default when a map is generated. Has no associated feature events.',0,139,-1,0,-1,0,500,0,1,0),(54,'housing','Crappy houses for the peasantry',1,157,1,0,1,1,3500,30,1,0),(55,'Mountain Cave','',1,203,1,1,1,0,3567200,0,1,0),(56,'Mountain Peak','',1,204,1,1,1,0,528500,0,1,0),(57,'Giant Rock','A giant rock. Not too special',1,205,1,1,1,0,2863500,0,1,0),(58,'Crater','A hole in the ground',1,206,1,1,1,0,363400,0,1,0),(59,'Planet Rock','A mysterious round boulder...',1,207,1,1,1,0,136500,0,1,0),(60,'Plains','flatter than grassland',1,209,1,1,1,0,796100,0,1,0),(66,'\nCastle Siseneg',NULL,0,215,1,0,0,0,0,0,1,0),(67,'\nKingdom Siseneg entrance',NULL,0,215,1,1,0,0,0,0,1,0),(68,'Stairs down one level','Stairs down',1,217,1,0,1,0,1000,0,1,0),(69,'Village','A quanit little village',1,218,1,1,1,0,4000,0,1,0),(70,'Forest Tribe','tribe living in the forests',1,219,1,1,1,0,4680,0,1,0),(71,'Magic Hamlet','Its magical',1,220,1,1,1,0,9666,0,1,0),(72,'Cave Complex','Lots of caves, lots of places to hide',1,221,1,1,1,0,7000,0,1,0),(73,'Pestelant City','The dead walk the streets',1,222,1,1,-1,0,7790,0,1,0),(74,'Sunken City','A city sunken under the waves',1,223,1,1,-1,0,4400,0,1,0),(75,'Water','Deep enough to drown in',1,224,1,1,-1,0,2315000,0,1,0),(76,'Dirty Stairs Down 1 Level','These stairs are completely filthy',1,225,1,0,1,0,3050,0,1,0),(77,'Dungeon Corridor','A chilly slimy place',1,226,1,0,1,0,1649000,0,1,0),(78,'Dungeon Cell','A cold place to be',1,227,1,0,1,0,299363,0,1,0),(79,'Dungeon Alcove','',1,228,1,0,1,0,1316440,0,1,0),(80,'Sewer','Raw sewage',1,229,1,0,1,0,1550610,0,1,0),(81,'Stairs Up','Stairs leading upward',1,230,1,0,1,0,1000,0,1,0),(82,'Den','',1,231,1,0,1,0,1289160,0,1,0),(83,'Rubbish','nothing of value',1,232,1,0,1,0,3090700,0,1,0),(84,'Anvil','Use by blacsmith',1,233,1,0,1,0,389800,0,1,0),(85,'Bedrock','',1,234,1,0,1,0,91500,0,1,0),(86,'Dungeon Crypt','Death things',1,235,1,0,1,0,1960,0,1,0),(87,'Dark Dungeon Well','Putrid liquid fills this stone hole',1,236,1,0,1,0,154000,0,1,0),(88,'Dungeon Catacomb','Dead are asleep',1,237,1,0,1,0,2729475,0,1,0),(89,'Roots of Oak','',1,238,1,0,1,0,1000,0,1,0);

UNLOCK TABLES;

/*Table structure for table `forum_nodes` */

DROP TABLE IF EXISTS `forum_nodes`;

CREATE TABLE `forum_nodes` (
  `id` int(11) NOT NULL auto_increment,
  `player_id` int(11) NOT NULL COMMENT 'Player who created this node',
  `forum_node_id` int(11) default NULL COMMENT 'Parent node, if null, then its probably a board node',
  `name` varchar(64) default NULL COMMENT 'Title of the node',
  `text` text COMMENT 'Text that is displayed',
  `datetime` datetime default NULL COMMENT 'When the node was created',
  `is_locked` tinyint(1) default '0' COMMENT 'True if this node is locked; it nor any of its children may be edited by anyone except high level mod',
  `is_hidden` tinyint(1) default '0' COMMENT 'True if this node is hidden, it may be edited by author or mods, but no one otehr than author or mods can see it or its children',
  `is_deleted` tinyint(1) default '0' COMMENT 'True fi the node is deleted. All children are considered deleted too, and no posting or viewing of any of those can take place, save for a high level mod',
  `is_mods_only` tinyint(1) default '0' COMMENT 'True if the node is only for the mods use. No nonmod may post children to it nor view',
  `elders` int(1) NOT NULL default '0' COMMENT 'Number of nodes it would take to get to a node with a null parent. Ie, level of 2 is a post, level of 1 is a thred, level of 0 is a board.',
  `edit_notices` text COMMENT 'Edit notices of who edited teh node when. really only used at the post level. nothing will be collected at the moment for the thred or board level.',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `forum_node_id` (`forum_node_id`),
  KEY `name` (`name`),
  KEY `datetime` (`datetime`),
  KEY `forum_node_id_is_locked` (`forum_node_id`,`is_locked`),
  KEY `forum_node_id_is_hidden` (`forum_node_id`,`is_hidden`),
  KEY `forum_node_id_is_deleted` (`forum_node_id`,`is_deleted`),
  KEY `forum_node_id_is_mods_only` (`forum_node_id`,`is_mods_only`),
  CONSTRAINT `FK_forum_nodes_forum_nodes` FOREIGN KEY (`forum_node_id`) REFERENCES `forum_nodes` (`id`),
  CONSTRAINT `FK_players_forum_nodes` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `forum_nodes` */

LOCK TABLES `forum_nodes` WRITE;

insert  into `forum_nodes`(`id`,`player_id`,`forum_node_id`,`name`,`text`,`datetime`,`is_locked`,`is_hidden`,`is_deleted`,`is_mods_only`,`elders`,`edit_notices`) values (1,-1,NULL,'General Discussions','Talk about stuff','2008-11-08 11:52:46',0,0,0,0,0,NULL),(2,-1,NULL,'Bug reports','Let us know when something breaks','2008-11-08 11:53:02',0,0,0,0,0,NULL),(3,-1,NULL,'Hints','Where to go to find things','2008-11-08 12:02:51',0,0,0,0,0,NULL),(4,-1,NULL,'Just for Mods','No nonmods allowed','2008-11-08 12:06:20',0,0,0,1,0,NULL);

UNLOCK TABLES;

/*Table structure for table `forum_restrictions` */

DROP TABLE IF EXISTS `forum_restrictions`;

CREATE TABLE `forum_restrictions` (
  `id` int(11) NOT NULL auto_increment,
  `player_id` int(11) NOT NULL COMMENT 'ID of the player with this posting limitation',
  `restriction` int(3) NOT NULL COMMENT 'The restriction code',
  `expires` date default NULL COMMENT 'when this restriction expires. Null means no expiration.',
  `given_by` int(11) NOT NULL COMMENT 'Who gave the restriction',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `player_id_expires` (`player_id`,`expires`),
  KEY `given_by` (`given_by`),
  KEY `player_id_expires_restriction` (`player_id`,`expires`,`restriction`),
  CONSTRAINT `FK_forum_restrictions` FOREIGN KEY (`given_by`) REFERENCES `players` (`id`),
  CONSTRAINT `FK_players_forum_restrictions` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `forum_restrictions` */

LOCK TABLES `forum_restrictions` WRITE;

UNLOCK TABLES;

/*Table structure for table `genocides` */

DROP TABLE IF EXISTS `genocides`;

CREATE TABLE `genocides` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who killed the last of this creature',
  `level` int(10) NOT NULL COMMENT 'Level of the player_character at the time of anhiliation',
  `when` datetime NOT NULL COMMENT 'when the player_character killed the last of these',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the cerature wiped out',
  `how_eliminated` int(3) NOT NULL COMMENT 'How the creature was wiped out, ie, hand to hand combat, magic, disease',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `creature_id` (`creature_id`),
  CONSTRAINT `FK_creatures_genocides` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_player_characters_genocides` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `genocides` */

LOCK TABLES `genocides` WRITE;

UNLOCK TABLES;

/*Table structure for table `healer_skills` */

DROP TABLE IF EXISTS `healer_skills`;

CREATE TABLE `healer_skills` (
  `id` int(11) NOT NULL auto_increment,
  `max_HP_restore` int(10) default NULL COMMENT 'maximum HP restored at this level with this amount of min sales',
  `max_MP_restore` int(10) default NULL COMMENT 'maximum MP restored at this level with this amount of min sales',
  `disease_id` int(11) default NULL COMMENT 'should be similiar to blacksmith, disease cured at this level with this min sales',
  `max_stat_restore` float default NULL COMMENT 'player_character stats are restored to this % of the base stat at this level',
  `min_sales` int(20) NOT NULL COMMENT 'Minimum sales for these attributes',
  PRIMARY KEY  (`id`),
  KEY `min_sales` (`min_sales`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_diseases_healer_skills` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `healer_skills` */

LOCK TABLES `healer_skills` WRITE;

insert  into `healer_skills`(`id`,`max_HP_restore`,`max_MP_restore`,`disease_id`,`max_stat_restore`,`min_sales`) values (2,5,0,1,0,0),(3,30,30,NULL,30,300),(4,50,50,5,40,1000),(5,60,60,8,45,2500),(6,0,0,13,0,2500),(7,70,70,2,50,5000),(8,80,80,7,55,10000),(9,90,90,9,65,15000),(10,0,0,14,0,15000),(11,100,100,11,70,25000),(12,0,0,12,0,10000),(13,125,125,NULL,70,40000),(14,200,200,NULL,75,75000),(15,400,400,15,95,100000),(16,500,500,NULL,100,250000);

UNLOCK TABLES;

/*Table structure for table `healing_spells` */

DROP TABLE IF EXISTS `healing_spells`;

CREATE TABLE `healing_spells` (
  `id` int(11) NOT NULL auto_increment COMMENT 'Id of the healing spell',
  `name` varchar(32) NOT NULL COMMENT 'name of the spell',
  `description` varchar(256) default NULL COMMENT 'description of the spell',
  `min_level` int(5) default NULL COMMENT 'Minimum level required to cast the spell',
  `min_heal` int(10) default NULL COMMENT 'Minimum amount healed',
  `max_heal` int(10) default NULL COMMENT 'Maximum amount healed',
  `disease_id` int(11) default NULL COMMENT 'Disease ID cured, if applicable. If null, no disease cured. If 0, all diseases cured. If another number, that disease is cured.',
  `mp_cost` int(10) default NULL COMMENT 'MP cost of the spell',
  `cast_on_others?` tinyint(1) default NULL COMMENT 'If true, this spell can be cast on others, including NPCs as wll as other player_characters',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`),
  KEY `min_level` (`min_level`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_diseases_healing_spells` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `healing_spells` */

LOCK TABLES `healing_spells` WRITE;

insert  into `healing_spells`(`id`,`name`,`description`,`min_level`,`min_heal`,`max_heal`,`disease_id`,`mp_cost`,`cast_on_others?`) values (1,'Antifungal','Cures fungal stuff',2,0,0,1,10,1),(2,'Minor Heal','a small heal',0,1,10,NULL,1,0),(3,'Cure for AIDS','will cure those aids',10,10,30,2,20,1),(4,'Moderate Heal','Heals moderate wounds',5,5,20,NULL,5,1),(5,'Cootie shot','Cures cooties',7,0,0,5,10,1),(6,'Magic Stitches','Cures some serious wounds',14,20,50,NULL,15,1),(7,'Clotting Spell','Stops bleeding',10,10,30,7,15,0),(8,'Restore Health','Heals some health',20,30,80,8,30,0),(9,'Rot Cure','Cures the rot',25,0,0,9,40,1),(10,'Physical Restore','Cres serious damage',25,60,180,NULL,70,0),(11,'Revitalize','heals very serious wounds',33,100,250,NULL,100,1),(12,'AntiCholera','cures cholera',17,0,0,12,30,1),(13,'Still','cures the shakes',40,0,0,6,200,0),(14,'Rabie Cure','does what it says it does',9,0,0,13,35,0),(15,'Mind Heal','Cures brain damage',16,20,30,14,23,0);

UNLOCK TABLES;

/*Table structure for table `images` */

DROP TABLE IF EXISTS `images`;

CREATE TABLE `images` (
  `id` int(11) NOT NULL auto_increment,
  `image_text` varchar(2500) default NULL COMMENT 'the ascii image',
  `player_id` int(11) NOT NULL COMMENT 'user id of the player who made the image',
  `public` tinyint(1) NOT NULL default '0' COMMENT 'if true, the image is useable by other kingdoms',
  `kingdom_id` int(11) NOT NULL COMMENT 'home kingdom of the image, image is always available to be assigned in the home kingdom',
  `image_type` int(3) NOT NULL COMMENT 'type of image, ie world feature, kingdom feature, creature, avatar',
  `picture` varchar(256) default NULL COMMENT 'The location of the actual picture, if one exists. Future version of the game may just involve pictures instead of ascii graphics, in case the ascii is just too fucking ugly, whichit probably will be.',
  `name` varchar(32) NOT NULL COMMENT 'The name of the image',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `type` (`image_type`),
  KEY `player_id` (`player_id`),
  CONSTRAINT `FK_kingdoms_images` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_images` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `images` */

LOCK TABLES `images` WRITE;

insert  into `images`(`id`,`image_text`,`player_id`,`public`,`kingdom_id`,`image_type`,`picture`,`name`) values (1,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n  --\"\"\"\"--\r\n  || \\|  |\r\n  ||_.. ||\r\n   \\3.. ||\r\n   | .. --\r\n   ------~ \r\n    | | |\r\n    |_|_|\r\n   (@#)##) ',-1,0,-1,4,NULL,'DEFAULT NPC'),(42,' /~\\          /~\\\r\n|   \\        /   | \r\n \\   \\      /    /\r\n  \\___######____/\r\n     ## ## ##\r\n     MMMMMMMM\r\n      | || | \r\n        ||',1,0,1,3,NULL,'Superfly image'),(45,'      ___      \n     /   \\     \n    /     \\    \n   /   O   \\   \n   |        \\  \n   |   __    \\ \n   |   ||    | \n===============\n               \n               ',1,0,1,1,NULL,'building image'),(56,'  /\\\r\n /  \\ /\\      \r\n  || /  \\  /\\ \r\n      ||  /  \\ \n /\\     /\\ || \r\n/  \\/\\ /  \\ \r\n ||/  \\ ||  \r\n    ||/\\     /\\\n kl\r\nkl             \n',1,0,1,2,NULL,'This is the forests'),(58,' /|---------|\\ \n ||  C==D   || \n ||---------|| \n |           | \n | #  MM  #  | \n |    MM     | \n===============\n               \n               \n               ',1,0,1,1,NULL,'Storefront image'),(60,'     vv\r\n    vvvvv\r\n    m   m\r\n    m   m\r\n    m   m\r\nmmmmmmmmmmmmmm\r\nm            m\r\nm            m\r\nm            m\r\nm            m\r\n',1,0,1,1,NULL,'SuperMarket image'),(61,'   \r\n     <~~>\r\n     /  \\\r\n    |    |\r\n  OO  ()  OO\r\n  }}      {{\r\n  ==========\r\n  ==========\r\n  ||      ||\r\n  ||      ||   \n',-1,0,-1,1,NULL,'DEFAULT THRONE'),(82,'\r\n\r\n\n___         ___\n| |__  __  _| |\n\\    ||  ||   /\n |    ____   |\r\n |    |##|   |\r\n |    |##|   |\r\n===============\n\n',-1,0,-1,1,NULL,'DEFAULT CASTLE'),(84,'    *\r\n     *\r\n      *\r\n      __ \r\n    __!!_\r\n   /     \\\r\n  /  #  #%.\r\n  | HH    |\r\n #| HH# @ #  #\r\n###############\n',1,0,1,1,NULL,'Section 8 Housing image'),(85,' /\\\r\n/  \\\r\n ||      /\\\r\n        /  \\\r\n     /\\  ||\r\n    /  \\\r\n     ||   /\\\r\n  /\\      HH \r\n.             .\n\n',1,0,1,1,NULL,'Light Deciduous Wood image'),(86,'               \n /\\        /\\  \n/  \\      /  \\ \n ||    /\\  ||  \n   /\\ /  \\     \n  /  \\ ||   /  \n   ||      /\\  \n /\\      /\\    \n/  \\ /\\ /  \\   \n || /  \\ || /  ',1,0,1,1,NULL,'Dense Pine Forest image'),(87,' \'\'\'\'  \'  \' \'  \n\'  \'\'\'  \'\' \' \'\'\n \'\' \' \'\' \' \' \'\'\n\'  \'\'  \' \'  \' \'\n \'\'  \' \' \'\'  \' \n\' \' \'\' \'  \' \' \'\n \' \'\'  \' \' \'\' \'\n\'\'\'\' \' \'\' \'\' \' \n \' \' \'\' \' \' \'\'\'\n\' \' \'\' \' \' \' \' \'\n',1,0,1,1,NULL,'Grassland image'),(88,' . .      . \r\n             \r\n  .    .     \r\n             .\r\n .   .    . \r\n\r\n .     .     .\r\n\r\n   .      .    \n\n',1,0,1,1,NULL,'Desert image'),(89,',,.,..-,.,.-,.-\n,.-,.,.-,.,-.-.\n,.,.,-.,.,.-,.,\n,-.\',-,.\',-,-\',\n,-,..-,\',-,-\',-\n,.-,.-,.-\',.-,.\n,.\'-,.,-,.-\'.,-\n-\',.-,.-,.\'-,.,\n-\'-,.-,-.-,-.,-\n\r\n',1,0,1,1,NULL,'Swamp image'),(90,'      /\\       \n  /\\ / \\\\  /\\  \n / \\\\  /\\ / \\\\ \n/   \\\\/ \\\\  /\\ \n   /\\   /\\ / \\\\\n  / \\\\ / \\\\   \\\n /   \\/\\    /\\ \n /\\  / \\\\  /~\\\\\n/  \\/   \\\\// \\\\\n               ',1,0,1,1,NULL,'Mountain image'),(91,'   ~~ ~~~~\r\n ~~\\~ ~~  ~~\r\n  ~~ ~ / ~~- ~ \n  ~~~ ~  ~~ ~\r\n     | |   |\r\n     |O|  <|D\r\n     | |\r\n .  /  |\\ .   .\n. ./ / . \\ .  .\n .   .  .   . . \n',1,0,1,1,NULL,'The axe tree image'),(92,'  __    __\r\n  ||    ||\r\n ====  ==== \r\n         __    \n         ||    \n        ====  \r\n  __    \r\n  ||   \r\n ====          \n\n',1,0,1,1,NULL,'Field of knives image'),(93,'   /~~~\\\r\n   |   |\r\n   |   | \r\n   \\/\\ /\\\r\n   { ^_^ }\r\n    |---|\r\n    66666\r\n    {} {}',1,0,1,3,NULL,'Squirrel image'),(94,' ____ _____\r\n/     o    \\_____\r\n\\___     o       \\\r\n    \\____________/',1,0,1,3,NULL,'Slime image'),(95,'    __\r\n   /||\\\r\n   ||||\r\n _ ||||\r\n/|\\||||  _\r\n||||||| /|\\\r\n||\\|||| |||\r\n\\\\--|||_/||\r\n   |||--//\r\n   ||||\r\n',1,0,1,3,NULL,'cactus image'),(96,'\r\n  \\__/\r\n  @..@\r\n   ~/\\---\\-* \r\n   W\\____| \r\n     || ||\r\n     == ==',1,0,1,3,NULL,'Goat image'),(109,'\r\n            /\\\'\\   \r\n      _|_ <_XX  }\r\n     /   \\  ||./ \r\n    / === \\ || \r\n  ------\"\"_ ||\r\n  |    |\' _@d3\r\n  |    | :; ||\r\n  \\    /\':; ||\r\n   \\__/\'\'\'  ||\r\n    [M] [[> \\/',-1,0,-1,4,NULL,'GUARD IMAGE'),(121,'MMMMMMMMMMMM\r\nMMMM\r\nmMMMMMMMMMMMM\r\nMMMMMMMMMMMM\r\n      MMMMMMMM\r\n         MMMMMMM\r\nMMMMMMMMMMMM\r\nmMMMMMMMM',-1,0,-1,4,NULL,'floss\'s character image'),(139,'               \n\n\n\n\n\n\n\n\n\n',-1,0,-1,1,NULL,'Empty image'),(140,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',-1,0,-1,4,NULL,'DEFAULT PC IMAGE'),(150,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',1,0,1,4,NULL,'Fhugue\'s character image'),(157,'               \n   /====\\      \n  |======|     \n  |==+===|     \n  |======|     \n  |==  ==|     \n /|==  ==|\\    \n============   \n               \n               ',1,0,1,1,NULL,'housing image'),(158,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',-1,0,-1,4,NULL,'DEFAULT PC IMAGE'),(171,'   .--\\\r\n   }o.\'\\\r\n   \\~\"|\\\r\n   - - -\\\r\n  ]   { }\r\n  \\x x|.|\r\n  -----w-\r\n (_ _ _ )\r\n   ~ ~| |\r\n  ||  | |\r\n  \\/  ~~~',1,0,1,3,NULL,'Leper image'),(172,'        ____\r\n    ## /  / \\\r\n   @## |  | |\r\n   ====|   \\   \r\n   ===/ &   |\r\n   ===   ^  |\r\n    ==|  #  &\\\r\n       --  |\r\n      /     |\r\n     |      |\r\n     (__ _ _\\\r\n      / | | \\\r\n   \"\"\"\"\"\"\"\"\"\"\"\"\"       ',1,0,1,3,NULL,'Peasant image'),(175,' \r\n \r\n     ----\r\n    /    __\r\n   *    C..o \r\n    \\   ( v)\r\n      \\{{ }}\r\n      /| ~~\\_\r\n      ^ ^ ^ ',1,0,1,3,NULL,'monkey image'),(176,'  \\ !#  *| /#\r\n  #% Q# ,6 # /\r\n * # ?  w @&+ ##\r\n# #\\{\\~&/* ` # 8\r\n # % O\\/O # / *\r\n  \\ | ___ |    # \r\n   =| \"V\" |===|   \r\n ~/ |  `\" |   |*\r\n    | \'  #|\r\n  /-d {{ mm-\\\r\n -   |mmm\\   -\\\r\n  m m     \\ mm  ',1,0,1,3,NULL,'Rabid Tree image'),(177,'\r\n O..O\r\n =\\/=_\r\n |\"\"|,\\==--\r\n ~~~~~~\r\n   ',1,0,1,3,NULL,'Rat image'),(178,' ___ ,, ___\r\n/ | \\oo/ | \\\r\n     \'\' ',1,0,1,3,NULL,'Bat image'),(179,'\r\n ____________\\_\r\n=~~======~~~===\\__/__\r\n \\==~~~======\"======\r\n  == \\=====/  \\====/ \r\n             ~~~~  ',1,0,1,3,NULL,'Sludge image'),(180,'  \\    /\r\n  |\\--/|\r\n   {><}\r\n   |--| |\\\r\n   (==) ||\r\n(@======|3\r\n   |\"#\"=|\r\n  /=# #=|',1,0,1,3,NULL,'Goblin image'),(181,'  _____ \r\n /    /|\r\n/____/ |\r\n|    | |\r\n|    | /\r\n|____|/',1,0,1,3,NULL,'Cube image'),(182,'\r\n    _____\r\n  ,\'     `.\r\n /   o o   \\\r\n |    o    |\r\n |         |\r\n |         |\r\n |         |\r\n \\_/-\\_/-\\_/\r\n',1,0,1,3,NULL,'Ghost image'),(183,'\r\n   _.--._\r\n  / q_p \\\\ \r\n \'  O O  \'\'\r\n | .\\ /. ||\r\n | ||\" | ||\r\n | ||  | ||\r\n \"\"\'\"  \"\"\'\"',1,0,1,3,NULL,'Bear image'),(184,'\r\n   .-.\r\n  O  O\\.\r\n  \\.._/ \'  \r\n  /I#I   \\  /\r\n \'|I I  | |- |\r\n ||     | |  /\r\n \\________/_/',1,0,1,3,NULL,'Walrus image'),(185,'     ,---._         \r\n  _,O      `-- - ~. ~  \r\n  \\__ .   .  _    -- \r\n     `-\\  |~~ ~`-\'`\r\n       `-~         ',1,0,1,3,NULL,'Manatee image'),(186,'\r\n    _.O.\r\n >-\'    `\'~~--=---~~----~=~\r\n   `~~~~~~=~=~~~==~~=~~=\'',1,0,1,3,NULL,'Serpent image'),(187,' \r\n \\|||/\r\n -0V0-\r\n = I =\r\n =\'^\'=\r\n  ~~~ ',1,0,1,3,NULL,'Lion image'),(188,'\r\n   ,~-~.\r\n  / -  -|\r\n  |   \\  \\\r\n  | -~ \\ |\r\n  \\______/',1,0,1,3,NULL,'Stone image'),(189,'        ..\r\n       \'--\' \r\n   .~~//||\\\\~~.\r\n  {\\: :----: :/}\r\n  { \\: : : : / }\r\n  { /\\: : : /\\ }\r\n  { }|######|[ ]\r\n  { }|######|[ ]\r\n  {88|  ##  |666\r\n  `8;\'  ##  |\r\n  <;>|__##__|\r\n  <O>[..||.>> \r\n   V [..||.>>>\r\n     @@@v@@@@>',1,0,1,3,NULL,'Giant image'),(190,'\r\n     ,~~-.\r\n    /o/ `~`\r\n   ;<     \'\r\n   \':o\r\n   |\'\\\r\n   `\'v\\\r\n   /v\'`\r\n  ~~~~~~',1,0,1,3,NULL,'Tentacle image'),(191,'\r\n     _____________\r\n    /             \\\r\n   /  ,---------.  \\\r\n  ====   .~\'~.   ====\r\n    /   \'* * *\'   \\\r\n   \'____\\\'-~-\'/____\'\r\n   |_______________|',1,0,1,3,NULL,'Telephone image'),(192,'\r\n      |\\/|\r\n##--. {><}~-. \r\n=~~~  =}{= ~\\\\\r\n    #  \'\'  : \\\\\r\n    .\\\"\"\"\" / \'\"\r\n     ||\'\'||\r\n     ||  \\\\\r\n     MM  MM',1,0,1,3,NULL,'Wherewolf image'),(193,'\r\n    ,...\r\n    |% 3\r\n    `|=/\r\n   m~   \'\\___\r\n   w--|.`\\-=`;!\r\n   --/~\\|  \r\n    \\;;?/\r\n    =====\r\n    ( _ )\r\n    |/ ||\r\n    |  ||\r\n    +  \\==',1,0,1,3,NULL,'Zombie image'),(194,'\r\n     .~.\r\n    |O O|\r\n     |\"|\r\n      -\r\n   0--|--0\r\n   |--|--||\r\n   |-/\'\\-||\r\n8==*  :   |\r\n   .-_:_-.*\r\n   |o _ o|\"\r\n    -\' \'- \"\r\n    |   |\r\n    |   |\r\n    O   O\r\n    I   I\r\n    I   I\r\n  #MM#M##M#',1,0,1,3,NULL,'Skeleton image'),(195,'------------\r\n|?    _   ?|\r\n|    / \\   |\r\n|      /   |\r\n|     |    |\r\n|          |\r\n|?    *   ?|\r\n------------',1,0,1,3,NULL,'Mystery Box image'),(196,'  __._._           _._.__\r\n *  / | \\  .  .   / | \\  *\r\n/~~/~~\'~~\\ \\,,/  /~~\'~~\\~~\\\r\n         +\'}oo{\'+\r\n           !||!   \r\n       = ][ \"\" ][ =\r\n    \"\"  \"\"\"\"\"\"\"\"\"\" \" \"\"\r\n      \" \"\" \" \"\"  \"\" \"\r\n        \"\"  \"\" \"\" \"\"',1,0,1,3,NULL,'Dragon image'),(197,'     ~     ~\r\n ~      ~    \r\n     ~      ~\r\n  ^&**  #%^&\r\n.~^&~***&*&***.\r\n===============',1,0,1,3,NULL,'Filth image'),(198,'   \\,~.\r\n   }\\o-\\\r\n  .------$\r\n  |      /\r\n  |     /\r\n  |     |\r\n  |   _/\r\n  `~~\'||\r\n    &&&&&',1,0,1,3,NULL,'Vampire image'),(199,'       __\r\n      /  \\\r\n     ------\r\n      |~~|\r\n      \'--\'\r\n   .-/\\/\\/\\-.\r\n  /    \\/    \\\r\n  | !  ||  ! |\r\n  | !  ||  ! |\r\n  | !  \\/  ! |\r\n  \'-!      !-\'\r\n  ===------\'++\r\n  |#||     | |\r\n  |#||  |  | |\r\n  ===|  |  | |\r\n     |  |  | |\r\n    $$$$$$$$$*',1,0,1,3,NULL,'Lawyer image'),(200,'      =======\r\n  ===============\r\n===================\r\n ||  ||     ||  ||\r\n ||  ||     ||  ||\r\n ||==||     ||==||\r\n ||  ||=====||  ||\r\n =================\r\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"',1,0,1,3,NULL,'Gazebo image'),(201,'    \r\n ~    ,3\r\n    `|=/   ~\r\n   m~   \'\\___\r\n   w--|.`\\-=`;!\r\n   --/~\\|  ~\r\n~   \\;;?~~\r\n    =====~~~~~',1,0,1,3,NULL,'Rotting Corpse image'),(202,'          //\\\r\n         //\\ \\\r\n        // \\\\ \\\r\n       // / \\\\ \\\r\n      // /   \\\\ \\\r\n     // /     \\\\ \\\r\n    // /       \\\\ \\\r\n   // /         \\\\ \\\r\n  // /_____________ \\\r\n // /----------------\\\r\n//_/------------------\\',1,0,1,3,NULL,'Change image'),(203,'   /\\  /\\      \n  / \\\\/ \\\\  /\\ \n /  \\\\  /\\ / \\\\\n/    \\\\/ \\\\ /\\ \n  /\\    /\\ /\\\\\\\n / \\\\  / \\\\    \n/   \\ *#*    /\\\n /\\  /###\\  / \\\n/  \\/}###\\\\/  \\\n               ',1,0,1,1,NULL,'Mountain Cave image'),(204,'               \n               \n      /\\\\      \n     /  \\\\     \n    /    \\\\    \n   //\\/\\/\\\\\\   \n  // /  \\  \\\\  \n ///  \\/  \\ \\\\ \n//\\/\\\\ //\\\\//\\\\\n               ',1,0,1,1,NULL,'Mountain Peak image'),(205,'               \n               \n               \n    ,~~~~.     \n   / -    ~    \n  /     @  \\   \n===============\n               \n               \n               ',1,0,1,1,NULL,'Giant Rock image'),(206,'               \n               \n               \n               \n               \n ,/\"\"\"\"\"\"\\.    \n=/\" /^\'\\\'.\\=   \n .=\'=.==\'=     \n               \n               ',1,0,1,1,NULL,'Crater image'),(207,'               \n               \n     _.~._     \n    / \"\"  \\    \n   .\'\" \"\"\' .   \n   |  \"\"\"  |   \n   \'   \' \' \'   \n    \\_\'\"\"_/    \n     \"\"\"\"\"     \n               ',1,0,1,1,NULL,'Planet Rock image'),(208,'               \n     ~~~~      \n   ~~    ~~    \n     ~~~~      \n      ~~       \n      ~~       \n    ~~~~~~~    \n===============\n               \n               ',-1,0,-1,1,NULL,'Test kingdom spawnination featur'),(209,'\'  \'    \'   \'  \n \'    \'    \'   \n \'  \'   \'    \' \n   \'  \'    \'   \n \'   \'  \'    \' \n   \'      \'    \n \'     \'    \'  \n    \'    \'     \n\' \'   \'    \'  \'\n    \'   \'    \' ',1,0,1,1,NULL,'Plains image'),(210,'     __\r\n    /  \\\r\n    |  |\r\n   ======\r\n    \"  \"\r\n ===\"\"\"\"===\r\n |   \\/   |\r\n |   ||   |\r\n |        |\r\n |        |\r\n #--------#\r\n    || ||\r\n    |} |}\r\n    C=3==3 ',-1,0,-1,4,NULL,'System\'s character image'),(215,'\r\n\r\n\n___         ___\n| |__  __  _| |\n\\    ||  ||   /\n |    ____   |\r\n |    |##|   |\r\n |    |##|   |\r\n===============\n\n',-1,0,0,1,NULL,'Siseneg Castle Image'),(216,'\r\n            /\\\'\\   \r\n      _|_ <_XX  }\r\n     /   \\  ||./ \r\n    / === \\ || \r\n  ------\"\"_ ||\r\n  |    |\' _@d3\r\n  |    | :; ||\r\n  \\    /\':; ||\r\n   \\__/\'\'\'  ||\r\n    [M] [[> \\/',-1,0,0,4,NULL,'Siseneg Guard Image'),(217,'               \n               \n ||=========|| \n ||         || \n ||         || \n ||-\\\\      || \n ||  \\\\     || \n ||   \\\\    || \n ||=========|| \n               ',1,0,1,1,NULL,'Stairs to level -1 image'),(218,'               \n  /~\\   ____   \n  |=|  /####\\  \n       |\"\".\"|  \n   ___         \n  /\"\"\"\\ _____  \n /_____/_____\\ \n  |\'.\'| |^.^|  \n #######|\'#\'|  \n               ',1,0,1,1,NULL,'Village image'),(219,'               \n /\\        /\\  \n/  \\      /  \\ \n ||#  #/\\ #||  \n # /\\ /  \\     \n  /  \\##|   /  \n  #||     #/\\  \n /\\  #  #/\\    \n/  \\#/\\ /  \\   \n ||#/  \\ # || /',1,0,1,1,NULL,'Forest Tribe image'),(220,'               \n               \n     |   |     \n \\          /  \n               \n |~~~~~~~~~~|  \n |    |#|   |  \n---------------\n               \n               ',1,0,1,1,NULL,'Magic Hamlet image'),(221,'   /\\  /\\      \n  / \\\\/ \\\\  /\\ \n / #\\\\ #/\\ / \\\\\n/ ###\\\\/#\\\\ /\\ \n  /\\    /\\ /\\\\\\\n /#\\\\  / \\\\#   \n/###\\ *#* ###/\\\n /\\  /###\\  / \\\n/  \\/}...\\\\/##\\\n               ',1,0,1,1,NULL,'Cave Complex image'),(222,'               \n               \n               \n |\\            \n | *  /~ ~~\\   \n | | ~~~^^^^   \n | |##  %@ %   \n==============+\n               \n               ',1,0,1,1,NULL,'Pestelant City image'),(223,'  ~     ~    ~ \n       :  :    \n~ :  ~    :~   \n  :  ,.. :.    \n  ~ .  ~  ;.~  \n    ,.. ..,:   \n ~ ~.  : ~ . ~ \n  | . .. .``   \n  ~  ~     ~   \n~       ~      ',1,0,1,1,NULL,'Sunken City image'),(224,' ~   ~    ~    \n               \n   ~    ~    ~ \n               \n ~    ~   ~    \n               \n    ~    ~  ~  \n               \n~  ~   ~   ~   \n               ',1,0,1,1,NULL,'Water image'),(225,'               \n               \n ||=========|| \n ||         || \n || ##      || \n ||-\\## ## #|| \n || ##\\#####|| \n ||####\\####|| \n ||=========|| \n               ',1,0,1,1,NULL,'Dirty Stairs Down 1 Level image'),(226,'---------------\n|\\           /|\n| \\         / |\n|  \\_______/  |\n|  | V V V |  |\n|  |_______|  |\n|  /       \\  |\n| /         \\ |\n|/           \\|\n---------------',1,0,1,1,NULL,'Dungeon Corridor image'),(227,'               \n---------------\n               \n   MMMMMMMMM   \n   M | | | M   \n   M |###| M   \n   M | | | M   \n   M | | | M   \n===============\n               ',1,0,1,1,NULL,'Dungeon Cell image'),(228,'               \n               \n  /\\/\\/\\/\\/\\   \n  |        |   \n  |   __   |   \n  |  /__\\  |   \n  |   ##   |   \n  |   ##   |   \n============== \n               ',1,0,1,1,NULL,'Dungeon Alcove image'),(229,'\\ \\________/ / \n \\________0_/  \n=   =   =   =  \n  =  =    ___  \n ~ =  =  /|||\\ \n-------------- \n--/||||\\------ \n##$%#$##$%#$%# \n#$%$%#$##$#$%% \n============== ',1,0,1,1,NULL,'Sewer image'),(230,'               \n               \n||=========||  \n||  |###|  ||  \n|| /|###|\\ ||  \n||/ /===\\ \\||  \n|| /=====\\ ||  \n||/=======\\||  \n||=========||  \n               ',1,0,1,1,NULL,'Stairs Up image'),(231,'    =      =   \n  =     =    = \n =    =    =   \n  /===/===/  = \n= |M#####M\\=   \n =/##M#@@#||   \n  /H####M#\\\\   \n---=---------- \n               \n               ',1,0,1,1,NULL,'Den image'),(232,' =    =        \n   =      =    \n  ~    =    ~  \n=  =       =   \n      ~        \n = #$M#%M   =  \n   @#$%#M@     \n--@#$%#^%$%-   \n               \n               ',1,0,1,1,NULL,'Rubbish image'),(233,'               \n               \n  _________    \n  `.__   _/    \n     /  |`     \n    /    \\     \n-------------  \n               \n               \n               ',1,0,1,1,NULL,'Anvil image'),(234,'               \n               \n ._.           \n |=|           \n |=\\_______.   \n |=========|   \n |=|     |=|   \n============== \n               \n               ',1,0,1,1,NULL,'Bedrock image'),(235,'               \n       O       \n      -|-      \n       |       \n   /-------\\   \n   | ++ ++ |   \n   |-------|   \n               \n===============\n               ',1,0,1,1,NULL,'Dungeon Crypt image'),(236,'               \n               \n  ~            \n           ~   \n   ._  __      \n  (==!~= )     \n  (   =  )     \n=============  \n               \n               ',1,0,1,1,NULL,'Dark Dungeon Well image'),(237,'=   }O\"O{      \n  = |\\^/|    = \n   =_____ ^_^  \n   |=====|=    \n = |=+++=|     \n   |=+++=| o   \n   |=+++=| +   \n~~~~~~~~~~~~~  \n               \n               ',1,0,1,1,NULL,'Dungeon Catacomb image'),(238,' /  / M \\  \\   \n/   \\ M  \\  |  \n|   / M  |  \\  \n\'  /  M  |  /  \n      |  `  `  \n      \'        \n               \n               \n               \n               ',1,0,1,1,NULL,'Roots of Oak image');

UNLOCK TABLES;

/*Table structure for table `infections` */

DROP TABLE IF EXISTS `infections`;

CREATE TABLE `infections` (
  `id` int(11) NOT NULL auto_increment,
  `character_id` int(11) NOT NULL COMMENT 'player_character id with disease',
  `disease_id` int(11) NOT NULL COMMENT 'disease player_character has',
  PRIMARY KEY  (`id`),
  KEY `character_id` (`character_id`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_characters_infections` FOREIGN KEY (`character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_diseases_infections` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `infections` */

LOCK TABLES `infections` WRITE;

UNLOCK TABLES;

/*Table structure for table `items` */

DROP TABLE IF EXISTS `items`;

CREATE TABLE `items` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(64) NOT NULL default '' COMMENT 'name of the item',
  `equip_loc` int(3) NOT NULL COMMENT 'where this item may be equipped.',
  `description` varchar(256) default NULL COMMENT 'description of the item',
  `base_item_id` int(11) NOT NULL COMMENT 'item''s base type',
  `min_level` int(5) NOT NULL COMMENT 'minimum level required to be able to equip this item',
  `c_class_id` int(11) default NULL COMMENT 'favored c_class, a character with this c_class who equips gains an additional 10% to the normal item stat mod',
  `race_id` int(11) default NULL COMMENT 'favored race, a character with this race who equips gains an additional 10% stat mod to the normal',
  `str` int(10) default NULL COMMENT 'strength modifier',
  `dex` int(10) default NULL COMMENT 'dexterity modifier',
  `mag` int(10) default NULL COMMENT 'magic modifier',
  `int` int(10) default NULL COMMENT 'intelligence modifier',
  `con` int(10) default NULL COMMENT 'constitution modifier',
  `dfn` int(10) default NULL COMMENT 'defense modifier',
  `dam` int(10) default NULL COMMENT 'damamge modifier',
  `race_body_type` int(3) default NULL COMMENT 'If null, then this item has no race restrictions. Otherwise, only races with this body type may use this item. Note that smiths might be able to reforge an item for use by a different race.',
  `price` int(20) default NULL COMMENT 'The gold equivalent of this item. Arbitrarily set.',
  `npc_id` int(11) default NULL COMMENT 'ID of the npc which makes this item. If this is nul, then this is a generic item, and any NPC can make',
  PRIMARY KEY  (`id`),
  KEY `base_item_id` (`base_item_id`),
  KEY `name` (`name`),
  KEY `min_level` (`min_level`),
  KEY `race_body_type` (`race_body_type`),
  KEY `race_id` (`race_id`),
  KEY `c_class_id` (`c_class_id`),
  KEY `npc_id` (`npc_id`),
  KEY `npc_id_base_item_id_price` (`npc_id`,`base_item_id`,`price`),
  CONSTRAINT `FK_base_items_items` FOREIGN KEY (`base_item_id`) REFERENCES `base_items` (`id`),
  CONSTRAINT `FK_c_classes_items` FOREIGN KEY (`c_class_id`) REFERENCES `c_classes` (`id`),
  CONSTRAINT `FK_races_items` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `items` */

LOCK TABLES `items` WRITE;

insert  into `items`(`id`,`name`,`equip_loc`,`description`,`base_item_id`,`min_level`,`c_class_id`,`race_id`,`str`,`dex`,`mag`,`int`,`con`,`dfn`,`dam`,`race_body_type`,`price`,`npc_id`) values (1,'Axe of axing',1,'A good axe',4,2,1,1,5,0,0,0,0,0,10,1,300,NULL),(2,'Good knife',1,'A better than normal knife',1,1,1,1,0,5,0,0,0,0,5,NULL,30,NULL),(5,'Rusty Dagger',1,'A dagger that is really, really, rusted.',1,1,25,1,0,0,0,0,0,0,3,NULL,10,NULL),(6,'Lead Ax',1,'heavy axe of lead',4,5,25,1,0,0,0,0,0,2,10,NULL,50,NULL),(7,'Mountain Top',1,'THe tip of a mountain',22,20,25,2,15,0,15,0,5,5,20,NULL,400,NULL),(9,'Plastic Sword',1,'Sword made from the finest plastic in all the land',8,4,25,3,10,10,0,0,0,0,5,NULL,50,NULL),(10,'Cardboard Helm',4,'Just like DOn Quixhote\'s',3,5,1,3,0,0,15,0,0,3,0,NULL,100,NULL),(11,'Glistening Boots',2,'These boots really glisten!',2,15,14,1,5,20,10,10,0,10,5,NULL,500,NULL);

UNLOCK TABLES;

/*Table structure for table `kingdom_bans` */

DROP TABLE IF EXISTS `kingdom_bans`;

CREATE TABLE `kingdom_bans` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of kingdom',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of player_character baned from the kingdom/blacklisted by king',
  `name` varchar(32) NOT NULL COMMENT 'Name of the player_character who is banned.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `kingdom_player_character_id` (`kingdom_id`,`player_character_id`),
  KEY `name` (`name`),
  CONSTRAINT `FK_kingdoms_kingdom_bans` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_player_characters_kingdom_bans` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_bans` */

LOCK TABLES `kingdom_bans` WRITE;

UNLOCK TABLES;

/*Table structure for table `kingdom_empty_shops` */

DROP TABLE IF EXISTS `kingdom_empty_shops`;

CREATE TABLE `kingdom_empty_shops` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'the kingdom where the empty store is in. Used for indexing purposes mainly',
  `level_map_id` int(11) NOT NULL COMMENT 'The level map that has an empty storefront.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `level_map_id` (`level_map_id`),
  KEY `kingdom_id_level_id` (`kingdom_id`,`level_map_id`),
  CONSTRAINT `FK_kingdoms_kingdom_empty_shops` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_level_maps_kingdom_empty_shops` FOREIGN KEY (`level_map_id`) REFERENCES `level_maps` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_empty_shops` */

LOCK TABLES `kingdom_empty_shops` WRITE;

insert  into `kingdom_empty_shops`(`id`,`kingdom_id`,`level_map_id`) values (1,1,163),(2,1,163),(3,1,163),(4,1,167),(5,1,168),(6,1,169);

UNLOCK TABLES;

/*Table structure for table `kingdom_entries` */

DROP TABLE IF EXISTS `kingdom_entries`;

CREATE TABLE `kingdom_entries` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom',
  `allowed_entry` int(3) NOT NULL COMMENT 'How the kingdom is limiting entry, ie, no entry, only those aligned, only those not on blacklist, no signs of disease, etc',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  CONSTRAINT `FK_kingdoms_kingdom_entries` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_entries` */

LOCK TABLES `kingdom_entries` WRITE;

insert  into `kingdom_entries`(`id`,`kingdom_id`,`allowed_entry`) values (1,1,3);

UNLOCK TABLES;

/*Table structure for table `kingdom_items` */

DROP TABLE IF EXISTS `kingdom_items`;

CREATE TABLE `kingdom_items` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item in the kingdom storerooms',
  `quantity` int(10) NOT NULL default '0' COMMENT 'Number f this item in the storerooms',
  PRIMARY KEY  (`id`),
  KEY `FK_kingdom_items_kingdoms` (`kingdom_id`),
  KEY `FK_kingdom_items_items` (`item_id`),
  CONSTRAINT `FK_items_kingdom_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_kingdoms_kingdom_items` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_items` */

LOCK TABLES `kingdom_items` WRITE;

insert  into `kingdom_items`(`id`,`kingdom_id`,`item_id`,`quantity`) values (1,1,9,10000),(2,1,10,10000),(3,1,11,10000);

UNLOCK TABLES;

/*Table structure for table `kingdom_notices` */

DROP TABLE IF EXISTS `kingdom_notices`;

CREATE TABLE `kingdom_notices` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom',
  `shown_to` int(3) NOT NULL COMMENT 'who sees this bulletin',
  `datetime` datetime NOT NULL COMMENT 'When this bulletin was created',
  `text` text COMMENT 'What happened',
  `signed` varchar(64) default NULL COMMENT 'Who signed the notice; it who posted it.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `kingdom_shown_to_id` (`kingdom_id`,`shown_to`),
  KEY `kingdom_datetime_id` (`kingdom_id`,`datetime`),
  KEY `signed` (`signed`),
  CONSTRAINT `FK_kingdoms_kingdom_notices` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdom_notices` */

LOCK TABLES `kingdom_notices` WRITE;

UNLOCK TABLES;

/*Table structure for table `kingdoms` */

DROP TABLE IF EXISTS `kingdoms`;

CREATE TABLE `kingdoms` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the kingdom',
  `name` varchar(32) NOT NULL COMMENT 'name of the kingdom',
  `player_character_id` int(11) default NULL COMMENT 'the king',
  `num_of_pc` int(5) default NULL COMMENT 'Number of PC''s affiliated with kingdom',
  `tax_rate` float default '5' COMMENT 'Tax rate in the kingdom (this is the percentage of gold taken from the total left by a monster or found randomly, as well as percentage added to NPC service charges)',
  `num_peasants` int(10) NOT NULL COMMENT 'The number of pesants residing in the city and nearby lands, doing the menial labor and whatever else epasants do to in the background.',
  `gold` int(20) NOT NULL default '0' COMMENT 'The amount of gold the kingdom has in its secure coffers.',
  `world_id` int(11) NOT NULL COMMENT 'The world where the kingdom is located. Initially, all kingdoms will be located in the main world, even if the higher and lower worlds are breached. Will need to think more on this later when/if it becomes an issue.',
  `bigx` int(2) NOT NULL COMMENT 'Teh x location of the kingdom. Used whena character is created as the starting coordinates.',
  `bigy` int(2) NOT NULL COMMENT 'The y location of the kingdom in the world.',
  `housing_cap` int(10) NOT NULL default '0' COMMENT 'The number of housing units for peasants',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `name` (`name`),
  KEY `num_of_pc` (`num_of_pc`),
  KEY `num_peasants` (`num_peasants`),
  KEY `tax_rate` (`tax_rate`),
  KEY `world_id` (`world_id`),
  CONSTRAINT `FK_player_characters_kingdoms` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_worlds_kingdoms` FOREIGN KEY (`world_id`) REFERENCES `worlds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `kingdoms` */

LOCK TABLES `kingdoms` WRITE;

insert  into `kingdoms`(`id`,`name`,`player_character_id`,`num_of_pc`,`tax_rate`,`num_peasants`,`gold`,`world_id`,`bigx`,`bigy`,`housing_cap`) values (-1,'SystemGeneratd',-1,NULL,1,0,0,1,0,0,0),(0,' None',NULL,NULL,1,0,0,1,0,0,0),(1,'Siseneg',1,NULL,5,105,2107690257,1,0,0,390);

UNLOCK TABLES;

/*Table structure for table `level_maps` */

DROP TABLE IF EXISTS `level_maps`;

CREATE TABLE `level_maps` (
  `id` int(11) NOT NULL auto_increment,
  `level_id` int(11) NOT NULL COMMENT 'ID of the level this map represents',
  `xpos` int(2) NOT NULL COMMENT 'The x positioon of the map tile',
  `ypos` int(2) NOT NULL COMMENT 'The y position of the map tile',
  `feature_id` int(11) default NULL COMMENT 'The feature at this position',
  PRIMARY KEY  (`id`),
  KEY `level_id` (`level_id`),
  KEY `feature_id` (`feature_id`),
  KEY `level_id_x_y` (`level_id`,`xpos`,`ypos`),
  CONSTRAINT `FK_features_level_maps` FOREIGN KEY (`feature_id`) REFERENCES `features` (`id`),
  CONSTRAINT `FK_levels_level_maps` FOREIGN KEY (`level_id`) REFERENCES `levels` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `level_maps` */

LOCK TABLES `level_maps` WRITE;

insert  into `level_maps`(`id`,`level_id`,`xpos`,`ypos`,`feature_id`) values (1,1,0,0,49),(2,1,1,0,49),(3,1,2,0,49),(4,1,3,0,49),(5,1,4,0,49),(6,1,0,1,49),(7,1,1,1,49),(8,1,2,1,49),(9,1,3,1,49),(10,1,4,1,49),(11,1,0,2,49),(12,1,1,2,49),(13,1,2,2,49),(14,1,3,2,49),(15,1,4,2,49),(17,3,0,0,49),(18,3,1,0,49),(19,3,2,0,49),(20,3,3,0,49),(21,3,4,0,49),(22,3,0,1,49),(23,3,1,1,49),(24,3,2,1,49),(25,3,3,1,49),(26,3,4,1,49),(27,3,0,2,49),(28,3,1,2,49),(29,3,2,2,49),(30,3,3,2,49),(31,3,4,2,49),(32,3,0,3,49),(33,3,1,3,49),(34,3,2,3,49),(35,3,3,3,49),(36,3,4,3,49),(37,3,0,4,49),(38,3,1,4,49),(39,3,2,4,49),(40,3,3,4,49),(41,3,4,4,49),(42,4,0,0,49),(43,4,1,0,49),(44,4,2,0,49),(45,4,3,0,49),(46,4,0,1,49),(47,4,1,1,49),(48,4,2,1,49),(49,4,3,1,49),(50,4,0,2,49),(51,4,1,2,49),(52,4,2,2,49),(53,4,3,2,49),(54,4,0,3,49),(55,4,1,3,49),(56,4,2,3,49),(57,4,3,3,49),(58,5,0,0,49),(59,5,1,0,49),(60,5,2,0,49),(61,5,0,1,49),(62,5,1,1,49),(63,5,2,1,49),(64,5,0,2,49),(65,5,1,2,49),(66,5,2,2,49),(67,6,0,0,49),(68,6,1,0,49),(69,6,0,1,49),(70,6,1,1,49),(71,6,0,2,49),(72,6,1,2,49),(73,7,0,0,49),(74,7,1,0,49),(75,7,0,1,49),(76,7,1,1,49),(77,8,0,0,49),(78,8,1,0,49),(79,8,2,0,49),(80,8,0,1,49),(81,8,1,1,49),(82,8,2,1,49),(83,9,0,0,49),(84,9,1,0,49),(85,9,2,0,49),(86,9,0,1,49),(87,9,1,1,49),(88,9,2,1,49),(89,9,0,2,49),(90,9,1,2,49),(91,9,2,2,49),(92,10,0,0,49),(93,10,1,0,49),(94,10,2,0,49),(95,10,3,0,49),(96,10,0,1,49),(97,10,1,1,49),(98,10,2,1,49),(99,10,3,1,49),(100,10,0,2,49),(101,10,1,2,49),(102,10,2,2,49),(103,10,3,2,49),(104,11,0,0,49),(105,11,1,0,49),(106,11,2,0,49),(107,11,3,0,49),(108,11,0,1,49),(109,11,1,1,49),(110,11,2,1,49),(111,11,3,1,49),(112,11,0,2,49),(113,11,1,2,49),(114,11,2,2,49),(115,11,3,2,49),(116,12,0,0,49),(117,12,1,0,49),(118,12,2,0,49),(119,12,3,0,49),(120,12,0,1,49),(121,12,1,1,49),(122,12,2,1,49),(123,12,3,1,49),(124,12,0,2,49),(125,12,1,2,49),(126,12,2,2,49),(127,12,3,2,49),(128,12,0,3,49),(129,12,1,3,49),(130,12,2,3,49),(131,12,3,3,49),(132,13,0,0,49),(133,13,1,0,49),(134,13,0,1,49),(135,13,1,1,49),(136,14,0,0,49),(137,14,1,0,49),(138,14,0,1,49),(139,14,1,1,49),(140,15,0,0,49),(141,15,1,0,49),(142,15,2,0,49),(143,15,3,0,49),(144,15,4,0,49),(145,15,0,1,49),(146,15,1,1,49),(147,15,2,1,49),(148,15,3,1,49),(149,15,4,1,49),(150,15,0,2,49),(151,15,1,2,49),(152,15,2,2,49),(153,15,3,2,49),(154,15,4,2,49),(155,15,0,3,49),(156,15,1,3,49),(157,15,2,3,49),(158,15,3,3,49),(159,15,4,3,49),(160,1,0,0,14),(161,1,1,0,14),(162,1,2,0,54),(163,1,3,0,9),(164,1,0,1,14),(165,1,3,1,54),(166,1,4,1,54),(167,1,1,2,8),(168,1,2,2,8),(169,1,3,2,8),(170,3,0,4,68),(171,4,1,0,68),(172,5,1,1,68),(173,6,0,0,68),(174,7,0,0,68),(175,8,1,0,68),(176,9,2,0,68),(177,10,0,0,68),(178,11,0,2,68),(179,12,0,0,68),(180,13,1,0,68),(181,14,1,0,68),(182,15,3,0,68),(183,3,0,0,81),(184,3,4,0,68),(185,3,0,1,77),(186,3,4,1,77),(187,3,0,2,77),(188,3,1,2,77),(189,3,2,2,77),(190,3,3,2,77),(191,3,4,2,77),(192,3,0,3,77),(193,3,4,3,77),(194,3,4,4,81),(195,3,1,0,78),(196,3,1,1,87),(197,3,2,0,78),(198,3,3,0,83),(199,3,1,1,77),(200,3,2,1,79),(201,3,3,1,83),(202,3,1,3,78),(203,3,2,3,77),(204,3,3,3,77),(205,3,1,4,77),(206,3,2,4,78),(207,3,3,4,77),(208,4,0,0,79),(209,4,2,0,81),(210,4,3,0,79),(211,4,0,1,77),(212,4,1,1,77),(213,4,2,1,77),(214,4,3,1,83),(215,4,0,2,78),(216,4,1,2,78),(217,4,2,2,77),(218,4,3,2,78),(219,4,0,3,83),(220,4,1,3,79),(221,4,2,3,77),(222,4,3,3,77),(223,5,0,0,78),(224,5,1,0,81),(225,5,2,0,78),(226,5,0,1,78),(227,5,2,1,79),(228,5,0,2,78),(229,5,1,2,78),(230,5,2,2,78),(231,6,1,0,81),(232,6,0,1,83),(233,6,1,1,79),(234,6,0,2,87),(235,6,1,2,78),(236,4,1,0,76),(237,7,1,0,81),(238,7,0,1,88),(239,7,1,1,88),(240,8,0,0,87),(241,8,1,0,82),(242,8,2,0,81),(243,8,0,1,76),(244,8,1,1,83),(245,8,2,1,83),(246,9,0,0,81),(247,9,1,0,79),(248,9,0,1,77),(249,9,1,1,78),(250,9,2,1,77),(251,9,0,2,88),(252,9,1,2,88),(253,9,2,2,88),(254,10,1,0,81),(255,10,2,0,87),(256,10,3,0,88),(257,10,0,1,83),(258,10,1,1,77),(259,10,2,1,77),(260,10,3,1,78),(261,10,0,2,78),(262,10,1,2,82),(263,10,2,2,78),(264,10,3,2,83),(265,11,0,0,81),(266,11,1,0,78),(267,11,2,0,78),(268,11,3,0,79),(269,11,0,1,78),(270,11,1,1,77),(271,11,2,1,77),(272,11,3,1,86),(273,11,1,2,78),(274,11,2,2,78),(275,11,3,2,79),(276,12,1,0,78),(277,12,2,0,78),(278,12,3,0,81),(279,12,0,1,77),(280,12,1,1,77),(281,12,2,1,77),(282,12,3,1,77),(283,12,0,2,88),(284,12,1,2,78),(285,12,2,2,87),(286,12,3,2,83),(287,12,0,3,80),(288,12,1,3,80),(289,12,2,3,80),(290,12,3,3,80),(291,3,3,0,89),(292,13,0,0,86),(293,13,1,0,76),(294,13,0,1,81),(295,13,1,1,82),(296,14,0,0,81),(297,14,0,1,80),(298,14,1,1,80),(299,15,0,0,80),(300,15,1,0,80),(301,15,2,0,86),(302,15,4,0,81),(303,15,0,1,85),(304,15,1,1,79),(305,15,2,1,76),(306,15,3,1,78),(307,15,4,1,78),(308,15,0,2,88),(309,15,1,2,88),(310,15,2,2,84),(311,15,3,2,86),(312,15,4,2,86),(313,15,0,3,88),(314,15,1,3,88),(315,15,2,3,87),(316,15,3,3,86),(317,15,4,3,86),(318,12,3,1,85),(335,1,2,1,66);

UNLOCK TABLES;

/*Table structure for table `levels` */

DROP TABLE IF EXISTS `levels`;

CREATE TABLE `levels` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the level',
  `kingdom_id` int(11) NOT NULL COMMENT 'ID of the kingdom this level belongs to',
  `level` int(10) NOT NULL COMMENT 'Leel, ie 0, -1 (dungeon) 2 (tower), etc.',
  `maxx` int(2) NOT NULL COMMENT 'THe widest the map can be',
  `maxy` int(2) NOT NULL COMMENT 'The tallest the map can be',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `kingdom_level_id` (`kingdom_id`,`level`),
  CONSTRAINT `FK_kingdoms_levels` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `levels` */

LOCK TABLES `levels` WRITE;

insert  into `levels`(`id`,`kingdom_id`,`level`,`maxx`,`maxy`) values (1,1,0,5,3),(3,1,-1,5,5),(4,1,-2,4,4),(5,1,-3,3,3),(6,1,-4,2,3),(7,1,-5,2,2),(8,1,-6,3,2),(9,1,-7,3,3),(10,1,-8,4,3),(11,1,-9,4,3),(12,1,-10,4,4),(13,1,-11,2,2),(14,1,-12,2,2),(15,1,-13,5,4);

UNLOCK TABLES;

/*Table structure for table `log_quest_creature_kills` */

DROP TABLE IF EXISTS `log_quest_creature_kills`;

CREATE TABLE `log_quest_creature_kills` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_creature_kill_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  `num_kills` int(11) NOT NULL default '0' COMMENT 'number of kills of this type of creature',
  PRIMARY KEY  (`id`),
  KEY `quest_creature_kill_id` (`quest_creature_kill_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_creature_kill_id` (`log_quest_id`,`quest_creature_kill_id`),
  CONSTRAINT `FK_log_quest_log_quest_creature_kills` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_creature_kills_log_quest_creature_kills` FOREIGN KEY (`quest_creature_kill_id`) REFERENCES `quest_creature_kills` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_creature_kills` */

LOCK TABLES `log_quest_creature_kills` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_explores` */

DROP TABLE IF EXISTS `log_quest_explores`;

CREATE TABLE `log_quest_explores` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_explore_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  PRIMARY KEY  (`id`),
  KEY `quest_explore_id` (`quest_explore_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_explore_id` (`log_quest_id`,`quest_explore_id`),
  CONSTRAINT `FK_log_quest_log_quest_explores` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_explores_log_quest_explores` FOREIGN KEY (`quest_explore_id`) REFERENCES `quest_explores` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_explores` */

LOCK TABLES `log_quest_explores` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_kill_n_npcs` */

DROP TABLE IF EXISTS `log_quest_kill_n_npcs`;

CREATE TABLE `log_quest_kill_n_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_kill_n_npc_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  `num_kills` int(10) NOT NULL default '0' COMMENT 'Number of kills',
  PRIMARY KEY  (`id`),
  KEY `quest_kill_n_npc_id` (`quest_kill_n_npc_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_kill_n_npc_id` (`log_quest_id`,`quest_kill_n_npc_id`),
  CONSTRAINT `FK_log_quest_log_quest_kill_n_npcs` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_kill_n_npcs_log_quest_kill_n_npcs` FOREIGN KEY (`quest_kill_n_npc_id`) REFERENCES `quest_kill_n_npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_kill_n_npcs` */

LOCK TABLES `log_quest_kill_n_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_kill_pcs` */

DROP TABLE IF EXISTS `log_quest_kill_pcs`;

CREATE TABLE `log_quest_kill_pcs` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_kill_pc_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  PRIMARY KEY  (`id`),
  KEY `quest_kill_pc_id` (`quest_kill_pc_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_kill_pc_id` (`log_quest_id`,`quest_kill_pc_id`),
  CONSTRAINT `FK_log_quest_log_quest_kill_pcs` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_kill_pcs_log_quest_kill_pcs` FOREIGN KEY (`quest_kill_pc_id`) REFERENCES `quest_kill_pcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_kill_pcs` */

LOCK TABLES `log_quest_kill_pcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quest_kill_s_npcs` */

DROP TABLE IF EXISTS `log_quest_kill_s_npcs`;

CREATE TABLE `log_quest_kill_s_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `log_quest_id` int(11) NOT NULL COMMENT 'ID of the log quest',
  `quest_kill_s_npc_id` int(11) NOT NULL COMMENT 'ID of the quest requirement',
  PRIMARY KEY  (`id`),
  KEY `quest_kill_s_npc_id` (`quest_kill_s_npc_id`),
  KEY `log_quest_id` (`log_quest_id`),
  KEY `log_quest_id_quest_kill_s_npc_id` (`log_quest_id`,`quest_kill_s_npc_id`),
  CONSTRAINT `FK_log_quest_log_quest_kill_s_npcs` FOREIGN KEY (`log_quest_id`) REFERENCES `log_quests` (`id`),
  CONSTRAINT `FK_quest_kill_s_npcs_log_quest_kill_s_npcs` FOREIGN KEY (`quest_kill_s_npc_id`) REFERENCES `quest_kill_s_npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `log_quest_kill_s_npcs` */

LOCK TABLES `log_quest_kill_s_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `log_quests` */

DROP TABLE IF EXISTS `log_quests`;

CREATE TABLE `log_quests` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character attempting the quest',
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `completed` tinyint(1) NOT NULL default '0' COMMENT 'IF true, player_character has completed quest. Purging of quest related logs is ok at this point.',
  `rewarded` tinyint(1) NOT NULL default '0' COMMENT 'IF true, player_character has collected reward.',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `quest_id` (`quest_id`),
  KEY `player_character_quest_id` (`player_character_id`,`quest_id`),
  KEY `player_character_quest_comp_id` (`player_character_id`,`quest_id`,`completed`),
  CONSTRAINT `FK_player_characters_log_quests` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_quests_log_quests` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `log_quests` */

LOCK TABLES `log_quests` WRITE;

UNLOCK TABLES;

/*Table structure for table `name_surfixes` */

DROP TABLE IF EXISTS `name_surfixes`;

CREATE TABLE `name_surfixes` (
  `id` int(11) NOT NULL auto_increment,
  `name_surfixes` varchar(32) default NULL COMMENT 'A prefix or suffix added to a name to make it a surname. the"-" indicated what the "-" indicates where the rest of the name goes.',
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `name_surfixes` */

LOCK TABLES `name_surfixes` WRITE;

insert  into `name_surfixes`(`id`,`name_surfixes`) values (1,'O\'-'),(2,'-son'),(3,'-sson'),(4,'-sdottor'),(5,'-stein'),(6,'-burg'),(7,'-bel'),(8,'-ley'),(9,'-owit'),(10,'Mc-'),(11,'Mac-'),(12,'De-'),(13,'Don-');

UNLOCK TABLES;

/*Table structure for table `name_titles` */

DROP TABLE IF EXISTS `name_titles`;

CREATE TABLE `name_titles` (
  `id` int(11) NOT NULL auto_increment,
  `title` varchar(32) default NULL COMMENT 'Title, follows the name',
  `stat` varchar(3) default NULL COMMENT 'If this is being used for an item name (or someone''s titiel), then this is the three character abbreviation of a stat trait. If null, then it is not a valid title for for an item. "all" is a stat trait that does not exist, but rather states that this titl',
  `points` int(10) default NULL COMMENT 'Ony used if stat is nto null. This is the minimum points eeded to gain this title.',
  PRIMARY KEY  (`id`),
  KEY `stat_points` (`stat`,`points`),
  KEY `points` (`points`),
  KEY `stat_title` (`stat`,`title`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `name_titles` */

LOCK TABLES `name_titles` WRITE;

insert  into `name_titles`(`id`,`title`,`stat`,`points`) values (1,'weak','all',0),(2,'dull','dex',1),(3,'blunt','dam',1),(4,'fool','int',1),(5,'mundane','mag',1),(6,'soft','dfn',1),(7,'sickly','con',1),(8,'puny','str',1),(9,'peon','',NULL),(10,'good','all',10),(11,'quality','all',25),(12,'excellent','all',100),(13,'phenomenal','all',300),(14,'magnificent','all',750),(15,'august','all',2500),(16,'citizen','',NULL),(17,'pauper','',NULL),(18,'slovenly','',NULL),(19,'cruel','',NULL),(20,'humble','',NULL),(21,'traveller','',NULL),(22,'journeyman','',NULL),(23,'bonded','',NULL),(24,'loyal','',NULL),(25,'younger','',NULL),(26,'older','',NULL),(27,'one-eyed','',NULL),(28,'mad','',NULL),(29,'cold','',NULL),(30,'rotund','',NULL),(31,'fat','',NULL),(32,'cursed','',NULL),(33,'enforcer','',NULL),(34,'steadfast','con',25),(35,'stable','con',7),(36,'edged','dam',7),(37,'sharp','dam',25),(38,'biting','dam',100),(39,'harsh','dam',300),(40,'viscious','dam',750),(41,'mordant','dam',2500),(42,'lithe','dex',7),(43,'spry','dex',25),(44,'agile','dex',100),(45,'quicksilver','dex',300),(46,'fleet','dex',750),(47,'ephemeral','dex',2500),(48,'callous','dfn',7),(49,'rough','dfn',25),(50,'secured','dfn',100),(51,'stone','dfn',300),(52,'reinforced ','dfn',750),(53,'adamant','dfn',2500),(54,'esoteric','mag',7),(55,'smart','int',7),(56,'bright','int',25),(57,'genius','int',100),(58,'wise','int',300),(59,'illuminated','int',750),(60,'adriot','int',2500),(61,'magical','mag',25),(62,'occult','mag',100),(63,'mystic','mag',300),(64,'arcane','mag',750),(65,'marvelous','mag',2500),(66,'stout','str',7),(67,'tough','str',25),(68,'mighty','str',100),(69,'stalwart','str',300),(70,'potent','str',750),(71,'puissant','str',2500),(72,'hardy','con',100),(73,'iron','con',300),(74,'steel','con',750),(75,'immune','con',2500);

UNLOCK TABLES;

/*Table structure for table `names` */

DROP TABLE IF EXISTS `names`;

CREATE TABLE `names` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) default NULL COMMENT 'Name, not in surname form',
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `names` */

LOCK TABLES `names` WRITE;

insert  into `names`(`id`,`name`) values (1,'Bjorn'),(2,'Hans'),(3,'Aelfric'),(4,'Cedric'),(5,'Richard'),(6,'Samuel'),(7,'Michelangelo'),(8,'Donatello'),(9,'Sven'),(10,'Rupert'),(11,'Cecil'),(12,'Pliny'),(13,'Margaret'),(14,'Samantha'),(15,'Frey'),(16,'Wendy'),(17,'Lisa'),(18,'Hannah'),(19,'Rufus'),(20,'Manuel'),(21,'Rico'),(22,'Green'),(23,'Red'),(24,'Eliza'),(25,'Reily'),(26,'Tool'),(27,'Thor'),(28,'Wotan'),(29,'Ezekiel'),(30,'Judge'),(31,'Dorian'),(32,'Smith'),(33,'Jonse'),(34,'Jones'),(35,'Holmes'),(36,'Tyr'),(37,'Sanchez'),(38,'Celleaghan'),(39,'Down');

UNLOCK TABLES;

/*Table structure for table `nonplayer_character_killers` */

DROP TABLE IF EXISTS `nonplayer_character_killers`;

CREATE TABLE `nonplayer_character_killers` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character who killed the NPC',
  `npc_id` int(11) default NULL COMMENT 'ID of teh NPC killed. IF null, this is the entry for the peasants that asshole player_character butchered.',
  `when` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT 'When the NPC was killed',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `npc_id` (`npc_id`),
  KEY `player_character_npc_id` (`player_character_id`,`npc_id`),
  CONSTRAINT `FK_npcs_nonplayer_character_killers` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`),
  CONSTRAINT `FK_player_characters_nonplayer_character_killers` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `nonplayer_character_killers` */

LOCK TABLES `nonplayer_character_killers` WRITE;

UNLOCK TABLES;

/*Table structure for table `npc_blacksmith_items` */

DROP TABLE IF EXISTS `npc_blacksmith_items`;

CREATE TABLE `npc_blacksmith_items` (
  `id` int(11) NOT NULL auto_increment,
  `npc_id` int(11) NOT NULL COMMENT 'ID of the NPC that can make this item',
  `item_id` int(11) NOT NULL COMMENT 'ID of the ITEM that can be made',
  `min_sales` int(20) default NULL COMMENT 'The level of min sales attained to be able to make this item',
  PRIMARY KEY  (`id`),
  KEY `npc_id` (`npc_id`),
  KEY `item_id` (`item_id`),
  CONSTRAINT `FK_items_npc_blacksmith_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_npcs_npc_blacksmith_items` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npc_blacksmith_items` */

LOCK TABLES `npc_blacksmith_items` WRITE;

UNLOCK TABLES;

/*Table structure for table `npc_diseases` */

DROP TABLE IF EXISTS `npc_diseases`;

CREATE TABLE `npc_diseases` (
  `id` int(11) NOT NULL auto_increment,
  `character_id` int(11) NOT NULL COMMENT 'The ID of the NPC or guard',
  `disease_id` int(11) NOT NULL COMMENT 'The disease the NPC has. Possible for NPC to have many diseases',
  PRIMARY KEY  (`id`),
  KEY `character_id` (`character_id`),
  KEY `disease_id` (`disease_id`),
  CONSTRAINT `FK_characters_npc_diseases` FOREIGN KEY (`character_id`) REFERENCES `npcs` (`id`),
  CONSTRAINT `FK_diseases_npc_diseases` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npc_diseases` */

LOCK TABLES `npc_diseases` WRITE;

UNLOCK TABLES;

/*Table structure for table `npc_merchants` */

DROP TABLE IF EXISTS `npc_merchants`;

CREATE TABLE `npc_merchants` (
  `id` int(11) NOT NULL auto_increment,
  `npc_id` int(11) NOT NULL,
  `healing_sales` int(20) default NULL,
  `blacksmith_sales` int(20) default NULL,
  `trainer_sales` int(20) default NULL,
  `consignor` tinyint(1) default '0' COMMENT 'Can buy items from player_characters and resell them/hold a general store',
  `race_body_type` int(3) NOT NULL COMMENT 'Only relevant if npc is a blacksmith, in which case must not be null. Restrict the smith from making equipment that only a certain race could use, such as seamonster armor if its a human smith. This will be dependent on where the smith takes up shop, as w',
  PRIMARY KEY  (`id`),
  KEY `npc_id` (`npc_id`),
  CONSTRAINT `FK_npcs_npc_merchants` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `npc_merchants` */

LOCK TABLES `npc_merchants` WRITE;

insert  into `npc_merchants`(`id`,`npc_id`,`healing_sales`,`blacksmith_sales`,`trainer_sales`,`consignor`,`race_body_type`) values (1,1,NULL,500,NULL,1,1),(2,2,500,NULL,NULL,0,0),(3,3,NULL,NULL,500,0,0);

UNLOCK TABLES;

/*Table structure for table `npc_stocks` */

DROP TABLE IF EXISTS `npc_stocks`;

CREATE TABLE `npc_stocks` (
  `id` int(11) NOT NULL auto_increment,
  `npc_id` int(11) NOT NULL COMMENT 'ID of the NPC who has this item for sale',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item',
  `quantity` int(10) NOT NULL default '0' COMMENT 'The number of second hand items of this kind',
  PRIMARY KEY  (`id`),
  KEY `item_id` (`item_id`),
  KEY `npc_id` (`npc_id`),
  KEY `npc_id_item_id` (`npc_id`,`item_id`),
  CONSTRAINT `FK_items_npc_stocks` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_npcs_npc_stocks` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npc_stocks` */

LOCK TABLES `npc_stocks` WRITE;

UNLOCK TABLES;

/*Table structure for table `npcs` */

DROP TABLE IF EXISTS `npcs`;

CREATE TABLE `npcs` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) NOT NULL COMMENT 'Name of the NPC',
  `kingdom_id` int(11) default NULL COMMENT 'Kingdom where the NPC does business. If null, NPC was rejected, and a new kingdom needs to be assigned.',
  `wellness` int(3) NOT NULL default '1' COMMENT 'The wellness of the NPC, ie alive, dead, sick',
  `npc_division` int(3) NOT NULL COMMENT 'The type of npc, ie merchant or guard, (or possibly retainer that travels out of kingdom with player_character?)',
  `base_HP` int(10) NOT NULL default '10' COMMENT 'Base HP of the NPC. HP is restored to this the next day. Ie, after being beaten up a bit or losing health due to illness (as long as the illness is cured), the NPC''s HP will be restored to this. If NPC has a disease, then HP is not restored to this.',
  `HP` int(10) NOT NULL default '10' COMMENT 'Current HP of the NPC. This drops to zero, NPC dies for good. (unless they are resurrected within a few days)',
  `str` int(10) NOT NULL default '10' COMMENT 'Strength of the NPC',
  `dex` int(10) NOT NULL default '10' COMMENT 'Dexterity of the NPC',
  `con` int(10) NOT NULL default '10' COMMENT 'Constitution of the NPC',
  `int` int(10) NOT NULL default '10' COMMENT 'Intellignce of the NPC',
  `mag` int(10) NOT NULL default '10' COMMENT 'Magic of the NPC',
  `dam` int(10) NOT NULL default '10' COMMENT 'Damage attribute for the NPC',
  `dfn` int(10) NOT NULL default '10' COMMENT 'Defense Attribute for the NPC',
  `gold` int(20) NOT NULL default '10' COMMENT 'Amount of Gold NPC carries. For merchants, it will be the day''s sales. For Guards, it will be up to their salary.',
  `experience` int(10) NOT NULL default '10' COMMENT 'How much experience is gained by killing this NPC. Usually will be fixed',
  `is_hired` tinyint(1) NOT NULL default '0' COMMENT 'If the NPC has been hired. If the king does not hire this NPC, the kingdom affiliation goes away, and the NPC is randomly sent to a different kingdom that might have space for them. It could be that many NPC''s will look around for quite a while before the',
  `image_id` int(11) NOT NULL default '1' COMMENT 'The image of the NPC',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `name` (`name`),
  KEY `is_hired` (`is_hired`),
  KEY `name_is_hired` (`name`,`is_hired`),
  KEY `kingdom_id_npc_division` (`kingdom_id`,`npc_division`),
  CONSTRAINT `FK_kingdoms_npcs` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `npcs` */

LOCK TABLES `npcs` WRITE;

insert  into `npcs`(`id`,`name`,`kingdom_id`,`wellness`,`npc_division`,`base_HP`,`HP`,`str`,`dex`,`con`,`int`,`mag`,`dam`,`dfn`,`gold`,`experience`,`is_hired`,`image_id`) values (1,'Bjorn the Blacksmith',NULL,1,1,100,100,10,10,10,10,10,10,10,10,10,0,1),(2,'Sven the Healer',NULL,1,1,100,100,10,10,10,10,10,10,10,10,10,0,1),(3,'Allan the Trainer',NULL,1,1,100,100,10,10,10,10,10,10,10,10,10,0,1),(4,'Guard Eliza Ezekielsdottor',1,1,2,147,147,29,26,21,19,15,33,18,37,100,1,216),(5,'Guard Sanchez Jonesowit',1,1,2,73,73,12,12,23,10,30,20,15,36,100,1,216),(6,'Guard Sven',1,1,2,122,122,33,32,13,14,13,10,33,48,100,1,216),(7,'Guard Smith Reilysdottor',1,1,2,143,143,23,23,38,16,21,32,18,39,100,1,216),(8,'Guard Red Wendy O\'Donatello',1,1,2,151,151,34,12,32,30,23,13,20,49,100,1,216);

UNLOCK TABLES;

/*Table structure for table `pandemics` */

DROP TABLE IF EXISTS `pandemics`;

CREATE TABLE `pandemics` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'Kingdom with the disease',
  `disease_id` int(11) NOT NULL COMMENT 'ID of the disease the kingdom has',
  `day` int(11) NOT NULL COMMENT 'Number of days the disease has been plaguing the kingdom',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `disease_id` (`disease_id`),
  KEY `day` (`day`),
  CONSTRAINT `FK_diseases_pandemics` FOREIGN KEY (`disease_id`) REFERENCES `diseases` (`id`),
  CONSTRAINT `FK_kingdoms_pandemics` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `pandemics` */

LOCK TABLES `pandemics` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_character_equip_locs` */

DROP TABLE IF EXISTS `player_character_equip_locs`;

CREATE TABLE `player_character_equip_locs` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'The ID of the player_character who owns this equipment location',
  `equip_loc` int(3) NOT NULL COMMENT 'The equiment location number',
  `item_id` int(11) default NULL COMMENT 'The item equipped at this location. If null, there is nothing equiped at this location',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `player_character_equip_loc` (`player_character_id`,`equip_loc`),
  KEY `FK_player_character_equip_locs_items` (`item_id`),
  CONSTRAINT `FK_items_player_character_equip_locs` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_player_characters_player_character_equip_locs` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_character_equip_locs` */

LOCK TABLES `player_character_equip_locs` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_character_items` */

DROP TABLE IF EXISTS `player_character_items`;

CREATE TABLE `player_character_items` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of player_character who owns the items',
  `item_id` int(11) NOT NULL COMMENT 'id of the item owned',
  `quantity` int(5) NOT NULL default '0' COMMENT 'number of items owned by player_character',
  PRIMARY KEY  (`id`),
  KEY `FK_player_character_items_items` (`item_id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `player_character_id_item_id` (`player_character_id`,`item_id`),
  CONSTRAINT `FK_items_player_character_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_player_characters_player_character_items` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_character_items` */

LOCK TABLES `player_character_items` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_character_killers` */

DROP TABLE IF EXISTS `player_character_killers`;

CREATE TABLE `player_character_killers` (
  `id` int(11) NOT NULL auto_increment,
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the PKer',
  `killed_id` int(11) NOT NULL COMMENT 'ID of the player_character killed',
  `when` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP COMMENT 'When the player was killed',
  PRIMARY KEY  (`id`),
  KEY `player_character_id` (`player_character_id`),
  KEY `killed_id` (`killed_id`),
  KEY `player_character_killed_id` (`player_character_id`,`killed_id`),
  CONSTRAINT `FK_killeds_player_character_killers` FOREIGN KEY (`killed_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_player_characters_player_character_killers` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_character_killers` */

LOCK TABLES `player_character_killers` WRITE;

UNLOCK TABLES;

/*Table structure for table `player_characters` */

DROP TABLE IF EXISTS `player_characters`;

CREATE TABLE `player_characters` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(32) NOT NULL COMMENT 'Player character''s name',
  `player_id` int(11) NOT NULL COMMENT 'Player''s ID number',
  `c_class_id` int(11) NOT NULL COMMENT 'Player''s c_class ID',
  `race_id` int(11) NOT NULL COMMENT 'Player''s Race ID',
  `level` int(5) NOT NULL default '0' COMMENT 'Level teh player is',
  `next_level_at` int(10) NOT NULL default '0' COMMENT 'Amount of experience needed for the next level',
  `experience` int(10) NOT NULL default '0' COMMENT 'Experience points the player has',
  `max_HP` int(10) NOT NULL default '0' COMMENT 'Maximum HP the player can have (ie, HP player woul dhave if uninjured)',
  `max_MP` int(10) NOT NULL default '0' COMMENT 'Maximum MP the player can have',
  `HP` int(10) NOT NULL default '0' COMMENT 'Player''s current HP',
  `MP` int(10) NOT NULL default '0' COMMENT 'Player''s current MP',
  `kingdom_id` int(11) default NULL COMMENT 'player''s home kingdom ID (0 is no home kingdom)',
  `house_x` int(2) NOT NULL default '0' COMMENT 'X coordinate of the players house in the home kingdom',
  `house_y` int(2) NOT NULL default '0' COMMENT 'Y coordinate of the players house in their home kingdom',
  `turns` int(3) NOT NULL default '0' COMMENT 'number of actions the player currently can take',
  `base_str` int(10) NOT NULL default '0' COMMENT 'base strength',
  `base_dex` int(10) NOT NULL default '0' COMMENT 'base dexterity',
  `base_mag` int(10) NOT NULL default '0' COMMENT 'base magic',
  `base_int` int(10) NOT NULL default '0' COMMENT 'base intelligence',
  `base_con` int(10) NOT NULL default '0' COMMENT 'base constitution',
  `base_dfn` int(10) NOT NULL default '0' COMMENT 'base defense',
  `base_dam` int(10) NOT NULL default '0' COMMENT 'base damage',
  `freepts` int(10) NOT NULL default '0' COMMENT 'The number of freepoints not distributed. Player gains 10% interest on freepoints not spent (rounded to the nearest 1)',
  `str` int(10) NOT NULL default '0' COMMENT 'current strength',
  `dex` int(10) NOT NULL default '0' COMMENT 'current dexterity',
  `mag` int(10) NOT NULL default '0' COMMENT 'current magic',
  `int` int(10) NOT NULL default '0' COMMENT 'current intelligence',
  `con` int(10) NOT NULL default '0' COMMENT 'current constitution',
  `dfn` int(10) NOT NULL default '0' COMMENT 'current defense',
  `dam` int(10) NOT NULL default '0' COMMENT 'current damage',
  `trn_str` int(10) default '0' COMMENT 'strength modifier from training',
  `trn_dex` int(10) default '0' COMMENT 'dex ',
  `trn_mag` int(10) default '0' COMMENT 'magic ',
  `trn_int` int(10) default '0' COMMENT 'intelligence ',
  `trn_con` int(10) default '0' COMMENT 'constitution ',
  `trn_dfn` int(10) default '0' COMMENT 'defense ',
  `trn_dam` int(10) default '0' COMMENT 'damage ',
  `gold` int(20) default '0' COMMENT 'The amount of gold the player has',
  `image_id` int(11) default NULL COMMENT 'player''s personal avatar/image to represent them as an ascii image',
  `wellness` int(3) NOT NULL default '1' COMMENT 'The welness of the player, ie alive, dead, diseased, etc.',
  `char_stat` int(3) NOT NULL default '1' COMMENT 'Status of the character, ie retired, final death, active',
  `in_kingdom` int(11) default NULL COMMENT 'ID of the kingdom the character is at (null if character is in the world)',
  `bigx` int(2) default NULL COMMENT 'big x location fo the player in the world',
  `bigy` int(2) default NULL COMMENT 'big y location of the player in the world',
  `kingdom_level` int(11) default NULL COMMENT 'ID of the level the player is at if in a kingdom (null if char is not in a kingdom)',
  `in_world` int(11) default NULL COMMENT 'The id of the world where the character is (null i guess is limbo, where ever that is).',
  PRIMARY KEY  (`id`),
  KEY `player_id` (`player_id`),
  KEY `c_class_id` (`c_class_id`),
  KEY `race_id` (`race_id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `image_id` (`image_id`),
  KEY `name` (`name`),
  KEY `in_kingdom` (`in_kingdom`),
  KEY `kingdom_level` (`kingdom_level`),
  KEY `in_world` (`in_world`),
  CONSTRAINT `FK_c_classes_player_characters` FOREIGN KEY (`c_class_id`) REFERENCES `c_classes` (`id`),
  CONSTRAINT `FK_images_player_characters` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`),
  CONSTRAINT `FK_in_kingdoms_player_characters` FOREIGN KEY (`in_kingdom`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_in_levels_player_characters` FOREIGN KEY (`kingdom_level`) REFERENCES `levels` (`id`),
  CONSTRAINT `FK_kingdoms_player_characters` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_player_characters` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`),
  CONSTRAINT `FK_races_player_characters` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`),
  CONSTRAINT `FK_worlds_player_characters` FOREIGN KEY (`in_world`) REFERENCES `worlds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `player_characters` */

LOCK TABLES `player_characters` WRITE;

insert  into `player_characters`(`id`,`name`,`player_id`,`c_class_id`,`race_id`,`level`,`next_level_at`,`experience`,`max_HP`,`max_MP`,`HP`,`MP`,`kingdom_id`,`house_x`,`house_y`,`turns`,`base_str`,`base_dex`,`base_mag`,`base_int`,`base_con`,`base_dfn`,`base_dam`,`freepts`,`str`,`dex`,`mag`,`int`,`con`,`dfn`,`dam`,`trn_str`,`trn_dex`,`trn_mag`,`trn_int`,`trn_con`,`trn_dfn`,`trn_dam`,`gold`,`image_id`,`wellness`,`char_stat`,`in_kingdom`,`bigx`,`bigy`,`kingdom_level`,`in_world`) values (-1,'System',-1,1,1,500,0,0,9999,9999,999,999,-1,0,0,997,999,999,999,999,999,999,999,0,999,999,999,999,999,999,999,0,0,0,0,0,0,0,0,1,1,1,NULL,0,0,NULL,1),(1,'Mr.Oblivious',1,3,1,100,10365,44115851,999999,999999,999999,999999,1,1,1,99838,999999,999999,999999,999999,999999,999999,999999,0,999999,999999,999999,999999,999999,999999,999999,7,11,11,11,15,11,8,60403,1,1,1,1,0,0,1,1);

UNLOCK TABLES;

/*Table structure for table `players` */

DROP TABLE IF EXISTS `players`;

CREATE TABLE `players` (
  `id` int(11) NOT NULL auto_increment COMMENT 'Player ID number',
  `handle` varchar(32) NOT NULL COMMENT 'Player''s user name',
  `passwd` varchar(256) NOT NULL COMMENT 'Player''s password',
  `city` varchar(32) default '' COMMENT 'Player''s RL hometown',
  `state` varchar(2) default '' COMMENT 'Player''s RL homestate',
  `country` varchar(32) default '' COMMENT 'Player''s RL home country',
  `email` varchar(64) default '' COMMENT 'Player''s email',
  `AIM` varchar(32) default '' COMMENT 'Player''s AIM screen name',
  `yahoo_sn` varchar(32) default '' COMMENT 'layer''s yahoo messanger screenname',
  `bio` text COMMENT 'Player''s persnal biography',
  `account_status` int(3) NOT NULL default '1' COMMENT 'Account status. If the player is active, suspended, banned, blocked, mod privilidges, etc.',
  `admin` tinyint(1) default '0',
  `table_editor_access` tinyint(1) default '0',
  `mod_level` int(2) default '0' COMMENT 'Level of mod status. Totally arbitrary, and only used with boards. Level 0 is no mod status. Mods can only ban other players from forums with lesser status.',
  `joined` date default NULL COMMENT 'when the player joined',
  PRIMARY KEY  (`id`),
  KEY `handle` (`handle`),
  KEY `country` (`country`),
  KEY `state` (`state`),
  KEY `city` (`city`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `players` */

LOCK TABLES `players` WRITE;

insert  into `players`(`id`,`handle`,`passwd`,`city`,`state`,`country`,`email`,`AIM`,`yahoo_sn`,`bio`,`account_status`,`admin`,`table_editor_access`,`mod_level`,`joined`) values (-1,'System','36cdf5d5b5ab03f1f713e804b07874509c0b2d03',NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,1,1,9,'2008-07-02'),(1,'Fhugue','36cdf5d5b5ab03f1f713e804b07874509c0b2d03','Madtown','WI','','','','','Putting together this game thing.',1,1,1,9,'2008-07-02');

UNLOCK TABLES;

/*Table structure for table `pref_lists` */

DROP TABLE IF EXISTS `pref_lists`;

CREATE TABLE `pref_lists` (
  `id` int(11) NOT NULL auto_increment,
  `kingdom_id` int(11) NOT NULL COMMENT 'The kingdom this item is a preference for',
  `pref_list_type` int(3) NOT NULL COMMENT 'They type of item (ie, feature, creature, event, etc)',
  `thing_id` int(11) NOT NULL COMMENT 'ID of the thigng this row represents',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id_pref_list_type` (`kingdom_id`,`pref_list_type`),
  KEY `thing_id` (`thing_id`),
  KEY `kingdom_id` (`kingdom_id`),
  CONSTRAINT `FK_kingdms_pref_lists` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `pref_lists` */

LOCK TABLES `pref_lists` WRITE;

insert  into `pref_lists`(`id`,`kingdom_id`,`pref_list_type`,`thing_id`) values (114,-1,3,49),(115,-1,2,22),(116,-1,2,26),(117,-1,2,36),(118,-1,3,60),(119,-1,3,58),(120,-1,3,16),(121,-1,3,18),(122,-1,3,22),(123,-1,3,17),(124,-1,3,15),(125,-1,3,55),(126,-1,3,59),(127,-1,3,19),(129,-1,3,21),(130,-1,3,57),(131,-1,3,20),(132,-1,3,56),(133,1,1,43),(134,1,1,22),(135,1,1,37),(136,1,1,41),(137,1,1,40),(138,1,1,26),(139,1,1,36),(140,1,1,17),(141,1,1,29),(142,1,1,10),(143,1,1,32),(144,1,1,25),(145,1,1,19),(146,1,1,24),(147,1,1,15),(148,1,1,38),(149,1,1,23),(150,1,1,30),(151,1,1,16),(152,1,1,21),(153,1,1,3),(154,1,1,1),(155,1,1,18),(156,1,1,42),(157,1,1,27),(158,1,1,35),(159,1,1,14),(160,1,1,20),(161,1,1,28),(162,1,1,13),(163,1,1,31),(164,1,1,39),(165,1,1,33),(166,1,1,34),(171,1,2,4),(172,1,2,6),(173,1,2,50),(174,1,2,48),(175,1,2,54),(176,1,2,29),(177,1,2,38),(178,1,2,40),(179,1,2,42),(180,1,2,13),(181,1,2,37),(182,1,2,11),(183,1,2,21),(184,1,2,25),(185,1,2,5),(186,1,2,32),(187,1,2,43),(188,1,2,19),(189,1,2,20),(190,1,2,34),(191,1,2,39),(192,1,2,65),(193,1,2,66),(194,1,2,67),(195,1,3,68),(196,1,2,12),(198,1,2,14),(199,1,2,10),(200,1,2,30),(201,1,2,69),(202,1,2,70),(203,1,2,71),(204,1,2,72),(205,1,2,73),(206,1,2,74),(207,1,2,75),(208,1,2,8),(209,1,2,7),(217,1,2,76),(218,1,3,76),(219,1,3,84),(220,1,3,82),(221,1,3,86),(222,1,3,79),(223,1,3,83),(224,1,2,77),(225,1,3,81),(226,1,3,78),(227,1,3,77),(228,1,2,16),(229,1,2,33),(230,1,2,55),(231,1,2,57),(232,1,2,78),(233,1,3,85),(234,1,3,80),(235,1,3,87),(236,1,3,88),(237,1,3,89);

UNLOCK TABLES;

/*Table structure for table `quest_creature_kills` */

DROP TABLE IF EXISTS `quest_creature_kills`;

CREATE TABLE `quest_creature_kills` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `creature_id` int(11) NOT NULL COMMENT 'ID of the creature to kill',
  `num_kills` int(11) NOT NULL default '1' COMMENT 'number of this creature that must be killed to complete the quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `creature_id` (`creature_id`),
  KEY `quest_creatures_id` (`quest_id`,`creature_id`),
  CONSTRAINT `FK_creatures_quest_creature_kills` FOREIGN KEY (`creature_id`) REFERENCES `creatures` (`id`),
  CONSTRAINT `FK_quests_quest_creature_kills` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_creature_kills` */

LOCK TABLES `quest_creature_kills` WRITE;

insert  into `quest_creature_kills`(`id`,`quest_id`,`creature_id`,`num_kills`) values (1,3,19,10),(2,3,18,10),(3,5,34,20),(4,7,33,1),(5,8,39,1),(6,11,17,10),(7,13,13,15),(8,14,29,6),(9,15,1,30),(10,16,15,15);

UNLOCK TABLES;

/*Table structure for table `quest_explores` */

DROP TABLE IF EXISTS `quest_explores`;

CREATE TABLE `quest_explores` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `event_id` int(11) NOT NULL COMMENT 'ID of the [move] event the player_character must encounter to solve this quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `event_id` (`event_id`),
  CONSTRAINT `FK_events_quest_explores` FOREIGN KEY (`event_id`) REFERENCES `events` (`id`),
  CONSTRAINT `FK_quests_quest_explores` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_explores` */

LOCK TABLES `quest_explores` WRITE;

insert  into `quest_explores`(`id`,`quest_id`,`event_id`) values (1,1,2),(2,2,4),(3,4,66),(4,9,78);

UNLOCK TABLES;

/*Table structure for table `quest_items` */

DROP TABLE IF EXISTS `quest_items`;

CREATE TABLE `quest_items` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `item_id` int(11) NOT NULL COMMENT 'ID of the item the player_character needs to have to complete this part of the quest.',
  `num` int(2) NOT NULL default '1' COMMENT 'Number of this item the player_character needs.',
  `surrender_item?` tinyint(1) NOT NULL default '0' COMMENT 'If true, then the player_character must surrender the item(s) when they collect the reward. The item(s) will be placed in the king''s store room.',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `item_id` (`item_id`),
  KEY `quest_item_id` (`quest_id`,`item_id`),
  CONSTRAINT `FK_items_quest_items` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_quests_quest_items` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_items` */

LOCK TABLES `quest_items` WRITE;

insert  into `quest_items`(`id`,`quest_id`,`item_id`,`num`,`surrender_item?`) values (1,6,5,6,1),(2,10,6,1,1),(3,12,7,1,1);

UNLOCK TABLES;

/*Table structure for table `quest_kill_n_npcs` */

DROP TABLE IF EXISTS `quest_kill_n_npcs`;

CREATE TABLE `quest_kill_n_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `npc_division` int(3) NOT NULL COMMENT 'Type of NPCs to kill',
  `kingdom_id` int(11) default NULL COMMENT 'ID of the kingdom in which to kill these npcs. If null, any kingdom will do.',
  `num_kills` int(10) NOT NULL COMMENT 'Minimum number of this type to kill to complete the quest',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `kingdom_id` (`kingdom_id`),
  CONSTRAINT `FK_kingdoms_quest_kill_n_npcs` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_quests_quest_kill_n_npcs` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_kill_n_npcs` */

LOCK TABLES `quest_kill_n_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `quest_kill_pcs` */

DROP TABLE IF EXISTS `quest_kill_pcs`;

CREATE TABLE `quest_kill_pcs` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `player_character_id` int(11) NOT NULL COMMENT 'ID of the player_character to be killed.',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `player_character_id` (`player_character_id`),
  CONSTRAINT `FK_player_characters_quest_kill_pcs` FOREIGN KEY (`player_character_id`) REFERENCES `player_characters` (`id`),
  CONSTRAINT `FK_quests_quest_kill_pcs` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_kill_pcs` */

LOCK TABLES `quest_kill_pcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `quest_kill_s_npcs` */

DROP TABLE IF EXISTS `quest_kill_s_npcs`;

CREATE TABLE `quest_kill_s_npcs` (
  `id` int(11) NOT NULL auto_increment,
  `quest_id` int(11) NOT NULL COMMENT 'ID of the quest',
  `npc_id` int(11) NOT NULL COMMENT 'ID of the targeted NPC (NA for peasants, as all of them are nameless)',
  PRIMARY KEY  (`id`),
  KEY `quest_id` (`quest_id`),
  KEY `npc_id` (`npc_id`),
  CONSTRAINT `FK_npcs_quest_kill_s_npcs` FOREIGN KEY (`npc_id`) REFERENCES `npcs` (`id`),
  CONSTRAINT `FK_quests_quest_kill_s_npcs` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `quest_kill_s_npcs` */

LOCK TABLES `quest_kill_s_npcs` WRITE;

UNLOCK TABLES;

/*Table structure for table `quests` */

DROP TABLE IF EXISTS `quests`;

CREATE TABLE `quests` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the quest',
  `name` varchar(32) NOT NULL COMMENT 'name of the quest',
  `description` varchar(256) default NULL COMMENT 'description of the quest',
  `kingdom_id` int(11) NOT NULL COMMENT 'What kingdom this quest is for',
  `player_id` int(11) NOT NULL COMMENT 'Player who created the test',
  `max_level` int(5) default '500' COMMENT 'The maximum level a player can have to complete the quest. player_characters must be under this level to sign up for the quest. player_character must remain within this level plus one at time of completion. If the level is null, there is no level restrict',
  `max_completeable` int(10) default NULL COMMENT 'The maximum number of quests that may be completed by player_characters. If null, there is no limitation.',
  `quest_status` int(3) NOT NULL COMMENT 'The status of the quest, ie competable, noncompleteable, retired, etc.',
  `gold` int(20) default NULL COMMENT 'The award money given to the player_character from teh kingdom coffers for completing this quest',
  `item_id` int(11) default NULL COMMENT 'This item given to the player_character for completing this quest. This item comes from the storerooms. If there no of the items, the player_character can take the cash value, or try again later to claim the prize.',
  `quest_id` int(11) default NULL COMMENT 'The quest which is prerequisite for being able to attempt and complete this quest.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `player_id` (`player_id`),
  KEY `id_status` (`id`,`quest_status`),
  KEY `item_id` (`item_id`),
  KEY `kingdom_id_quest_status` (`kingdom_id`,`quest_status`),
  KEY `name` (`kingdom_id`,`name`),
  KEY `kingdom_id_quest_status_name` (`kingdom_id`,`quest_status`,`name`),
  KEY `quest_id` (`quest_id`),
  CONSTRAINT `FK_items_quests` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`),
  CONSTRAINT `FK_kingdoms_quests` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`),
  CONSTRAINT `FK_players_quests` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`),
  CONSTRAINT `FK_quests` FOREIGN KEY (`quest_id`) REFERENCES `quests` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC COMMENT='InnoDB free: 105472 kB';

/*Data for the table `quests` */

LOCK TABLES `quests` WRITE;

insert  into `quests`(`id`,`name`,`description`,`kingdom_id`,`player_id`,`max_level`,`max_completeable`,`quest_status`,`gold`,`item_id`,`quest_id`) values (1,'Journey to the Planet Rock','',1,1,500,NULL,1,350,NULL,12),(2,'Visit roots of oak','',1,1,500,NULL,1,50,NULL,NULL),(3,'Vermin Extermination','Keep the vermin population down',1,1,500,NULL,1,200,NULL,2),(4,'Clear the stairway blockage','Something is blocking the stairs of the dungeon.',1,1,500,NULL,1,0,9,3),(5,'Zombie Population Control','Zombies are getting out of hand',1,1,500,NULL,1,300,NULL,4),(6,'Collect 6 Rusty Daggers','As part of the Make the Dungeons Safe For Children Campaign',1,1,500,NULL,1,NULL,10,5),(7,'Kill the Wherewolf','',1,1,500,NULL,1,400,NULL,6),(8,'Kill the Vampyre','',1,1,500,NULL,1,500,NULL,7),(9,'Find the Bedrock','Its in the dungeon',1,1,500,NULL,1,200,NULL,8),(10,'Fetch the Lead Axe','Also in the dungeon',1,1,500,NULL,1,NULL,11,9),(11,'Chop down the rabid trees','Clear out some of the bad wood',1,1,500,NULL,1,300,NULL,14),(12,'Retrieve the Mountaintop','',1,1,500,NULL,1,200,NULL,14),(13,'Squirrel Hunt','Take out some squirrells, before tehy take us out.',1,1,500,NULL,1,100,NULL,NULL),(14,'Stone Cutter','Cut them stones',1,1,500,NULL,1,200,NULL,13),(15,'Monkey Population Control','They may look cute, but they bite',1,1,500,NULL,1,300,NULL,14),(16,'Cactus Milk','Defeat some cacti',1,1,500,NULL,1,350,NULL,15);

UNLOCK TABLES;

/*Table structure for table `race_equip_locs` */

DROP TABLE IF EXISTS `race_equip_locs`;

CREATE TABLE `race_equip_locs` (
  `id` int(11) NOT NULL auto_increment,
  `race_id` int(11) NOT NULL COMMENT 'Race ID',
  `equip_loc` int(3) NOT NULL COMMENT 'the equipment location number.',
  PRIMARY KEY  (`id`),
  KEY `race_id` (`race_id`),
  KEY `equip_loc` (`equip_loc`),
  CONSTRAINT `FK_races_race_equip_locs` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `race_equip_locs` */

LOCK TABLES `race_equip_locs` WRITE;

insert  into `race_equip_locs`(`id`,`race_id`,`equip_loc`) values (1,1,1),(2,1,2),(3,1,3),(4,2,4),(170,16,90),(171,16,90),(172,16,4),(173,16,20),(174,16,3),(175,16,21),(176,16,21),(177,16,7),(178,16,20),(179,16,8),(193,20,90),(194,20,9),(195,20,9),(196,20,4),(197,20,30),(198,20,31),(199,20,32),(200,20,90),(201,21,30),(202,21,20),(203,21,20),(204,21,20),(205,21,20),(206,21,32),(207,21,4),(208,21,20),(209,21,20),(210,21,20),(211,21,20);

UNLOCK TABLES;

/*Table structure for table `race_levels` */

DROP TABLE IF EXISTS `race_levels`;

CREATE TABLE `race_levels` (
  `id` int(11) NOT NULL auto_increment,
  `race_id` int(11) NOT NULL COMMENT 'Race ID',
  `level` int(5) NOT NULL,
  `min_xp` int(10) NOT NULL,
  `dam` float(10,1) NOT NULL default '0.0' COMMENT 'damage bonus',
  `dfn` float(10,1) NOT NULL default '0.0' COMMENT 'defense bonus',
  `str` float(10,1) NOT NULL default '0.0' COMMENT 'strength bonus',
  `dex` float(10,1) NOT NULL default '0.0' COMMENT 'dexterity bonus',
  `mag` float(10,1) NOT NULL default '0.0' COMMENT 'magic bonus',
  `int` float(10,1) NOT NULL default '0.0' COMMENT 'intelligence bonus',
  `con` float(10,1) NOT NULL default '0.0' COMMENT 'constitution bonus',
  `freepts` float(2,1) NOT NULL default '0.0' COMMENT 'Bonus stat points player_character may redistribute freely.',
  PRIMARY KEY  (`id`),
  KEY `race_id` (`race_id`),
  KEY `race_level_index` (`race_id`,`level`),
  KEY `min_xp` (`race_id`,`min_xp`),
  CONSTRAINT `FK_races_race_levels` FOREIGN KEY (`race_id`) REFERENCES `races` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `race_levels` */

LOCK TABLES `race_levels` WRITE;

insert  into `race_levels`(`id`,`race_id`,`level`,`min_xp`,`dam`,`dfn`,`str`,`dex`,`mag`,`int`,`con`,`freepts`) values (2747,1,0,0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0),(2748,1,1,320,5.5,5.5,5.5,5.5,5.5,5.5,5.5,5.0),(2749,1,2,640,6.0,6.0,6.0,6.0,6.0,6.0,6.0,5.0),(2750,1,3,1044,6.5,6.5,6.5,6.5,6.5,6.5,6.5,5.0),(2751,1,4,1448,7.0,7.0,7.0,7.0,7.0,7.0,7.0,5.0),(2752,1,5,1936,7.5,7.5,7.5,7.5,7.5,7.5,7.5,5.0),(2753,1,6,2424,8.0,8.0,8.0,8.0,8.0,8.0,8.0,5.0),(2754,1,7,2996,8.5,8.5,8.5,8.5,8.5,8.5,8.5,5.0),(2755,1,8,3568,9.0,9.0,9.0,9.0,9.0,9.0,9.0,5.0),(2756,1,9,4224,9.5,9.5,9.5,9.5,9.5,9.5,9.5,5.0),(2757,1,10,4880,10.0,10.0,10.0,10.0,10.0,10.0,10.0,9.9),(2758,1,11,5680,10.5,10.5,10.5,10.5,10.5,10.5,10.5,9.9),(2759,1,12,6480,11.0,11.0,11.0,11.0,11.0,11.0,11.0,9.9),(2760,1,13,7364,11.5,11.5,11.5,11.5,11.5,11.5,11.5,9.9),(2761,1,14,8248,12.0,12.0,12.0,12.0,12.0,12.0,12.0,9.9),(2762,1,15,9216,12.5,12.5,12.5,12.5,12.5,12.5,12.5,9.9),(2763,1,16,10184,13.0,13.0,13.0,13.0,13.0,13.0,13.0,9.9),(2764,1,17,11236,13.5,13.5,13.5,13.5,13.5,13.5,13.5,9.9),(2765,1,18,12288,14.0,14.0,14.0,14.0,14.0,14.0,14.0,9.9),(2766,1,19,13424,14.5,14.5,14.5,14.5,14.5,14.5,14.5,9.9),(2767,1,20,14560,16.0,16.0,16.0,16.0,16.0,16.0,16.0,9.9),(2768,1,21,15864,17.5,17.5,17.5,17.5,17.5,17.5,17.5,9.9),(2769,1,22,17252,19.0,19.0,19.0,19.0,19.0,19.0,19.0,9.9),(2770,1,23,18808,20.5,20.5,20.5,20.5,20.5,20.5,20.5,9.9),(2771,1,24,20448,22.0,22.0,22.0,22.0,22.0,22.0,22.0,9.9),(2772,1,25,22256,23.5,23.5,23.5,23.5,23.5,23.5,23.5,9.9),(2773,1,26,24148,25.0,25.0,25.0,25.0,25.0,25.0,25.0,9.9),(2774,1,27,26208,26.5,26.5,26.5,26.5,26.5,26.5,26.5,9.9),(2775,1,28,28352,28.0,28.0,28.0,28.0,28.0,28.0,28.0,9.9),(2776,1,29,30664,29.5,29.5,29.5,29.5,29.5,29.5,29.5,9.9),(2777,1,30,33060,31.0,31.0,31.0,31.0,31.0,31.0,31.0,9.9),(2778,1,31,35624,32.5,32.5,32.5,32.5,32.5,32.5,32.5,9.9),(2779,1,32,38272,34.0,34.0,34.0,34.0,34.0,34.0,34.0,9.9),(2780,1,33,41060,35.5,35.5,35.5,35.5,35.5,35.5,35.5,9.9),(2781,1,34,43995,37.0,37.0,37.0,37.0,37.0,37.0,37.0,9.9),(2782,1,35,47602,38.5,38.5,38.5,38.5,38.5,38.5,38.5,9.9),(2783,1,36,51734,40.0,40.0,40.0,40.0,40.0,40.0,40.0,9.9),(2784,1,37,57294,41.5,41.5,41.5,41.5,41.5,41.5,41.5,9.9),(2785,1,38,63757,43.0,43.0,43.0,43.0,43.0,43.0,43.0,9.9),(2786,1,39,72404,44.5,44.5,44.5,44.5,44.5,44.5,44.5,9.9),(2787,1,40,82332,47.0,47.0,47.0,47.0,47.0,47.0,47.0,9.9),(2788,1,41,96859,49.5,49.5,49.5,49.5,49.5,49.5,49.5,9.9),(2789,1,42,115082,52.0,52.0,52.0,52.0,52.0,52.0,52.0,9.9),(2790,1,43,139794,54.5,54.5,54.5,54.5,54.5,54.5,54.5,9.9),(2791,1,44,169462,57.0,57.0,57.0,57.0,57.0,57.0,57.0,9.9),(2792,1,45,207509,59.5,59.5,59.5,59.5,59.5,59.5,59.5,9.9),(2793,1,46,251772,62.0,62.0,62.0,62.0,62.0,62.0,62.0,9.9),(2794,1,47,306304,64.5,64.5,64.5,64.5,64.5,64.5,64.5,9.9),(2795,1,48,368312,67.0,67.0,67.0,67.0,67.0,67.0,67.0,9.9),(2796,1,49,442479,69.5,69.5,69.5,69.5,69.5,69.5,69.5,9.9),(2797,1,50,525382,72.0,72.0,72.0,72.0,72.0,72.0,72.0,9.9),(2798,1,51,622334,74.5,74.5,74.5,74.5,74.5,74.5,74.5,9.9),(2799,1,52,729282,77.0,77.0,77.0,77.0,77.0,77.0,77.0,9.9),(2800,1,53,852169,79.5,79.5,79.5,79.5,79.5,79.5,79.5,9.9),(2801,1,54,986312,82.0,82.0,82.0,82.0,82.0,82.0,82.0,9.9),(2802,1,55,1138284,84.5,84.5,84.5,84.5,84.5,84.5,84.5,9.9),(2803,1,56,1302772,87.0,87.0,87.0,87.0,87.0,87.0,87.0,9.9),(2804,1,57,1486979,89.5,89.5,89.5,89.5,89.5,89.5,89.5,9.9),(2805,1,58,1684962,92.0,92.0,92.0,92.0,92.0,92.0,92.0,9.9),(2806,1,59,1904554,94.5,94.5,94.5,94.5,94.5,94.5,94.5,9.9),(2807,1,60,2139182,98.0,98.0,98.0,98.0,98.0,98.0,98.0,9.9),(2808,1,61,2405394,101.5,101.5,101.5,101.5,101.5,101.5,101.5,9.9),(2809,1,62,2696617,105.0,105.0,105.0,105.0,105.0,105.0,105.0,9.9),(2810,1,63,3022952,108.5,108.5,108.5,108.5,108.5,108.5,108.5,9.9),(2811,1,64,3376944,112.0,112.0,112.0,112.0,112.0,112.0,112.0,9.9),(2812,1,65,3769576,115.5,115.5,115.5,115.5,115.5,115.5,115.5,9.9),(2813,1,66,4192511,119.0,119.0,119.0,119.0,119.0,119.0,119.0,9.9),(2814,1,67,4657614,122.5,122.5,122.5,122.5,122.5,122.5,122.5,9.9),(2815,1,68,5155666,126.0,126.0,126.0,126.0,126.0,126.0,126.0,9.9),(2816,1,69,5699414,129.5,129.5,129.5,129.5,129.5,129.5,129.5,9.9),(2817,1,70,6278757,133.0,133.0,133.0,133.0,133.0,133.0,133.0,9.9),(2818,1,71,6907324,136.5,136.5,136.5,136.5,136.5,136.5,136.5,9.9),(2819,1,72,7574132,140.0,140.0,140.0,140.0,140.0,140.0,140.0,9.9),(2820,1,73,8293692,143.5,143.5,143.5,143.5,143.5,143.5,143.5,9.9),(2821,1,74,9054139,147.0,147.0,147.0,147.0,147.0,147.0,147.0,9.9),(2822,2,0,0,10.0,15.0,20.0,10.0,0.0,5.0,10.0,5.0),(2823,2,1,760,11.0,16.5,22.0,11.0,0.0,5.5,11.0,5.0),(2824,2,2,1592,12.0,18.0,24.0,12.0,0.0,6.0,12.0,5.0),(2825,2,3,2520,13.0,19.5,26.0,13.0,0.0,6.5,13.0,5.0),(2826,2,4,3520,14.0,21.0,28.0,14.0,0.0,7.0,14.0,5.0),(2827,2,5,4616,15.0,22.5,30.0,15.0,0.0,7.5,15.0,5.0),(2828,2,6,5784,16.0,24.0,32.0,16.0,0.0,8.0,16.0,5.0),(2829,2,7,7048,17.0,25.5,34.0,17.0,0.0,8.5,17.0,5.0),(2830,2,8,8380,18.0,27.0,36.0,18.0,0.0,9.0,18.0,5.0),(2831,2,9,9844,19.0,28.5,38.0,19.0,0.0,9.5,19.0,5.0),(2832,2,10,11488,20.0,30.0,40.0,20.0,0.0,10.0,20.0,9.9),(2833,2,11,13468,21.0,31.5,42.0,21.0,0.0,10.5,21.0,9.9),(2834,2,12,15772,22.0,33.0,44.0,22.0,0.0,11.0,22.0,9.9),(2835,2,13,18496,23.0,34.5,46.0,23.0,0.0,11.5,23.0,9.9),(2836,2,14,21684,24.0,36.0,48.0,24.0,0.0,12.0,24.0,9.9),(2837,2,15,25472,25.0,37.5,50.0,25.0,0.0,12.5,25.0,9.9),(2838,2,16,29917,26.0,39.0,52.0,26.0,0.0,13.0,26.0,9.9),(2839,2,17,35214,27.0,40.5,54.0,27.0,0.0,13.5,27.0,9.9),(2840,2,18,41366,28.0,42.0,56.0,28.0,0.0,14.0,28.0,9.9),(2841,2,19,48622,29.0,43.5,58.0,29.0,0.0,14.5,29.0,9.9),(2842,2,20,56931,31.0,46.0,61.0,31.0,1.0,16.0,31.0,9.9),(2843,2,21,67358,33.0,48.5,64.0,33.0,2.0,17.5,33.0,9.9),(2844,2,22,79942,35.0,51.0,67.0,35.0,3.0,19.0,35.0,9.9),(2845,2,23,95253,37.0,53.5,70.0,37.0,4.0,20.5,37.0,9.9),(2846,2,24,113445,39.0,56.0,73.0,39.0,5.0,22.0,39.0,9.9),(2847,2,25,135381,41.0,58.5,76.0,41.0,6.0,23.5,41.0,9.9),(2848,2,26,161136,43.0,61.0,79.0,43.0,7.0,25.0,43.0,9.9),(2849,2,27,191661,45.0,63.5,82.0,45.0,8.0,26.5,45.0,9.9),(2850,2,28,226941,47.0,66.0,85.0,47.0,9.0,28.0,47.0,9.9),(2851,2,29,268017,49.0,68.5,88.0,49.0,10.0,29.5,49.0,9.9),(2852,2,30,314784,51.0,71.0,91.0,51.0,11.0,31.0,51.0,9.9),(2853,2,31,368373,53.0,73.5,94.0,53.0,12.0,32.5,53.0,9.9),(2854,2,32,428589,55.0,76.0,97.0,55.0,13.0,34.0,55.0,9.9),(2855,2,33,496649,57.0,78.5,100.0,57.0,14.0,35.5,57.0,9.9),(2856,2,34,572281,59.0,81.0,103.0,59.0,15.0,37.0,59.0,9.9),(2857,2,35,656859,61.0,83.5,106.0,61.0,16.0,38.5,61.0,9.9),(2858,2,36,749999,63.0,86.0,109.0,63.0,17.0,40.0,63.0,9.9),(2859,2,37,853219,65.0,88.5,112.0,65.0,18.0,41.5,65.0,9.9),(2860,2,38,965991,67.0,91.0,115.0,67.0,19.0,43.0,67.0,9.9),(2861,2,39,1089977,69.0,93.5,118.0,69.0,20.0,44.5,69.0,9.9),(2862,2,40,1224505,72.0,97.0,122.0,72.0,22.0,47.0,72.0,9.9),(2863,2,41,1376415,75.0,100.5,126.0,75.0,24.0,49.5,75.0,9.9),(2864,2,42,1545431,78.0,104.0,130.0,78.0,26.0,52.0,78.0,9.9),(2865,2,43,1734151,81.0,107.5,134.0,81.0,28.0,54.5,81.0,9.9),(2866,2,44,1942083,84.0,111.0,138.0,84.0,30.0,57.0,84.0,9.9),(2867,2,45,2172041,87.0,114.5,142.0,87.0,32.0,59.5,87.0,9.9),(2868,2,46,2423317,90.0,118.0,146.0,90.0,34.0,62.0,90.0,9.9),(2869,2,47,2698937,93.0,121.5,150.0,93.0,36.0,64.5,93.0,9.9),(2870,2,48,2998017,96.0,125.0,154.0,96.0,38.0,67.0,96.0,9.9),(2871,2,49,3323875,99.0,128.5,158.0,99.0,40.0,69.5,99.0,9.9),(2872,2,50,3675443,102.0,132.0,162.0,102.0,42.0,72.0,102.0,9.9),(2873,2,51,4056255,105.0,135.5,166.0,105.0,44.0,74.5,105.0,9.9),(2874,2,52,4465027,108.0,139.0,170.0,108.0,46.0,77.0,108.0,9.9),(2875,2,53,4905509,111.0,142.5,174.0,111.0,48.0,79.5,111.0,9.9),(2876,2,54,5376201,114.0,146.0,178.0,114.0,50.0,82.0,114.0,9.9),(2877,2,55,5881069,117.0,149.5,182.0,117.0,52.0,84.5,117.0,9.9),(2878,2,56,6418397,120.0,153.0,186.0,120.0,54.0,87.0,120.0,9.9),(2879,2,57,6992367,123.0,156.5,190.0,123.0,56.0,89.5,123.0,9.9),(2880,2,58,7601047,126.0,160.0,194.0,126.0,58.0,92.0,126.0,9.9),(2881,2,59,8248835,129.0,163.5,198.0,129.0,60.0,94.5,129.0,9.9),(2882,2,60,8933583,133.0,168.0,203.0,133.0,63.0,98.0,133.0,9.9),(2883,2,61,9672400,137.0,172.5,208.0,137.0,66.0,101.5,137.0,9.9),(2884,2,62,10463768,141.0,177.0,213.0,141.0,69.0,105.0,141.0,9.9),(2885,2,63,11313471,145.0,181.5,218.0,145.0,72.0,108.5,145.0,9.9),(2886,2,64,12219703,149.0,186.0,223.0,149.0,75.0,112.0,149.0,9.9),(2887,2,65,13188536,153.0,190.5,228.0,153.0,78.0,115.5,153.0,9.9),(2888,2,66,14217876,157.0,195.0,233.0,157.0,81.0,119.0,157.0,9.9),(2889,2,67,15314083,161.0,199.5,238.0,161.0,84.0,122.5,161.0,9.9),(2890,2,68,16474775,165.0,204.0,243.0,165.0,87.0,126.0,165.0,9.9),(2891,2,69,17706600,169.0,208.5,248.0,169.0,90.0,129.5,169.0,9.9),(2892,2,70,19006888,173.0,213.0,253.0,173.0,93.0,133.0,173.0,9.9),(2893,2,71,20382575,177.0,217.5,258.0,177.0,96.0,136.5,177.0,9.9),(2894,2,72,21830703,181.0,222.0,263.0,181.0,99.0,140.0,181.0,9.9),(2895,2,73,23358496,185.0,226.5,268.0,185.0,102.0,143.5,185.0,9.9),(2896,2,74,24962708,189.0,231.0,273.0,189.0,105.0,147.0,189.0,9.9),(2897,3,0,0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0),(2898,3,1,512,7.7,7.7,7.7,7.7,7.7,7.7,7.7,7.0),(2899,3,2,1024,8.4,8.4,8.4,8.4,8.4,8.4,8.4,7.0),(2900,3,3,1620,9.1,9.1,9.1,9.1,9.1,9.1,9.1,7.0),(2901,3,4,2300,9.8,9.8,9.8,9.8,9.8,9.8,9.8,7.0),(2902,3,5,2980,10.5,10.5,10.5,10.5,10.5,10.5,10.5,7.0),(2903,3,6,3744,11.2,11.2,11.2,11.2,11.2,11.2,11.2,7.0),(2904,3,7,4592,11.9,11.9,11.9,11.9,11.9,11.9,11.9,7.0),(2905,3,8,5440,12.6,12.6,12.6,12.6,12.6,12.6,12.6,7.0),(2906,3,9,6372,13.3,13.3,13.3,13.3,13.3,13.3,13.3,7.0),(2907,3,10,7388,14.0,14.0,14.0,14.0,14.0,14.0,14.0,9.9),(2908,3,11,8488,14.7,14.7,14.7,14.7,14.7,14.7,14.7,9.9),(2909,3,12,9672,15.4,15.4,15.4,15.4,15.4,15.4,15.4,9.9),(2910,3,13,10940,16.1,16.1,16.1,16.1,16.1,16.1,16.1,9.9),(2911,3,14,12292,16.8,16.8,16.8,16.8,16.8,16.8,16.8,9.9),(2912,3,15,13644,17.5,17.5,17.5,17.5,17.5,17.5,17.5,9.9),(2913,3,16,15080,18.2,18.2,18.2,18.2,18.2,18.2,18.2,9.9),(2914,3,17,16600,18.9,18.9,18.9,18.9,18.9,18.9,18.9,9.9),(2915,3,18,18120,19.6,19.6,19.6,19.6,19.6,19.6,19.6,9.9),(2916,3,19,19724,20.3,20.3,20.3,20.3,20.3,20.3,20.3,9.9),(2917,3,20,21412,22.0,22.0,22.0,22.0,22.0,22.0,22.0,9.9),(2918,3,21,23184,23.7,23.7,23.7,23.7,23.7,23.7,23.7,9.9),(2919,3,22,25124,25.4,25.4,25.4,25.4,25.4,25.4,25.4,9.9),(2920,3,23,27232,27.1,27.1,27.1,27.1,27.1,27.1,27.1,9.9),(2921,3,24,29508,28.8,28.8,28.8,28.8,28.8,28.8,28.8,9.9),(2922,3,25,31868,30.5,30.5,30.5,30.5,30.5,30.5,30.5,9.9),(2923,3,26,34396,32.2,32.2,32.2,32.2,32.2,32.2,32.2,9.9),(2924,3,27,37092,33.9,33.9,33.9,33.9,33.9,33.9,33.9,9.9),(2925,3,28,39872,35.6,35.6,35.6,35.6,35.6,35.6,35.6,9.9),(2926,3,29,42855,37.3,37.3,37.3,37.3,37.3,37.3,37.3,9.9),(2927,3,30,46510,39.0,39.0,39.0,39.0,39.0,39.0,39.0,9.9),(2928,3,31,51341,40.7,40.7,40.7,40.7,40.7,40.7,40.7,9.9),(2929,3,32,56949,42.4,42.4,42.4,42.4,42.4,42.4,42.4,9.9),(2930,3,33,64489,44.1,44.1,44.1,44.1,44.1,44.1,44.1,9.9),(2931,3,34,74465,45.8,45.8,45.8,45.8,45.8,45.8,45.8,9.9),(2932,3,35,85848,47.5,47.5,47.5,47.5,47.5,47.5,47.5,9.9),(2933,3,36,100423,49.2,49.2,49.2,49.2,49.2,49.2,49.2,9.9),(2934,3,37,118694,50.9,50.9,50.9,50.9,50.9,50.9,50.9,9.9),(2935,3,38,139002,52.6,52.6,52.6,52.6,52.6,52.6,52.6,9.9),(2936,3,39,163762,54.3,54.3,54.3,54.3,54.3,54.3,54.3,9.9),(2937,3,40,193478,57.0,57.0,57.0,57.0,57.0,57.0,57.0,9.9),(2938,3,41,231573,59.7,59.7,59.7,59.7,59.7,59.7,59.7,9.9),(2939,3,42,275884,62.4,62.4,62.4,62.4,62.4,62.4,62.4,9.9),(2940,3,43,330464,65.1,65.1,65.1,65.1,65.1,65.1,65.1,9.9),(2941,3,44,396447,67.8,67.8,67.8,67.8,67.8,67.8,67.8,9.9),(2942,3,45,470662,70.5,70.5,70.5,70.5,70.5,70.5,70.5,9.9),(2943,3,46,558170,73.2,73.2,73.2,73.2,73.2,73.2,73.2,9.9),(2944,3,47,660105,75.9,75.9,75.9,75.9,75.9,75.9,75.9,9.9),(2945,3,48,772288,78.6,78.6,78.6,78.6,78.6,78.6,78.6,9.9),(2946,3,49,900788,81.3,81.3,81.3,81.3,81.3,81.3,81.3,9.9),(2947,3,50,1046739,84.0,84.0,84.0,84.0,84.0,84.0,84.0,9.9),(2948,3,51,1211275,86.7,86.7,86.7,86.7,86.7,86.7,86.7,9.9),(2949,3,52,1388831,89.4,89.4,89.4,89.4,89.4,89.4,89.4,9.9),(2950,3,53,1586862,92.1,92.1,92.1,92.1,92.1,92.1,92.1,9.9),(2951,3,54,1806502,94.8,94.8,94.8,94.8,94.8,94.8,94.8,9.9),(2952,3,55,2041178,97.5,97.5,97.5,97.5,97.5,97.5,97.5,9.9),(2953,3,56,2299353,100.2,100.2,100.2,100.2,100.2,100.2,100.2,9.9),(2954,3,57,2582161,102.9,102.9,102.9,102.9,102.9,102.9,102.9,9.9),(2955,3,58,2882021,105.6,105.6,105.6,105.6,105.6,105.6,105.6,9.9),(2956,3,59,3208404,108.3,108.3,108.3,108.3,108.3,108.3,108.3,9.9),(2957,3,60,3562444,112.0,112.0,112.0,112.0,112.0,112.0,112.0,9.9),(2958,3,61,3955124,115.7,115.7,115.7,115.7,115.7,115.7,115.7,9.9),(2959,3,62,4378107,119.4,119.4,119.4,119.4,119.4,119.4,119.4,9.9),(2960,3,63,4843258,123.1,123.1,123.1,123.1,123.1,123.1,123.1,9.9),(2961,3,64,5352593,126.8,126.8,126.8,126.8,126.8,126.8,126.8,9.9),(2962,3,65,5896389,130.5,130.5,130.5,130.5,130.5,130.5,130.5,9.9),(2963,3,66,6487897,134.2,134.2,134.2,134.2,134.2,134.2,134.2,9.9),(2964,3,67,7129133,137.9,137.9,137.9,137.9,137.9,137.9,137.9,9.9),(2965,3,68,7808988,141.6,141.6,141.6,141.6,141.6,141.6,141.6,9.9),(2966,3,69,8542099,145.3,145.3,145.3,145.3,145.3,145.3,145.3,9.9),(2967,3,70,9330482,149.0,149.0,149.0,149.0,149.0,149.0,149.0,9.9),(2968,3,71,10176153,152.7,152.7,152.7,152.7,152.7,152.7,152.7,9.9),(2969,3,72,11066113,156.4,156.4,156.4,156.4,156.4,156.4,156.4,9.9),(2970,3,73,12016889,160.1,160.1,160.1,160.1,160.1,160.1,160.1,9.9),(2971,3,74,13030497,163.8,163.8,163.8,163.8,163.8,163.8,163.8,9.9),(2972,16,0,0,20.0,5.0,10.0,10.0,0.0,5.0,10.0,5.0),(2973,16,1,640,22.0,5.5,11.0,11.0,0.0,5.5,11.0,5.0),(2974,16,2,1340,24.0,6.0,12.0,12.0,0.0,6.0,12.0,5.0),(2975,16,3,2124,26.0,6.5,13.0,13.0,0.0,6.5,13.0,5.0),(2976,16,4,2968,28.0,7.0,14.0,14.0,0.0,7.0,14.0,5.0),(2977,16,5,3896,30.0,7.5,15.0,15.0,0.0,7.5,15.0,5.0),(2978,16,6,4884,32.0,8.0,16.0,16.0,0.0,8.0,16.0,5.0),(2979,16,7,5956,34.0,8.5,17.0,17.0,0.0,8.5,17.0,5.0),(2980,16,8,7084,36.0,9.0,18.0,18.0,0.0,9.0,18.0,5.0),(2981,16,9,8332,38.0,9.5,19.0,19.0,0.0,9.5,19.0,5.0),(2982,16,10,9748,40.0,10.0,20.0,20.0,0.0,10.0,20.0,9.9),(2983,16,11,11488,42.0,10.5,21.0,21.0,0.0,10.5,21.0,9.9),(2984,16,12,13540,44.0,11.0,22.0,22.0,0.0,11.0,22.0,9.9),(2985,16,13,16000,46.0,11.5,23.0,23.0,0.0,11.5,23.0,9.9),(2986,16,14,18916,48.0,12.0,24.0,24.0,0.0,12.0,24.0,9.9),(2987,16,15,22384,50.0,12.5,25.0,25.0,0.0,12.5,25.0,9.9),(2988,16,16,26452,52.0,13.0,26.0,26.0,0.0,13.0,26.0,9.9),(2989,16,17,31216,54.0,13.5,27.0,27.0,0.0,13.5,27.0,9.9),(2990,16,18,36724,56.0,14.0,28.0,28.0,0.0,14.0,28.0,9.9),(2991,16,19,43072,58.0,14.5,29.0,29.0,0.0,14.5,29.0,9.9),(2992,16,20,50308,61.0,16.0,31.0,31.0,1.0,16.0,31.0,9.9),(2993,16,21,59083,64.0,17.5,33.0,33.0,2.0,17.5,33.0,9.9),(2994,16,22,69535,67.0,19.0,35.0,35.0,3.0,19.0,35.0,9.9),(2995,16,23,81865,70.0,20.5,37.0,37.0,4.0,20.5,37.0,9.9),(2996,16,24,96416,73.0,22.0,39.0,39.0,5.0,22.0,39.0,9.9),(2997,16,25,113592,76.0,23.5,41.0,41.0,6.0,23.5,41.0,9.9),(2998,16,26,133747,79.0,25.0,43.0,43.0,7.0,25.0,43.0,9.9),(2999,16,27,157283,82.0,26.5,45.0,45.0,8.0,26.5,45.0,9.9),(3000,16,28,184554,85.0,28.0,47.0,47.0,9.0,28.0,47.0,9.9),(3001,16,29,215962,88.0,29.5,49.0,49.0,10.0,29.5,49.0,9.9),(3002,16,30,251861,91.0,31.0,51.0,51.0,11.0,31.0,51.0,9.9),(3003,16,31,292653,94.0,32.5,53.0,53.0,12.0,32.5,53.0,9.9),(3004,16,32,338692,97.0,34.0,55.0,55.0,13.0,34.0,55.0,9.9),(3005,16,33,390372,100.0,35.5,57.0,57.0,14.0,35.5,57.0,9.9),(3006,16,34,448073,103.0,37.0,59.0,59.0,15.0,37.0,59.0,9.9),(3007,16,35,512323,106.0,38.5,61.0,61.0,16.0,38.5,61.0,9.9),(3008,16,36,583458,109.0,40.0,63.0,63.0,17.0,40.0,63.0,9.9),(3009,16,37,662114,112.0,41.5,65.0,65.0,18.0,41.5,65.0,9.9),(3010,16,38,748519,115.0,43.0,67.0,67.0,19.0,43.0,67.0,9.9),(3011,16,39,843417,118.0,44.5,69.0,69.0,20.0,44.5,69.0,9.9),(3012,16,40,946928,122.0,47.0,72.0,72.0,22.0,47.0,72.0,9.9),(3013,16,41,1064038,126.0,49.5,75.0,75.0,24.0,49.5,75.0,9.9),(3014,16,42,1195263,130.0,52.0,78.0,78.0,26.0,52.0,78.0,9.9),(3015,16,43,1342175,134.0,54.5,81.0,81.0,28.0,54.5,81.0,9.9),(3016,16,44,1505110,138.0,57.0,84.0,84.0,30.0,57.0,84.0,9.9),(3017,16,45,1685820,142.0,59.5,87.0,87.0,32.0,59.5,87.0,9.9),(3018,16,46,1884461,146.0,62.0,90.0,90.0,34.0,62.0,90.0,9.9),(3019,16,47,2102961,150.0,64.5,93.0,93.0,36.0,64.5,93.0,9.9),(3020,16,48,2341336,154.0,67.0,96.0,96.0,38.0,67.0,96.0,9.9),(3021,16,49,2601770,158.0,69.5,99.0,99.0,40.0,69.5,99.0,9.9),(3022,16,50,2884131,162.0,72.0,102.0,102.0,42.0,72.0,102.0,9.9),(3023,16,51,3190783,166.0,74.5,105.0,105.0,44.0,74.5,105.0,9.9),(3024,16,52,3521414,170.0,77.0,108.0,108.0,46.0,77.0,108.0,9.9),(3025,16,53,3878568,174.0,79.5,111.0,111.0,48.0,79.5,111.0,9.9),(3026,16,54,4261753,178.0,82.0,114.0,114.0,50.0,82.0,114.0,9.9),(3027,16,55,4673693,182.0,84.5,117.0,117.0,52.0,84.5,117.0,9.9),(3028,16,56,5113716,186.0,87.0,120.0,120.0,54.0,87.0,120.0,9.9),(3029,16,57,5584726,190.0,89.5,123.0,123.0,56.0,89.5,123.0,9.9),(3030,16,58,6085871,194.0,92.0,126.0,126.0,58.0,92.0,126.0,9.9),(3031,16,59,6620235,198.0,94.5,129.0,129.0,60.0,94.5,129.0,9.9),(3032,16,60,7186786,203.0,98.0,133.0,133.0,63.0,98.0,133.0,9.9),(3033,16,61,7800023,208.0,101.5,137.0,137.0,66.0,101.5,137.0,9.9),(3034,16,62,8459544,213.0,105.0,141.0,141.0,69.0,105.0,141.0,9.9),(3035,16,63,9169711,218.0,108.5,145.0,145.0,72.0,108.5,145.0,9.9),(3036,16,64,9929870,223.0,112.0,149.0,149.0,75.0,112.0,149.0,9.9),(3037,16,65,10744635,228.0,115.5,153.0,153.0,78.0,115.5,153.0,9.9),(3038,16,66,11613100,233.0,119.0,157.0,157.0,81.0,119.0,157.0,9.9),(3039,16,67,12540131,238.0,122.5,161.0,161.0,84.0,122.5,161.0,9.9),(3040,16,68,13524570,243.0,126.0,165.0,165.0,87.0,126.0,165.0,9.9),(3041,16,69,14571535,248.0,129.5,169.0,169.0,90.0,129.5,169.0,9.9),(3042,16,70,15679616,253.0,133.0,173.0,173.0,93.0,133.0,173.0,9.9),(3043,16,71,16854183,258.0,136.5,177.0,177.0,96.0,136.5,177.0,9.9),(3044,16,72,18093574,263.0,140.0,181.0,181.0,99.0,140.0,181.0,9.9),(3045,16,73,19403411,268.0,143.5,185.0,185.0,102.0,143.5,185.0,9.9),(3046,16,74,20781780,273.0,147.0,189.0,189.0,105.0,147.0,189.0,9.9),(3047,20,0,0,10.0,10.0,15.0,10.0,5.0,5.0,10.0,3.0),(3048,20,1,658,11.0,11.0,16.5,11.0,5.5,5.5,11.0,3.0),(3049,20,2,1376,12.0,12.0,18.0,12.0,6.0,6.0,12.0,3.0),(3050,20,3,2190,13.0,13.0,19.5,13.0,6.5,6.5,13.0,3.0),(3051,20,4,3064,14.0,14.0,21.0,14.0,7.0,7.0,14.0,3.0),(3052,20,5,4034,15.0,15.0,22.5,15.0,7.5,7.5,15.0,3.0),(3053,20,6,5064,16.0,16.0,24.0,16.0,8.0,8.0,16.0,3.0),(3054,20,7,6190,17.0,17.0,25.5,17.0,8.5,8.5,17.0,3.0),(3055,20,8,7376,18.0,18.0,27.0,18.0,9.0,9.0,18.0,3.0),(3056,20,9,8658,19.0,19.0,28.5,19.0,9.5,9.5,19.0,3.0),(3057,20,10,10000,20.0,20.0,30.0,20.0,10.0,10.0,20.0,6.0),(3058,20,11,11472,21.0,21.0,31.5,21.0,10.5,10.5,21.0,6.0),(3059,20,12,13004,22.0,22.0,33.0,22.0,11.0,11.0,22.0,6.0),(3060,20,13,14632,23.0,23.0,34.5,23.0,11.5,11.5,23.0,6.0),(3061,20,14,16316,24.0,24.0,36.0,24.0,12.0,12.0,24.0,6.0),(3062,20,15,18132,25.0,25.0,37.5,25.0,12.5,12.5,25.0,6.0),(3063,20,16,20053,26.0,26.0,39.0,26.0,13.0,13.0,26.0,6.0),(3064,20,17,22214,27.0,27.0,40.5,27.0,13.5,13.5,27.0,6.0),(3065,20,18,24534,28.0,28.0,42.0,28.0,14.0,14.0,28.0,6.0),(3066,20,19,27202,29.0,29.0,43.5,29.0,14.5,14.5,29.0,6.0),(3067,20,20,30083,31.0,31.0,46.0,31.0,16.0,16.0,31.0,6.0),(3068,20,21,33711,33.0,33.0,48.5,33.0,17.5,17.5,33.0,6.0),(3069,20,22,37951,35.0,35.0,51.0,35.0,19.0,19.0,35.0,6.0),(3070,20,23,43228,37.0,37.0,53.5,37.0,20.5,20.5,37.0,6.0),(3071,20,24,49585,39.0,39.0,56.0,39.0,22.0,22.0,39.0,6.0),(3072,20,25,57805,41.0,41.0,58.5,41.0,23.5,23.5,41.0,6.0),(3073,20,26,67861,43.0,43.0,61.0,43.0,25.0,25.0,43.0,6.0),(3074,20,27,80626,45.0,45.0,63.5,45.0,26.5,26.5,45.0,6.0),(3075,20,28,95983,47.0,47.0,66.0,47.0,28.0,28.0,47.0,6.0),(3076,20,29,114895,49.0,49.0,68.5,49.0,29.5,29.5,49.0,6.0),(3077,20,30,137155,51.0,51.0,71.0,51.0,31.0,31.0,51.0,6.0),(3078,20,31,163816,53.0,53.0,73.5,53.0,32.5,32.5,53.0,6.0),(3079,20,32,194581,55.0,55.0,76.0,55.0,34.0,34.0,55.0,6.0),(3080,20,33,230585,57.0,57.0,78.5,57.0,35.5,35.5,57.0,6.0),(3081,20,34,271467,59.0,59.0,81.0,59.0,37.0,37.0,59.0,6.0),(3082,20,35,318586,61.0,61.0,83.5,61.0,38.5,38.5,61.0,6.0),(3083,20,36,371447,63.0,63.0,86.0,63.0,40.0,40.0,63.0,6.0),(3084,20,37,431607,65.0,65.0,88.5,65.0,41.5,41.5,65.0,6.0),(3085,20,38,498373,67.0,67.0,91.0,67.0,43.0,43.0,67.0,6.0),(3086,20,39,573500,69.0,69.0,93.5,69.0,44.5,44.5,69.0,6.0),(3087,20,40,656097,72.0,72.0,97.0,72.0,47.0,47.0,72.0,6.0),(3088,20,41,752476,75.0,75.0,100.5,75.0,49.5,49.5,75.0,6.0),(3089,20,42,862106,78.0,78.0,104.0,78.0,52.0,52.0,78.0,6.0),(3090,20,43,987858,81.0,81.0,107.5,81.0,54.5,54.5,81.0,6.0),(3091,20,44,1128895,84.0,84.0,111.0,84.0,57.0,57.0,84.0,6.0),(3092,20,45,1288394,87.0,87.0,114.5,87.0,59.5,59.5,87.0,6.0),(3093,20,46,1465212,90.0,90.0,118.0,90.0,62.0,62.0,90.0,6.0),(3094,20,47,1662832,93.0,93.0,121.5,93.0,64.5,64.5,93.0,6.0),(3095,20,48,1879805,96.0,96.0,125.0,96.0,67.0,67.0,96.0,6.0),(3096,20,49,2119920,99.0,99.0,128.5,99.0,69.5,69.5,99.0,6.0),(3097,20,50,2381422,102.0,102.0,132.0,102.0,72.0,72.0,102.0,6.0),(3098,20,51,2668406,105.0,105.0,135.5,105.0,74.5,74.5,105.0,6.0),(3099,20,52,2978811,108.0,108.0,139.0,108.0,77.0,77.0,108.0,6.0),(3100,20,53,3317038,111.0,111.0,142.5,111.0,79.5,79.5,111.0,6.0),(3101,20,54,3680720,114.0,114.0,146.0,114.0,82.0,82.0,114.0,6.0),(3102,20,55,4074564,117.0,117.0,149.5,117.0,84.5,84.5,117.0,6.0),(3103,20,56,4495897,120.0,120.0,153.0,120.0,87.0,87.0,120.0,6.0),(3104,20,57,4949732,123.0,123.0,156.5,123.0,89.5,89.5,123.0,6.0),(3105,20,58,5433090,126.0,126.0,160.0,126.0,92.0,92.0,126.0,6.0),(3106,20,59,5951290,129.0,129.0,163.5,129.0,94.5,94.5,129.0,6.0),(3107,20,60,6501047,133.0,133.0,168.0,133.0,98.0,98.0,133.0,6.0),(3108,20,61,7099851,137.0,137.0,172.5,137.0,101.5,101.5,137.0,6.0),(3109,20,62,7744921,141.0,141.0,177.0,141.0,105.0,105.0,141.0,6.0),(3110,20,63,8443160,145.0,145.0,181.5,145.0,108.5,108.5,145.0,6.0),(3111,20,64,9191373,149.0,149.0,186.0,149.0,112.0,112.0,149.0,6.0),(3112,20,65,9996877,153.0,153.0,190.5,153.0,115.5,115.5,153.0,6.0),(3113,20,66,10856063,157.0,157.0,195.0,157.0,119.0,119.0,157.0,6.0),(3114,20,67,11776662,161.0,161.0,199.5,161.0,122.5,122.5,161.0,6.0),(3115,20,68,12754651,165.0,165.0,204.0,165.0,126.0,126.0,165.0,6.0),(3116,20,69,13798175,169.0,169.0,208.5,169.0,129.5,129.5,169.0,6.0),(3117,20,70,14902797,173.0,173.0,213.0,173.0,133.0,133.0,173.0,6.0),(3118,20,71,16077076,177.0,177.0,217.5,177.0,136.5,136.5,177.0,6.0),(3119,20,72,17316161,181.0,181.0,222.0,181.0,140.0,140.0,181.0,6.0),(3120,20,73,18629025,185.0,185.0,226.5,185.0,143.5,143.5,185.0,6.0),(3121,20,74,20010403,189.0,189.0,231.0,189.0,147.0,147.0,189.0,6.0),(3122,21,0,0,5.0,5.0,14.0,14.0,6.0,12.0,10.0,2.0),(3123,21,1,674,5.5,5.5,15.4,15.4,6.6,13.2,11.0,2.0),(3124,21,2,1396,6.0,6.0,16.8,16.8,7.2,14.4,12.0,2.0),(3125,21,3,2202,6.5,6.5,18.2,18.2,7.8,15.6,13.0,2.0),(3126,21,4,3080,7.0,7.0,19.6,19.6,8.4,16.8,14.0,2.0),(3127,21,5,4042,7.5,7.5,21.0,21.0,9.0,18.0,15.0,2.0),(3128,21,6,5052,8.0,8.0,22.4,22.4,9.6,19.2,16.0,2.0),(3129,21,7,6182,8.5,8.5,23.8,23.8,10.2,20.4,17.0,2.0),(3130,21,8,7372,9.0,9.0,25.2,25.2,10.8,21.6,18.0,2.0),(3131,21,9,8658,9.5,9.5,26.6,26.6,11.4,22.8,19.0,2.0),(3132,21,10,10004,10.0,10.0,28.0,28.0,12.0,24.0,20.0,4.0),(3133,21,11,11438,10.5,10.5,29.4,29.4,12.6,25.2,21.0,4.0),(3134,21,12,12968,11.0,11.0,30.8,30.8,13.2,26.4,22.0,4.0),(3135,21,13,14582,11.5,11.5,32.2,32.2,13.8,27.6,23.0,4.0),(3136,21,14,16268,12.0,12.0,33.6,33.6,14.4,28.8,24.0,4.0),(3137,21,15,18038,12.5,12.5,35.0,35.0,15.0,30.0,25.0,4.0),(3138,21,16,19848,13.0,13.0,36.4,36.4,15.6,31.2,26.0,4.0),(3139,21,17,21850,13.5,13.5,37.8,37.8,16.2,32.4,27.0,4.0),(3140,21,18,24002,14.0,14.0,39.2,39.2,16.8,33.6,28.0,4.0),(3141,21,19,26538,14.5,14.5,40.6,40.6,17.4,34.8,29.0,4.0),(3142,21,20,29328,16.0,16.0,43.0,43.0,19.0,37.0,31.0,4.0),(3143,21,21,32883,17.5,17.5,45.4,45.4,20.6,39.2,33.0,4.0),(3144,21,22,37764,19.0,19.0,47.8,47.8,22.2,41.4,35.0,4.0),(3145,21,23,43898,20.5,20.5,50.2,50.2,23.8,43.6,37.0,4.0),(3146,21,24,52114,22.0,22.0,52.6,52.6,25.4,45.8,39.0,4.0),(3147,21,25,62226,23.5,23.5,55.0,55.0,27.0,48.0,41.0,4.0),(3148,21,26,74753,25.0,25.0,57.4,57.4,28.6,50.2,43.0,4.0),(3149,21,27,90610,26.5,26.5,59.8,59.8,30.2,52.4,45.0,4.0),(3150,21,28,109311,28.0,28.0,62.2,62.2,31.8,54.6,47.0,4.0),(3151,21,29,132170,29.5,29.5,64.6,64.6,33.4,56.8,49.0,4.0),(3152,21,30,158521,31.0,31.0,67.0,67.0,35.0,59.0,51.0,4.0),(3153,21,31,189134,32.5,32.5,69.4,69.4,36.6,61.2,53.0,4.0),(3154,21,32,225132,34.0,34.0,71.8,71.8,38.2,63.4,55.0,4.0),(3155,21,33,265718,35.5,35.5,74.2,74.2,39.8,65.6,57.0,4.0),(3156,21,34,312589,37.0,37.0,76.6,76.6,41.4,67.8,59.0,4.0),(3157,21,35,364956,38.5,38.5,79.0,79.0,43.0,70.0,61.0,4.0),(3158,21,36,425414,40.0,40.0,81.4,81.4,44.6,72.2,63.0,4.0),(3159,21,37,492211,41.5,41.5,83.8,83.8,46.2,74.4,65.0,4.0),(3160,21,38,565722,43.0,43.0,86.2,86.2,47.8,76.6,67.0,4.0),(3161,21,39,648296,44.5,44.5,88.6,88.6,49.4,78.8,69.0,4.0),(3162,21,40,738448,47.0,47.0,92.0,92.0,52.0,82.0,72.0,4.0),(3163,21,41,844368,49.5,49.5,95.4,95.4,54.6,85.2,75.0,4.0),(3164,21,42,963428,52.0,52.0,98.8,98.8,57.2,88.4,78.0,4.0),(3165,21,43,1097563,54.5,54.5,102.2,102.2,59.8,91.6,81.0,4.0),(3166,21,44,1249128,57.0,57.0,105.6,105.6,62.4,94.8,84.0,4.0),(3167,21,45,1417982,59.5,59.5,109.0,109.0,65.0,98.0,87.0,4.0),(3168,21,46,1608178,62.0,62.0,112.4,112.4,67.6,101.2,90.0,4.0),(3169,21,47,1817370,64.5,64.5,115.8,115.8,70.2,104.4,93.0,4.0),(3170,21,48,2046131,67.0,67.0,119.2,119.2,72.8,107.6,96.0,4.0),(3171,21,49,2298970,69.5,69.5,122.6,122.6,75.4,110.8,99.0,4.0),(3172,21,50,2573412,72.0,72.0,126.0,126.0,78.0,114.0,102.0,4.0),(3173,21,51,2876546,74.5,74.5,129.4,129.4,80.6,117.2,105.0,4.0),(3174,21,52,3202576,77.0,77.0,132.8,132.8,83.2,120.4,108.0,4.0),(3175,21,53,3554805,79.5,79.5,136.2,136.2,85.8,123.6,111.0,4.0),(3176,21,54,3935444,82.0,82.0,139.6,139.6,88.4,126.8,114.0,4.0),(3177,21,55,4344496,84.5,84.5,143.0,143.0,91.0,130.0,117.0,4.0),(3178,21,56,4785885,87.0,87.0,146.4,146.4,93.6,133.2,120.0,4.0),(3179,21,57,5257955,89.5,89.5,149.8,149.8,96.2,136.4,123.0,4.0),(3180,21,58,5759818,92.0,92.0,153.2,153.2,98.8,139.6,126.0,4.0),(3181,21,59,6297639,94.5,94.5,156.6,156.6,101.4,142.8,129.0,4.0),(3182,21,60,6867287,98.0,98.0,161.0,161.0,105.0,147.0,133.0,4.0),(3183,21,61,7489261,101.5,101.5,165.4,165.4,108.6,151.2,137.0,4.0),(3184,21,62,8157933,105.0,105.0,169.8,169.8,112.2,155.4,141.0,4.0),(3185,21,63,8877629,108.5,108.5,174.2,174.2,115.8,159.6,145.0,4.0),(3186,21,64,9651226,112.0,112.0,178.6,178.6,119.4,163.8,149.0,4.0),(3187,21,65,10479807,115.5,115.5,183.0,183.0,123.0,168.0,153.0,4.0),(3188,21,66,11366195,119.0,119.0,187.4,187.4,126.6,172.2,157.0,4.0),(3189,21,67,12314014,122.5,122.5,191.8,191.8,130.2,176.4,161.0,4.0),(3190,21,68,13319655,126.0,126.0,196.2,196.2,133.8,180.6,165.0,4.0),(3191,21,69,14392235,129.5,129.5,200.6,200.6,137.4,184.8,169.0,4.0),(3192,21,70,15526345,133.0,133.0,205.0,205.0,141.0,189.0,173.0,4.0),(3193,21,71,16731552,136.5,136.5,209.4,209.4,144.6,193.2,177.0,4.0),(3194,21,72,18004862,140.0,140.0,213.8,213.8,148.2,197.4,181.0,4.0),(3195,21,73,19349068,143.5,143.5,218.2,218.2,151.8,201.6,185.0,4.0),(3196,21,74,20766723,147.0,147.0,222.6,222.6,155.4,205.8,189.0,4.0);

UNLOCK TABLES;

/*Table structure for table `races` */

DROP TABLE IF EXISTS `races`;

CREATE TABLE `races` (
  `id` int(11) NOT NULL auto_increment COMMENT 'Race id',
  `name` varchar(32) NOT NULL COMMENT 'name of the race',
  `description` varchar(256) default NULL COMMENT 'description of the race',
  `kingdom_id` int(11) default NULL COMMENT 'Default home of the race. Kingdom zero means the race is found everywhere. Otherwise, this is the kingdom where the player_character character starts, their house is here, but the player_character is not necessarily bound to remain at that kingdom.',
  `race_body_type` int(3) NOT NULL COMMENT 'Type of body the race has, ie humanoid, gaint, tentacle monster, etc.',
  PRIMARY KEY  (`id`),
  KEY `kingdom_id` (`kingdom_id`),
  KEY `name` (`name`),
  CONSTRAINT `FK_kingdoms_races` FOREIGN KEY (`kingdom_id`) REFERENCES `kingdoms` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `races` */

LOCK TABLES `races` WRITE;

insert  into `races`(`id`,`name`,`description`,`kingdom_id`,`race_body_type`) values (1,'Human','A ergular human.',0,1),(2,'Dwarf','What game could go without one of these short persons',0,1),(3,'Communist','In soviet russia, game plays you',0,1),(16,'Merdudes','Catchin a wave onto the land bro!',0,3),(20,'Ant People','People made of ants',0,2),(21,'Octopoid','Unknown origin, possibly japan',0,3);

UNLOCK TABLES;

/*Table structure for table `schema_migrations` */

DROP TABLE IF EXISTS `schema_migrations`;

CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL,
  UNIQUE KEY `unique_schema_migrations` (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `schema_migrations` */

LOCK TABLES `schema_migrations` WRITE;

insert  into `schema_migrations`(`version`) values ('0'),('20100110051615'),('20100110051616'),('20100112051615'),('20100116051615');

UNLOCK TABLES;

/*Table structure for table `sessions` */

DROP TABLE IF EXISTS `sessions`;

CREATE TABLE `sessions` (
  `id` int(11) NOT NULL auto_increment,
  `session_id` varchar(255) NOT NULL,
  `data` longtext,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_sessions_on_session_id` (`session_id`),
  KEY `index_sessions_on_updated_at` (`updated_at`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sessions` */

LOCK TABLES `sessions` WRITE;

UNLOCK TABLES;

/*Table structure for table `system_statuses` */

DROP TABLE IF EXISTS `system_statuses`;

CREATE TABLE `system_statuses` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the system. 1 is the all system',
  `status` int(1) default NULL COMMENT 'indicates the system status. 1=Users can sign on, 0=system maintenence (users cannot access game)',
  `days` int(20) default NULL COMMENT 'simple counter accumulating days since the game started',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

/*Data for the table `system_statuses` */

LOCK TABLES `system_statuses` WRITE;

insert  into `system_statuses`(`id`,`status`,`days`) values (1,1,0);

UNLOCK TABLES;

/*Table structure for table `table_locks` */

DROP TABLE IF EXISTS `table_locks`;

CREATE TABLE `table_locks` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(255) NOT NULL,
  `locked` tinyint(1) default '0',
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_table_locks_on_name` (`name`),
  KEY `index_table_locks_on_updated_at` (`updated_at`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `table_locks` */

LOCK TABLES `table_locks` WRITE;

insert  into `table_locks`(`id`,`name`,`locked`,`created_at`,`updated_at`) values (1,'attack_spells',0,'2010-01-16 13:50:09','2010-01-16 13:50:09'),(2,'base_items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(3,'blacksmith_skills',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(4,'c_class_levels',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(5,'c_classes',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(6,'creature_kills',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(7,'creatures',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(8,'diseases',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(9,'done_events',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(10,'done_quests',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(11,'event_creatures',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(12,'event_diseases',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(13,'event_items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(14,'event_moves',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(15,'event_npcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(16,'event_player_characters',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(17,'event_quests',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(18,'event_stats',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(19,'event_storm_gates',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(20,'events',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(21,'feature_events',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(22,'features',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(23,'forum_nodes',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(24,'forum_restrictions',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(25,'genocides',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(26,'healer_skills',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(27,'healing_spells',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(28,'images',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(29,'infections',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(30,'items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(31,'kingdom_bans',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(32,'kingdom_empty_shops',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(33,'kingdom_entries',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(34,'kingdom_items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(35,'kingdom_notices',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(36,'kingdoms',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(37,'level_maps',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(38,'levels',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(39,'lock_tables',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(40,'log_quest_creature_kills',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(41,'log_quest_explores',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(42,'log_quest_kill_n_npcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(43,'log_quest_kill_pcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(44,'log_quest_kill_s_npcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(45,'log_quests',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(46,'name_surfixes',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(47,'name_titles',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(48,'names',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(49,'nonplayer_character_killers',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(50,'npc_blacksmith_items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(51,'npc_diseases',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(52,'npc_merchants',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(53,'npc_stocks',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(54,'npcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(55,'pandemics',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(56,'player_character_equip_locs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(57,'player_character_items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(58,'player_character_killers',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(59,'player_characters',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(60,'players',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(61,'pref_lists',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(62,'quest_creature_kills',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(63,'quest_explores',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(64,'quest_items',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(65,'quest_kill_n_npcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(66,'quest_kill_pcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(67,'quest_kill_s_npcs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(68,'quests',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(69,'race_equip_locs',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(70,'race_levels',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(71,'races',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(72,'schema_migrations',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(73,'sessions',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(74,'special_codes',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(75,'system_statuses',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(76,'table_locks',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(77,'trainer_skills',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(78,'world_maps',0,'2010-01-16 13:50:10','2010-01-16 13:50:10'),(79,'worlds',0,'2010-01-16 13:50:10','2010-01-16 13:50:10');

UNLOCK TABLES;

/*Table structure for table `trainer_skills` */

DROP TABLE IF EXISTS `trainer_skills`;

CREATE TABLE `trainer_skills` (
  `id` int(11) NOT NULL auto_increment,
  `max_skill_taught` float NOT NULL COMMENT '% the trainer can raise the attributes they specialize in above the c_class/race standard',
  `min_sales` int(20) NOT NULL COMMENT 'min sales needed to raise player_character base skill to this % above the norm for c_class/race',
  PRIMARY KEY  (`id`),
  KEY `min_sales` (`min_sales`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `trainer_skills` */

LOCK TABLES `trainer_skills` WRITE;

insert  into `trainer_skills`(`id`,`max_skill_taught`,`min_sales`) values (1,11,0),(2,25,1000),(3,30,10000),(4,45,100000),(5,55,500000),(6,70,2500000),(7,80,12500000),(8,90,50000000),(9,100,500000000),(10,125,2000000000);

UNLOCK TABLES;

/*Table structure for table `world_maps` */

DROP TABLE IF EXISTS `world_maps`;

CREATE TABLE `world_maps` (
  `id` int(11) NOT NULL auto_increment,
  `world_id` int(11) NOT NULL COMMENT 'ID of the world represented by this big world',
  `xpos` int(2) NOT NULL COMMENT 'The x position of the item in the mapsquare',
  `ypos` int(2) NOT NULL COMMENT 'The y position of the feature in the big map square',
  `bigxpos` int(2) NOT NULL COMMENT 'The bigmap square relative x position',
  `bigypos` int(2) NOT NULL COMMENT 'The bigmap square y relative position. The world is made up of large "level" maps esentially, laid side by side, and each has assorted features, whose locations are represented by the xpos and ypos',
  `feature_id` int(11) default NULL COMMENT 'The feature at this location',
  PRIMARY KEY  (`id`),
  KEY `world_id` (`world_id`),
  KEY `world_bixs_bigy_x_y_id` (`world_id`,`bigxpos`,`bigypos`,`xpos`,`ypos`),
  KEY `feature_id` (`feature_id`),
  KEY `world_id_bigxpos_bigypos` (`world_id`,`bigxpos`,`bigypos`),
  CONSTRAINT `FK_features_world_maps` FOREIGN KEY (`feature_id`) REFERENCES `features` (`id`),
  CONSTRAINT `FK_worlds_world_maps` FOREIGN KEY (`world_id`) REFERENCES `worlds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `world_maps` */

LOCK TABLES `world_maps` WRITE;

insert  into `world_maps`(`id`,`world_id`,`xpos`,`ypos`,`bigxpos`,`bigypos`,`feature_id`) values (1,1,1,1,0,0,NULL),(2,1,2,1,0,0,NULL),(3,1,3,1,0,0,NULL),(4,1,4,1,0,0,NULL),(5,1,5,1,0,0,NULL),(6,1,6,1,0,0,NULL),(7,1,1,2,0,0,NULL),(8,1,2,2,0,0,NULL),(9,1,3,2,0,0,NULL),(10,1,4,2,0,0,NULL),(11,1,5,2,0,0,NULL),(12,1,6,2,0,0,NULL),(13,1,1,3,0,0,NULL),(14,1,2,3,0,0,NULL),(15,1,3,3,0,0,NULL),(16,1,4,3,0,0,NULL),(17,1,5,3,0,0,NULL),(18,1,6,3,0,0,NULL),(19,1,1,4,0,0,NULL),(20,1,2,4,0,0,NULL),(21,1,3,4,0,0,NULL),(22,1,4,4,0,0,NULL),(23,1,5,4,0,0,NULL),(24,1,6,4,0,0,NULL),(25,1,1,5,0,0,NULL),(26,1,2,5,0,0,NULL),(27,1,3,5,0,0,NULL),(28,1,4,5,0,0,NULL),(29,1,5,5,0,0,NULL),(30,1,6,5,0,0,NULL),(31,1,1,6,0,0,NULL),(32,1,2,6,0,0,NULL),(33,1,3,6,0,0,NULL),(34,1,4,6,0,0,NULL),(35,1,5,6,0,0,NULL),(36,1,6,6,0,0,NULL),(37,1,3,2,0,0,17),(38,1,4,2,0,0,17),(39,1,5,2,0,0,17),(40,1,3,3,0,0,17),(41,1,4,3,0,0,25),(42,1,5,3,0,0,17),(43,1,3,4,0,0,17),(44,1,4,4,0,0,17),(45,1,5,4,0,0,17),(46,1,1,1,0,0,15),(47,1,2,1,0,0,15),(48,1,3,1,0,0,15),(49,1,4,1,0,0,17),(50,1,5,1,0,0,57),(51,1,6,1,0,0,20),(52,1,1,2,0,0,16),(53,1,2,2,0,0,15),(54,1,6,2,0,0,19),(55,1,1,3,0,0,16),(56,1,2,3,0,0,15),(57,1,6,3,0,0,19),(58,1,1,4,0,0,15),(59,1,2,4,0,0,15),(60,1,6,4,0,0,15),(61,1,1,5,0,0,19),(62,1,2,5,0,0,19),(63,1,3,5,0,0,17),(64,1,4,5,0,0,22),(65,1,5,5,0,0,22),(66,1,6,5,0,0,15),(67,1,1,6,0,0,19),(68,1,2,6,0,0,58),(69,1,3,6,0,0,19),(70,1,4,6,0,0,17),(71,1,5,6,0,0,15),(72,1,6,6,0,0,21),(73,1,3,6,0,0,18),(74,1,4,6,0,0,60),(75,1,1,1,1,0,NULL),(76,1,2,1,1,0,NULL),(77,1,3,1,1,0,NULL),(78,1,4,1,1,0,NULL),(79,1,5,1,1,0,NULL),(80,1,6,1,1,0,NULL),(81,1,1,2,1,0,NULL),(82,1,2,2,1,0,NULL),(83,1,3,2,1,0,NULL),(84,1,4,2,1,0,NULL),(85,1,5,2,1,0,NULL),(86,1,6,2,1,0,NULL),(87,1,1,3,1,0,NULL),(88,1,2,3,1,0,NULL),(89,1,3,3,1,0,NULL),(90,1,4,3,1,0,NULL),(91,1,5,3,1,0,NULL),(92,1,6,3,1,0,NULL),(93,1,1,4,1,0,NULL),(94,1,2,4,1,0,NULL),(95,1,3,4,1,0,NULL),(96,1,4,4,1,0,NULL),(97,1,5,4,1,0,NULL),(98,1,6,4,1,0,NULL),(99,1,1,5,1,0,NULL),(100,1,2,5,1,0,NULL),(101,1,3,5,1,0,NULL),(102,1,4,5,1,0,NULL),(103,1,5,5,1,0,NULL),(104,1,6,5,1,0,NULL),(105,1,1,6,1,0,NULL),(106,1,2,6,1,0,NULL),(107,1,3,6,1,0,NULL),(108,1,4,6,1,0,NULL),(109,1,5,6,1,0,NULL),(110,1,6,6,1,0,NULL),(111,1,1,1,0,-1,NULL),(112,1,2,1,0,-1,NULL),(113,1,3,1,0,-1,NULL),(114,1,4,1,0,-1,NULL),(115,1,5,1,0,-1,NULL),(116,1,6,1,0,-1,NULL),(117,1,1,2,0,-1,NULL),(118,1,2,2,0,-1,NULL),(119,1,3,2,0,-1,NULL),(120,1,4,2,0,-1,NULL),(121,1,5,2,0,-1,NULL),(122,1,6,2,0,-1,NULL),(123,1,1,3,0,-1,NULL),(124,1,2,3,0,-1,NULL),(125,1,3,3,0,-1,NULL),(126,1,4,3,0,-1,NULL),(127,1,5,3,0,-1,NULL),(128,1,6,3,0,-1,NULL),(129,1,1,4,0,-1,NULL),(130,1,2,4,0,-1,NULL),(131,1,3,4,0,-1,NULL),(132,1,4,4,0,-1,NULL),(133,1,5,4,0,-1,NULL),(134,1,6,4,0,-1,NULL),(135,1,1,5,0,-1,NULL),(136,1,2,5,0,-1,NULL),(137,1,3,5,0,-1,NULL),(138,1,4,5,0,-1,NULL),(139,1,5,5,0,-1,NULL),(140,1,6,5,0,-1,NULL),(141,1,1,6,0,-1,NULL),(142,1,2,6,0,-1,NULL),(143,1,3,6,0,-1,NULL),(144,1,4,6,0,-1,NULL),(145,1,5,6,0,-1,NULL),(146,1,6,6,0,-1,NULL),(147,1,1,1,-1,0,NULL),(148,1,2,1,-1,0,NULL),(149,1,3,1,-1,0,NULL),(150,1,4,1,-1,0,NULL),(151,1,5,1,-1,0,NULL),(152,1,6,1,-1,0,NULL),(153,1,1,2,-1,0,NULL),(154,1,2,2,-1,0,NULL),(155,1,3,2,-1,0,NULL),(156,1,4,2,-1,0,NULL),(157,1,5,2,-1,0,NULL),(158,1,6,2,-1,0,NULL),(159,1,1,3,-1,0,NULL),(160,1,2,3,-1,0,NULL),(161,1,3,3,-1,0,NULL),(162,1,4,3,-1,0,NULL),(163,1,5,3,-1,0,NULL),(164,1,6,3,-1,0,NULL),(165,1,1,4,-1,0,NULL),(166,1,2,4,-1,0,NULL),(167,1,3,4,-1,0,NULL),(168,1,4,4,-1,0,NULL),(169,1,5,4,-1,0,NULL),(170,1,6,4,-1,0,NULL),(171,1,1,5,-1,0,NULL),(172,1,2,5,-1,0,NULL),(173,1,3,5,-1,0,NULL),(174,1,4,5,-1,0,NULL),(175,1,5,5,-1,0,NULL),(176,1,6,5,-1,0,NULL),(177,1,1,6,-1,0,NULL),(178,1,2,6,-1,0,NULL),(179,1,3,6,-1,0,NULL),(180,1,4,6,-1,0,NULL),(181,1,5,6,-1,0,NULL),(182,1,6,6,-1,0,NULL),(183,1,1,1,0,1,NULL),(184,1,2,1,0,1,NULL),(185,1,3,1,0,1,NULL),(186,1,4,1,0,1,NULL),(187,1,5,1,0,1,NULL),(188,1,6,1,0,1,NULL),(189,1,1,2,0,1,NULL),(190,1,2,2,0,1,NULL),(191,1,3,2,0,1,NULL),(192,1,4,2,0,1,NULL),(193,1,5,2,0,1,NULL),(194,1,6,2,0,1,NULL),(195,1,1,3,0,1,NULL),(196,1,2,3,0,1,NULL),(197,1,3,3,0,1,NULL),(198,1,4,3,0,1,NULL),(199,1,5,3,0,1,NULL),(200,1,6,3,0,1,NULL),(201,1,1,4,0,1,NULL),(202,1,2,4,0,1,NULL),(203,1,3,4,0,1,NULL),(204,1,4,4,0,1,NULL),(205,1,5,4,0,1,NULL),(206,1,6,4,0,1,NULL),(207,1,1,5,0,1,NULL),(208,1,2,5,0,1,NULL),(209,1,3,5,0,1,NULL),(210,1,4,5,0,1,NULL),(211,1,5,5,0,1,NULL),(212,1,6,5,0,1,NULL),(213,1,1,6,0,1,NULL),(214,1,2,6,0,1,NULL),(215,1,3,6,0,1,NULL),(216,1,4,6,0,1,NULL),(217,1,5,6,0,1,NULL),(218,1,6,6,0,1,NULL),(219,1,1,1,1,-1,NULL),(220,1,2,1,1,-1,NULL),(221,1,3,1,1,-1,NULL),(222,1,4,1,1,-1,NULL),(223,1,5,1,1,-1,NULL),(224,1,6,1,1,-1,NULL),(225,1,1,2,1,-1,NULL),(226,1,2,2,1,-1,NULL),(227,1,3,2,1,-1,NULL),(228,1,4,2,1,-1,NULL),(229,1,5,2,1,-1,NULL),(230,1,6,2,1,-1,NULL),(231,1,1,3,1,-1,NULL),(232,1,2,3,1,-1,NULL),(233,1,3,3,1,-1,NULL),(234,1,4,3,1,-1,NULL),(235,1,5,3,1,-1,NULL),(236,1,6,3,1,-1,NULL),(237,1,1,4,1,-1,NULL),(238,1,2,4,1,-1,NULL),(239,1,3,4,1,-1,NULL),(240,1,4,4,1,-1,NULL),(241,1,5,4,1,-1,NULL),(242,1,6,4,1,-1,NULL),(243,1,1,5,1,-1,NULL),(244,1,2,5,1,-1,NULL),(245,1,3,5,1,-1,NULL),(246,1,4,5,1,-1,NULL),(247,1,5,5,1,-1,NULL),(248,1,6,5,1,-1,NULL),(249,1,1,6,1,-1,NULL),(250,1,2,6,1,-1,NULL),(251,1,3,6,1,-1,NULL),(252,1,4,6,1,-1,NULL),(253,1,5,6,1,-1,NULL),(254,1,6,6,1,-1,NULL),(255,1,1,1,1,1,NULL),(256,1,2,1,1,1,NULL),(257,1,3,1,1,1,NULL),(258,1,4,1,1,1,NULL),(259,1,5,1,1,1,NULL),(260,1,6,1,1,1,NULL),(261,1,1,2,1,1,NULL),(262,1,2,2,1,1,NULL),(263,1,3,2,1,1,NULL),(264,1,4,2,1,1,NULL),(265,1,5,2,1,1,NULL),(266,1,6,2,1,1,NULL),(267,1,1,3,1,1,NULL),(268,1,2,3,1,1,NULL),(269,1,3,3,1,1,NULL),(270,1,4,3,1,1,NULL),(271,1,5,3,1,1,NULL),(272,1,6,3,1,1,NULL),(273,1,1,4,1,1,NULL),(274,1,2,4,1,1,NULL),(275,1,3,4,1,1,NULL),(276,1,4,4,1,1,NULL),(277,1,5,4,1,1,NULL),(278,1,6,4,1,1,NULL),(279,1,1,5,1,1,NULL),(280,1,2,5,1,1,NULL),(281,1,3,5,1,1,NULL),(282,1,4,5,1,1,NULL),(283,1,5,5,1,1,NULL),(284,1,6,5,1,1,NULL),(285,1,1,6,1,1,NULL),(286,1,2,6,1,1,NULL),(287,1,3,6,1,1,NULL),(288,1,4,6,1,1,NULL),(289,1,5,6,1,1,NULL),(290,1,6,6,1,1,NULL),(291,1,1,1,-1,1,NULL),(292,1,2,1,-1,1,NULL),(293,1,3,1,-1,1,NULL),(294,1,4,1,-1,1,NULL),(295,1,5,1,-1,1,NULL),(296,1,6,1,-1,1,NULL),(297,1,1,2,-1,1,NULL),(298,1,2,2,-1,1,NULL),(299,1,3,2,-1,1,NULL),(300,1,4,2,-1,1,NULL),(301,1,5,2,-1,1,NULL),(302,1,6,2,-1,1,NULL),(303,1,1,3,-1,1,NULL),(304,1,2,3,-1,1,NULL),(305,1,3,3,-1,1,NULL),(306,1,4,3,-1,1,NULL),(307,1,5,3,-1,1,NULL),(308,1,6,3,-1,1,NULL),(309,1,1,4,-1,1,NULL),(310,1,2,4,-1,1,NULL),(311,1,3,4,-1,1,NULL),(312,1,4,4,-1,1,NULL),(313,1,5,4,-1,1,NULL),(314,1,6,4,-1,1,NULL),(315,1,1,5,-1,1,NULL),(316,1,2,5,-1,1,NULL),(317,1,3,5,-1,1,NULL),(318,1,4,5,-1,1,NULL),(319,1,5,5,-1,1,NULL),(320,1,6,5,-1,1,NULL),(321,1,1,6,-1,1,NULL),(322,1,2,6,-1,1,NULL),(323,1,3,6,-1,1,NULL),(324,1,4,6,-1,1,NULL),(325,1,5,6,-1,1,NULL),(326,1,6,6,-1,1,NULL),(327,1,1,1,-1,-1,NULL),(328,1,2,1,-1,-1,NULL),(329,1,3,1,-1,-1,NULL),(330,1,4,1,-1,-1,NULL),(331,1,5,1,-1,-1,NULL),(332,1,6,1,-1,-1,NULL),(333,1,1,2,-1,-1,NULL),(334,1,2,2,-1,-1,NULL),(335,1,3,2,-1,-1,NULL),(336,1,4,2,-1,-1,NULL),(337,1,5,2,-1,-1,NULL),(338,1,6,2,-1,-1,NULL),(339,1,1,3,-1,-1,NULL),(340,1,2,3,-1,-1,NULL),(341,1,3,3,-1,-1,NULL),(342,1,4,3,-1,-1,NULL),(343,1,5,3,-1,-1,NULL),(344,1,6,3,-1,-1,NULL),(345,1,1,4,-1,-1,NULL),(346,1,2,4,-1,-1,NULL),(347,1,3,4,-1,-1,NULL),(348,1,4,4,-1,-1,NULL),(349,1,5,4,-1,-1,NULL),(350,1,6,4,-1,-1,NULL),(351,1,1,5,-1,-1,NULL),(352,1,2,5,-1,-1,NULL),(353,1,3,5,-1,-1,NULL),(354,1,4,5,-1,-1,NULL),(355,1,5,5,-1,-1,NULL),(356,1,6,5,-1,-1,NULL),(357,1,1,6,-1,-1,NULL),(358,1,2,6,-1,-1,NULL),(359,1,3,6,-1,-1,NULL),(360,1,4,6,-1,-1,NULL),(361,1,5,6,-1,-1,NULL),(362,1,6,6,-1,-1,NULL),(363,1,1,1,0,0,16),(364,1,1,1,0,-1,60),(365,1,2,1,0,-1,60),(366,1,3,1,0,-1,17),(367,1,4,1,0,-1,18),(368,1,5,1,0,-1,18),(369,1,6,1,0,-1,20),(370,1,1,2,0,-1,60),(371,1,2,2,0,-1,60),(372,1,3,2,0,-1,17),(373,1,4,2,0,-1,18),(374,1,5,2,0,-1,20),(375,1,6,2,0,-1,20),(376,1,1,3,0,-1,15),(377,1,2,3,0,-1,15),(378,1,3,3,0,-1,15),(379,1,4,3,0,-1,55),(380,1,5,3,0,-1,20),(381,1,6,3,0,-1,20),(382,1,1,4,0,-1,57),(383,1,2,4,0,-1,16),(384,1,3,4,0,-1,15),(385,1,4,4,0,-1,20),(386,1,5,4,0,-1,20),(387,1,6,4,0,-1,20),(388,1,1,5,0,-1,16),(389,1,2,5,0,-1,16),(390,1,3,5,0,-1,22),(391,1,4,5,0,-1,15),(392,1,5,5,0,-1,55),(393,1,6,5,0,-1,20),(394,1,1,6,0,-1,16),(395,1,2,6,0,-1,16),(396,1,3,6,0,-1,15),(397,1,4,6,0,-1,15),(398,1,5,6,0,-1,20),(399,1,6,6,0,-1,20),(400,1,1,1,1,-1,20),(401,1,2,1,1,-1,18),(402,1,3,1,1,-1,18),(403,1,4,1,1,-1,57),(404,1,5,1,1,-1,17),(405,1,6,1,1,-1,17),(406,1,1,2,1,-1,20),(407,1,2,2,1,-1,20),(408,1,3,2,1,-1,18),(409,1,4,2,1,-1,18),(410,1,5,2,1,-1,18),(411,1,6,2,1,-1,17),(412,1,1,3,1,-1,55),(413,1,2,3,1,-1,20),(414,1,3,3,1,-1,56),(415,1,4,3,1,-1,16),(416,1,5,3,1,-1,16),(417,1,6,3,1,-1,16),(418,1,1,4,1,-1,20),(419,1,2,4,1,-1,20),(420,1,3,4,1,-1,55),(421,1,4,4,1,-1,20),(422,1,5,4,1,-1,16),(423,1,6,4,1,-1,16),(424,1,1,5,1,-1,20),(425,1,2,5,1,-1,20),(426,1,3,5,1,-1,20),(427,1,4,5,1,-1,19),(428,1,5,5,1,-1,19),(429,1,6,5,1,-1,19),(430,1,1,6,1,-1,20),(431,1,2,6,1,-1,55),(432,1,3,6,1,-1,20),(433,1,4,6,1,-1,20),(434,1,5,6,1,-1,19),(435,1,6,6,1,-1,19),(436,1,3,2,1,-1,20),(437,1,3,4,1,-1,56),(438,1,3,3,1,-1,20),(439,1,4,3,1,-1,20),(440,1,1,1,1,0,20),(441,1,2,1,1,0,20),(442,1,3,1,1,0,20),(443,1,4,1,1,0,20),(444,1,5,1,1,0,20),(445,1,6,1,1,0,55),(446,1,1,2,1,0,20),(447,1,2,2,1,0,55),(448,1,3,2,1,0,20),(449,1,4,2,1,0,20),(450,1,5,2,1,0,16),(451,1,6,2,1,0,60),(452,1,1,3,1,0,19),(453,1,2,3,1,0,15),(454,1,3,3,1,0,20),(455,1,4,3,1,0,55),(456,1,5,3,1,0,16),(457,1,6,3,1,0,58),(458,1,1,4,1,0,19),(459,1,2,4,1,0,15),(460,1,3,4,1,0,15),(461,1,4,4,1,0,16),(462,1,5,4,1,0,16),(463,1,6,4,1,0,60),(464,1,1,5,1,0,15),(465,1,2,5,1,0,16),(466,1,3,5,1,0,21),(467,1,4,5,1,0,17),(468,1,5,5,1,0,17),(469,1,6,5,1,0,60),(470,1,1,6,1,0,15),(471,1,2,6,1,0,16),(472,1,3,6,1,0,16),(473,1,4,6,1,0,17),(474,1,5,6,1,0,17),(475,1,6,6,1,0,60),(476,1,4,5,1,-1,20),(477,1,1,1,1,1,16),(478,1,2,1,1,1,15),(479,1,3,1,1,1,17),(480,1,4,1,1,1,17),(481,1,5,1,1,1,17),(482,1,6,1,1,1,60),(483,1,1,2,1,1,15),(484,1,2,2,1,1,15),(485,1,3,2,1,1,60),(486,1,4,2,1,1,60),(487,1,5,2,1,1,58),(488,1,6,2,1,1,60),(489,1,1,3,1,1,17),(490,1,2,3,1,1,17),(491,1,3,3,1,1,60),(492,1,4,3,1,1,60),(493,1,5,3,1,1,60),(494,1,6,3,1,1,60),(495,1,1,4,1,1,17),(496,1,2,4,1,1,17),(497,1,3,4,1,1,58),(498,1,4,4,1,1,59),(499,1,5,4,1,1,60),(500,1,6,4,1,1,58),(501,1,1,5,1,1,58),(502,1,2,5,1,1,17),(503,1,3,5,1,1,17),(504,1,4,5,1,1,60),(505,1,5,5,1,1,17),(506,1,6,5,1,1,17),(507,1,1,6,1,1,17),(508,1,2,6,1,1,58),(509,1,3,6,1,1,17),(510,1,4,6,1,1,17),(511,1,5,6,1,1,15),(512,1,6,6,1,1,58),(513,1,1,1,0,1,18),(514,1,2,1,0,1,18),(515,1,3,1,0,1,18),(516,1,4,1,0,1,17),(517,1,5,1,0,1,15),(518,1,6,1,0,1,15),(519,1,1,2,0,1,18),(520,1,2,2,0,1,18),(521,1,3,2,0,1,17),(522,1,4,2,0,1,17),(523,1,5,2,0,1,17),(524,1,6,2,0,1,15),(525,1,1,3,0,1,20),(526,1,2,3,0,1,58),(527,1,3,3,0,1,17),(528,1,4,3,0,1,60),(529,1,5,3,0,1,17),(530,1,6,3,0,1,17),(531,1,1,4,0,1,18),(532,1,2,4,0,1,18),(533,1,3,4,0,1,17),(534,1,4,4,0,1,60),(535,1,5,4,0,1,60),(536,1,6,4,0,1,60),(537,1,1,5,0,1,57),(538,1,2,5,0,1,57),(539,1,3,5,0,1,60),(540,1,4,5,0,1,60),(541,1,5,5,0,1,60),(542,1,6,5,0,1,60),(543,1,1,6,0,1,18),(544,1,2,6,0,1,18),(545,1,3,6,0,1,60),(546,1,4,6,0,1,60),(547,1,5,6,0,1,60),(548,1,6,6,0,1,58),(549,1,1,1,-1,1,17),(550,1,2,1,-1,1,17),(551,1,3,1,-1,1,18),(552,1,4,1,-1,1,18),(553,1,5,1,-1,1,18),(554,1,6,1,-1,1,18),(555,1,1,2,-1,1,18),(556,1,2,2,-1,1,18),(557,1,3,2,-1,1,18),(558,1,4,2,-1,1,18),(559,1,5,2,-1,1,20),(560,1,6,2,-1,1,18),(561,1,1,3,-1,1,18),(562,1,2,3,-1,1,57),(563,1,3,3,-1,1,18),(564,1,4,3,-1,1,20),(565,1,5,3,-1,1,20),(566,1,6,3,-1,1,20),(567,1,1,4,-1,1,57),(568,1,2,4,-1,1,18),(569,1,3,4,-1,1,18),(570,1,4,4,-1,1,18),(571,1,5,4,-1,1,55),(572,1,6,4,-1,1,18),(573,1,1,5,-1,1,18),(574,1,2,5,-1,1,18),(575,1,3,5,-1,1,57),(576,1,4,5,-1,1,18),(577,1,5,5,-1,1,18),(578,1,6,5,-1,1,18),(579,1,1,6,-1,1,18),(580,1,2,6,-1,1,18),(581,1,3,6,-1,1,18),(582,1,4,6,-1,1,18),(583,1,5,6,-1,1,18),(584,1,6,6,-1,1,18),(585,1,1,1,-1,0,60),(586,1,2,1,-1,0,16),(587,1,3,1,-1,0,15),(588,1,4,1,-1,0,16),(589,1,5,1,-1,0,16),(590,1,6,1,-1,0,16),(591,1,1,2,-1,0,60),(592,1,2,2,-1,0,58),(593,1,3,2,-1,0,15),(594,1,4,2,-1,0,16),(595,1,5,2,-1,0,16),(596,1,6,2,-1,0,15),(597,1,1,3,-1,0,60),(598,1,2,3,-1,0,60),(599,1,3,3,-1,0,17),(600,1,4,3,-1,0,15),(601,1,5,3,-1,0,20),(602,1,6,3,-1,0,15),(603,1,1,4,-1,0,60),(604,1,2,4,-1,0,60),(605,1,3,4,-1,0,17),(606,1,4,4,-1,0,55),(607,1,5,4,-1,0,20),(608,1,6,4,-1,0,15),(609,1,1,5,-1,0,17),(610,1,2,5,-1,0,17),(611,1,3,5,-1,0,17),(612,1,4,5,-1,0,20),(613,1,5,5,-1,0,20),(614,1,6,5,-1,0,19),(615,1,1,6,-1,0,17),(616,1,2,6,-1,0,17),(617,1,3,6,-1,0,17),(618,1,4,6,-1,0,18),(619,1,5,6,-1,0,18),(620,1,6,6,-1,0,19),(621,1,1,1,-1,-1,16),(622,1,2,1,-1,-1,16),(623,1,3,1,-1,-1,16),(624,1,4,1,-1,-1,15),(625,1,5,1,-1,-1,17),(626,1,6,1,-1,-1,60),(627,1,1,2,-1,-1,16),(628,1,2,2,-1,-1,16),(629,1,3,2,-1,-1,16),(630,1,4,2,-1,-1,15),(631,1,5,2,-1,-1,17),(632,1,6,2,-1,-1,60),(633,1,1,3,-1,-1,16),(634,1,2,3,-1,-1,16),(635,1,3,3,-1,-1,16),(636,1,4,3,-1,-1,15),(637,1,5,3,-1,-1,15),(638,1,6,3,-1,-1,17),(639,1,1,4,-1,-1,16),(640,1,2,4,-1,-1,16),(641,1,3,4,-1,-1,16),(642,1,4,4,-1,-1,16),(643,1,5,4,-1,-1,15),(644,1,6,4,-1,-1,15),(645,1,1,5,-1,-1,16),(646,1,2,5,-1,-1,16),(647,1,3,5,-1,-1,16),(648,1,4,5,-1,-1,16),(649,1,5,5,-1,-1,15),(650,1,6,5,-1,-1,15),(651,1,1,6,-1,-1,17),(652,1,2,6,-1,-1,16),(653,1,3,6,-1,-1,16),(654,1,4,6,-1,-1,16),(655,1,5,6,-1,-1,16),(656,1,6,6,-1,-1,15),(657,1,2,2,-1,-1,55),(658,1,3,3,-1,-1,57),(659,1,1,5,-1,-1,15),(660,1,2,5,-1,-1,15),(661,1,2,6,-1,-1,15),(662,1,3,6,-1,-1,15),(664,1,1,1,-2,1,NULL),(665,1,2,1,-2,1,NULL),(666,1,3,1,-2,1,NULL),(667,1,4,1,-2,1,NULL),(668,1,5,1,-2,1,NULL),(669,1,6,1,-2,1,NULL),(670,1,1,2,-2,1,NULL),(671,1,2,2,-2,1,NULL),(672,1,3,2,-2,1,NULL),(673,1,4,2,-2,1,NULL),(674,1,5,2,-2,1,NULL),(675,1,6,2,-2,1,NULL),(676,1,1,3,-2,1,NULL),(677,1,2,3,-2,1,NULL),(678,1,3,3,-2,1,NULL),(679,1,4,3,-2,1,NULL),(680,1,5,3,-2,1,NULL),(681,1,6,3,-2,1,NULL),(682,1,1,4,-2,1,NULL),(683,1,2,4,-2,1,NULL),(684,1,3,4,-2,1,NULL),(685,1,4,4,-2,1,NULL),(686,1,5,4,-2,1,NULL),(687,1,6,4,-2,1,NULL),(688,1,1,5,-2,1,NULL),(689,1,2,5,-2,1,NULL),(690,1,3,5,-2,1,NULL),(691,1,4,5,-2,1,NULL),(692,1,5,5,-2,1,NULL),(693,1,6,5,-2,1,NULL),(694,1,1,6,-2,1,NULL),(695,1,2,6,-2,1,NULL),(696,1,3,6,-2,1,NULL),(697,1,4,6,-2,1,NULL),(698,1,5,6,-2,1,NULL),(699,1,6,6,-2,1,NULL),(700,1,1,1,-2,1,75),(701,1,2,1,-2,1,75),(702,1,3,1,-2,1,75),(703,1,4,1,-2,1,75),(704,1,5,1,-2,1,75),(705,1,6,1,-2,1,18),(706,1,1,2,-2,1,75),(707,1,2,2,-2,1,75),(708,1,3,2,-2,1,75),(709,1,4,2,-2,1,18),(710,1,5,2,-2,1,18),(711,1,6,2,-2,1,18),(712,1,1,3,-2,1,75),(713,1,2,3,-2,1,74),(714,1,3,3,-2,1,75),(715,1,4,3,-2,1,57),(716,1,5,3,-2,1,20),(717,1,6,3,-2,1,18),(718,1,1,4,-2,1,75),(719,1,2,4,-2,1,75),(720,1,3,4,-2,1,75),(721,1,4,4,-2,1,75),(722,1,5,4,-2,1,18),(723,1,6,4,-2,1,18),(724,1,1,5,-2,1,75),(725,1,2,5,-2,1,75),(726,1,3,5,-2,1,18),(727,1,4,5,-2,1,75),(728,1,5,5,-2,1,18),(729,1,6,5,-2,1,18),(730,1,1,6,-2,1,75),(731,1,2,6,-2,1,75),(732,1,3,6,-2,1,75),(733,1,4,6,-2,1,75),(734,1,5,6,-2,1,75),(735,1,6,6,-2,1,75),(736,1,5,3,-1,1,72),(737,1,5,5,0,1,71),(738,1,5,2,1,-1,69),(739,1,3,4,-1,-1,70),(740,1,2,3,-1,0,73),(741,1,4,3,0,0,67);

UNLOCK TABLES;

/*Table structure for table `worlds` */

DROP TABLE IF EXISTS `worlds`;

CREATE TABLE `worlds` (
  `id` int(11) NOT NULL auto_increment COMMENT 'ID of the world',
  `name` varchar(32) NOT NULL COMMENT 'Name of the world',
  `minbigx` int(2) NOT NULL COMMENT 'lowest bigxpos coords',
  `minbigy` int(2) NOT NULL COMMENT 'lowest bigypos coords',
  `maxbigx` int(2) NOT NULL COMMENT 'widest the world map is (in map level squares)',
  `maxbigy` int(2) NOT NULL COMMENT 'Tallest the world can be, in level map squares',
  `maxx` int(2) NOT NULL COMMENT 'The widest each of the bigsquares can be',
  `maxy` int(2) NOT NULL COMMENT 'The talest each of the big squares can be',
  `text` varchar(1000) default NULL COMMENT 'Text. A welcome or description of the world, in 1000 characters or less.',
  PRIMARY KEY  (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;

/*Data for the table `worlds` */

LOCK TABLES `worlds` WRITE;

insert  into `worlds`(`id`,`name`,`minbigx`,`minbigy`,`maxbigx`,`maxbigy`,`maxx`,`maxy`,`text`) values (1,'Midguard',-4,-4,4,4,6,6,'Land of the living mortals');

UNLOCK TABLES;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
